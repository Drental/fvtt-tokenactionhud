{
  "version": 3,
  "file": "bundle.min.js",
  "sources": [
    "logger.js",
    "settings/dnd5e/itemMacroOptions.js",
    "settings.js",
    "tagDialog.js",
    "actions/categories/compendiumHelper.js",
    "utilities/tagDialogHelper.js",
    "utilities/categoryResizer.js",
    "tokenactionhud.js",
    "actions/filter/filter.js",
    "actions/filter/filterManager.js",
    "enums/subcategoryType.js",
    "actions/categories/filterSubcategory.js",
    "actions/categories/compendiumSubcategory.js",
    "actions/categories/macroHelper.js",
    "actions/categories/macroSubcategory.js",
    "actions/categories/filterCategory.js",
    "actions/categories/categoryManager.js",
    "actions/entities/actionList.js",
    "actions/entities/actionCategory.js",
    "actions/entities/actionSubcategory.js",
    "actions/entities/actionSet.js",
    "actions/entities/action.js",
    "actions/genericActionHandler.js",
    "actions/actionHandler.js",
    "actions/actionListExtender.js",
    "actions/itemMacroExtender.js",
    "rollHandlers/rollHandler.js",
    "rollHandlers/preRollHandler.js",
    "rollHandlers/compendiumMacroPreHandler.js",
    "rollHandlers/pre-itemMacro.js",
    "managers/manager.js",
    "actions/bitd/bitd-actions.js",
    "rollHandlers/bitd/bitd-base.js",
    "managers/bitd.js",
    "actions/dnd5e/dnd5e-actions.js",
    "actions/dnd5e/dnd5e-actions-by-type.js",
    "rollHandlers/dnd5e/pre-magicItems.js",
    "actions/magicItemsExtender.js",
    "rollHandlers/dnd5e/dnd5e-base.js",
    "rollHandlers/dnd5e/dnd5e-minorqol.js",
    "rollHandlers/dnd5e/dnd5e-obsidian.js",
    "managers/dnd5e.js",
    "settings/dnd5e-settings.js",
    "actions/demonlord/demonlord-actions.js",
    "rollHandlers/demonlord/demonlord-base.js",
    "managers/demonlord.js",
    "actions/dungeonworld/dw-actions.js",
    "rollHandlers/dungeonworld/dw-base.js",
    "managers/dungeonworld.js",
    "settings/dungeonworld-settings.js",
    "actions/pf1/pf1-actions.js",
    "rollHandlers/pf1/pf1-base.js",
    "managers/pf1.js",
    "settings/pf1-settings.js",
    "actions/d35e/d35e-actions.js",
    "rollHandlers/d35e/d35e-base.js",
    "managers/d35e.js",
    "settings/d35e-settings.js",
    "actions/pf2e/pf2e-actions-pc.js",
    "actions/pf2e/pf2e-actions-npc.js",
    "actions/pf2e/pf2e-actions.js",
    "rollHandlers/pf2e/pf2e-base.js",
    "managers/pf2e.js",
    "settings/pf2e-settings.js",
    "actions/sfrpg/sfrpg-actions.js",
    "rollHandlers/sfrpg/sfrpg-base.js",
    "managers/sfrpg.js",
    "settings/sfrpg-settings.js",
    "actions/sw5e/sw5e-actions.js",
    "rollHandlers/sw5e/sw5e-base.js",
    "settings/sw5e-settings.js",
    "managers/sw5e.js",
    "actions/wfrp4e/wfrp4e-actions.js",
    "rollHandlers/wfrp4e/wfrp-base.js",
    "managers/wfrp4e.js",
    "actions/lancer/lancer-actions.js",
    "rollHandlers/lancer/lancer-base.js",
    "managers/lancer.js",
    "actions/swade/swade-actions.js",
    "rollHandlers/swade/swade-base.js",
    "rollHandlers/swade/swade-br2sw.js",
    "settings/swade-settings.js",
    "managers/swade.js",
    "actions/starwarsffg/starwarsffg-actions.js",
    "rollHandlers/starwarsffg/starwarsffg-base.js",
    "managers/starwarsffg.js",
    "actions/tormenta20/tormenta20-actions.js",
    "rollHandlers/tormenta20/tormenta20-base.js",
    "managers/tormenta20.js",
    "actions/symbaroum/symbaroum-actions.js",
    "rollHandlers/symbaroum/symbaroum-base.js",
    "managers/symbaroum.js",
    "actions/alienrpg/alienrpg-actions.js",
    "rollHandlers/alienrpg/alienrpg-base.js",
    "managers/alienrpg.js",
    "actions/od6s/od6s-actions.js",
    "rollHandlers/od6s/od6s-base.js",
    "managers/od6s.js",
    "actions/cthack/cthack-actions.js",
    "rollHandlers/cthack/cthack-base.js",
    "managers/cthack.js",
    "actions/kamigakari/kg-actions.js",
    "rollHandlers/kamigakari/kg-base.js",
    "managers/kamigakari.js",
    "actions/tagmar/tagmar-actions.js",
    "rollHandlers/tagmar/tagmar-base.js",
    "managers/tagmar.js",
    "init.js",
    "utilities/handlebars.js",
    "managers/systemManagerFactory.js"
  ],
  "sourcesContent": [
    "export class Logger {\n  static info(...args) {\n    console.log(\"Token Action HUD info |\", ...args);\n  }\n\n  static error(...args) {\n    console.error(\"Token Action HUD error |\", ...args);\n  }\n\n  static debug(...args) {\n    if (game.settings.get(\"token-action-hud\", \"debug\"))\n      Logger.info(\"debug:\", ...args);\n  }\n}\n",
    "export const ItemMacroOptions = {\n  SHOW_BOTH: \"tokenactionhud.settings.itemMacroReplace.showBoth\",\n  SHOW_ITEM_MACRO: \"tokenactionhud.settings.itemMacroReplace.showItemMacro\",\n  SHOW_ORIGINAL_ITEM: \"tokenactionhud.settings.itemMacroReplace.showOriginal\",\n};\n",
    "import { Logger } from \"./logger.js\";\nimport { ItemMacroOptions } from \"./settings/dnd5e/itemMacroOptions.js\";\nexport { Logger } from \"./logger.js\";\n\nconst updateFunc = (value) => {\n  Logger.debug(\"Settings updated. Refreshing HUD\");\n  if (game.tokenActionHUD) game.tokenActionHUD.updateSettings();\n};\nlet appName;\n\nexport const registerSettings = function (app, systemManager, rollHandlers) {\n  appName = app;\n\n  game.settings.register(appName, \"rollHandler\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.rollHandler.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.rollHandler.hint\"),\n    scope: \"world\",\n    config: true,\n    type: String,\n    choices: rollHandlers,\n    default: \"core\",\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"enabledForUser\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.enabledForUser.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.enabledForUser.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"alwaysShowHud\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.alwaysShowHud.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.alwaysShowHud.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showHudTitle\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.showHudTitle.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.showHudTitle.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showIcons\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.showIcons.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.showIcons.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"alwaysShowAdditionalCategories\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.alwaysShowAdditionalCategories.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.alwaysShowAdditionalCategories.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"onTokenHover\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.onTokenHover.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.onTokenHover.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"clickOpenCategory\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.clickOpenCategory.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.clickOpenCategory.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  systemManager.doRegisterSettings(appName, updateFunc);\n\n  if (game.modules.get(\"itemacro\")?.active) {\n    game.settings.register(appName, \"itemMacroReplace\", {\n      name: game.i18n.localize(\n        \"tokenactionhud.settings.dnd5e.itemMacroReplace.name\"\n      ),\n      hint: game.i18n.localize(\n        \"tokenactionhud.settings.dnd5e.itemMacroReplace.hint\"\n      ),\n      scope: \"client\",\n      config: true,\n      type: String,\n      choices: {\n        showBoth: game.i18n.localize(ItemMacroOptions.SHOW_BOTH),\n        showItemMacro: game.i18n.localize(ItemMacroOptions.SHOW_ITEM_MACRO),\n        showOriginal: game.i18n.localize(ItemMacroOptions.SHOW_ORIGINAL_ITEM),\n      },\n      default: \"showBoth\",\n      onChange: (value) => {\n        updateFunc(value);\n      },\n    });\n  }\n\n  game.settings.register(appName, \"playerPermission\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.playerPermission.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.playerPermission.hint\"),\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"renderItemOnRightClick\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.renderItemOnRightClick.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.renderItemOnRightClick.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"scale\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.scale.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.scale.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Number,\n    range: {\n      min: 0.8,\n      max: 2,\n      step: 0.1,\n    },\n    default: 1,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"background\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.background.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.background.hint\"),\n    scope: \"client\",\n    config: true,\n    type: String,\n    default: \"none\",\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"activeCssAsText\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.activeCssAsText.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.activeCssAsText.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"dropdown\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.dropdown.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.dropdown.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"debug\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.debug.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.debug.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  Logger.debug(\"available rollHandlers: \", rollHandlers);\n};\n\nexport function get(setting) {\n  return game.settings.get(appName, setting);\n}\n\nexport function set(setting, value) {\n  game.settings.set(appName, setting, value);\n}\n",
    "export class TagDialog extends Dialog {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n  tagify = null;\n\n  constructor(dialogData, options) {\n    super(options);\n    this.data = dialogData;\n  }\n\n  static showDialog(\n    suggestions,\n    selected,\n    indexChoice,\n    title,\n    hbsData,\n    submitFunc\n  ) {\n    TagDialog._prepareHook(suggestions, selected, indexChoice);\n\n    let template = Handlebars.compile(\n      \"{{> modules/token-action-hud/templates/tagdialog.hbs}}\"\n    );\n    let content = template(hbsData);\n\n    let d = new TagDialog({\n      title: title,\n      content: content,\n      buttons: {\n        accept: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize(\"tokenactionhud.accept\"),\n          callback: async (html) => {\n            let selection = TagDialog.tagify.value.map((c) => {\n              return { id: c.id, value: c.value, type: c.type };\n            });\n            let index = html.find('select[id=\"token-action-hud-index\"]');\n            let indexValue;\n            if (index.length > 0) indexValue = index[0]?.value;\n            await submitFunc(selection, indexValue);\n          },\n        },\n        cancel: {\n          icon: '<i class=\"fas fa-times\"></i>',\n          label: game.i18n.localize(\"tokenactionhud.cancel\"),\n        },\n      },\n      default: \"accept\",\n    });\n\n    d.render(true);\n  }\n\n  static _prepareHook(choices, selection, indexChoice) {\n    Hooks.once(\"renderTagDialog\", (app, html, options) => {\n      html.css(\"height\", \"auto\");\n\n      var $index = html.find('select[id=\"token-action-hud-index\"]');\n      if ($index.length > 0) {\n        if (indexChoice) $index.val(indexChoice);\n\n        $index.css(\"background\", \"#fff\");\n        $index.css(\"color\", \"#000\");\n      }\n\n      var $tagFilter = html.find('input[class=\"token-action-hud-taginput\"]');\n\n      if ($tagFilter.length > 0) {\n        let options = {\n          delimiters: \";\",\n          maxTags: \"Infinity\",\n          dropdown: {\n            maxItems: 20, // <- maxumum allowed rendered suggestions\n            classname: \"tags-look\", // <- custom classname for this dropdown, so it could be targeted\n            enabled: 0, // <- show suggestions on focus\n            closeOnSelect: false, // <- do not hide the suggestions dropdown once an item has been selected\n          },\n        };\n\n        if (choices) options.whitelist = choices;\n\n        TagDialog.tagify = new Tagify($tagFilter[0], options);\n\n        var $tagifyBox = $(document).find(\".tagify\");\n\n        $tagifyBox.css(\"background\", \"#fff\");\n        $tagifyBox.css(\"color\", \"#000\");\n\n        if (selection) TagDialog.tagify.addTags(selection);\n\n        // \"remove all tags\" button event listener\n        let clearBtn = html.find('button[class=\"tags--removeAllBtn\"]');\n        clearBtn.on(\n          \"click\",\n          TagDialog.tagify.removeAllTags.bind(TagDialog.tagify)\n        );\n        clearBtn.css(\"float\", \"right\");\n        clearBtn.css(\"width\", \"auto\");\n      }\n    });\n  }\n\n  /** @override */\n  _onKeyDown(event) {\n    // Close dialog\n    if (event.key === \"Escape\" && !event.target.className.includes(\"tagify\")) {\n      event.preventDefault();\n      event.stopPropagation();\n      return this.close();\n    }\n\n    // Confirm default choice\n    if (\n      event.key === \"Enter\" &&\n      this.data.default &&\n      !event.target.className.includes(\"tagify\")\n    ) {\n      event.preventDefault();\n      event.stopPropagation();\n      const defaultChoice = this.data.buttons[this.data.default];\n      return this.submit(defaultChoice);\n    }\n  }\n}\n",
    "import * as settings from \"../../settings.js\";\n\nexport class CompendiumHelper {\n  constructor() {}\n\n  static getCompendiumChoicesAsTagifyEntries() {\n    const packs =\n      \"filter\" in game.packs.entries ? game.packs.entries : game.packs;\n\n    return packs\n      .filter((p) => {\n        let packTypes = [\"JournalEntry\", \"Macro\", \"RollTable\", \"Playlist\"];\n        return packTypes.includes(p.metadata.entity);\n      })\n      .filter((p) => game.user.isGM || !p.private)\n      .map((p) => {\n        let key = `${p.metadata.package}.${p.metadata.name}`;\n        return { id: key, value: p.metadata.label, type: \"comp\" };\n      });\n  }\n\n  static exists(key) {\n    return !!game.packs.get(key);\n  }\n\n  static async getEntriesForActions(key, delimiter) {\n    let entries = await CompendiumHelper.getCompendiumEntries(key);\n    let macroType = CompendiumHelper.getCompendiumMacroType(key);\n    return entries.map((e) => {\n      let encodedValue = [macroType, key, e._id].join(delimiter);\n      let img = CompendiumHelper.getImage(e);\n      return { name: e.name, encodedValue: encodedValue, id: e._id, img: img };\n    });\n  }\n\n  static getCompendiumMacroType(key) {\n    let pack = game?.packs?.get(key);\n    if (!pack) return \"\";\n    let compendiumEntities = pack.metadata.entity;\n\n    switch (compendiumEntities) {\n      case \"Macro\":\n        return \"compendiumMacro\";\n      case \"Playlist\":\n        return \"compendiumPlaylist\";\n      default:\n        return \"compendiumEntry\";\n    }\n  }\n\n  static async getCompendiumEntriesForFilter(key) {\n    let entries = await CompendiumHelper.getCompendiumEntries(key);\n\n    return entries.map((e) => {\n      return { value: e.name, id: e._id };\n    });\n  }\n\n  static async getCompendiumEntries(key) {\n    let pack = game.packs.get(key);\n    if (!pack) return [];\n\n    let packEntries =\n      pack.index.length > 0 ? pack.index : await pack.getIndex();\n\n    if (pack.metadata.entity === \"Playlist\") {\n      let entries = await CompendiumHelper._getPlaylistEntries(pack);\n      return entries;\n    }\n\n    return packEntries;\n  }\n\n  static async _getPlaylistEntries(pack) {\n    let playlists = await pack.getContent();\n    return playlists.reduce((acc, playlist) => {\n      playlist.sounds.forEach((s) => {\n        acc.push({ _id: `${playlist._id}>${s._id}`, name: s.name });\n      });\n      return acc;\n    }, []);\n  }\n\n  static getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n}\n",
    "import { TagDialog } from \"../tagDialog.js\";\nimport { CompendiumHelper } from \"../actions/categories/compendiumHelper.js\";\n\nexport class TagDialogHelper {\n  static showFilterDialog(filterManager, subcategoryId) {\n    TagDialogHelper._showFilterDialog(filterManager, subcategoryId);\n  }\n\n  static showSubcategoryDialogue(categoryManager, categoryId, categoryName) {\n    TagDialogHelper._showSubcategoryDialogue(\n      categoryManager,\n      categoryId,\n      categoryName\n    );\n  }\n\n  static showCategoryDialog(categoryManager) {\n    TagDialogHelper._showCategoryDialog(categoryManager);\n  }\n\n  static async submitCategories(categoryManager, choices, push) {\n    await categoryManager.submitCategories(choices, push);\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  static async submitSubcategories(categoryManager, categoryId, choices) {\n    await categoryManager.submitSubcategories(categoryId, choices);\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  static async submitFilter(filterManager, categoryId, elements, isBlocklist) {\n    await filterManager.setFilteredElements(categoryId, elements, isBlocklist);\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  static _showFilterDialog(filterManager, subcategoryId) {\n    let suggestions = filterManager.getSuggestions(subcategoryId);\n    let selected = filterManager.getFilteredElements(subcategoryId);\n    let indexChoice = filterManager.isBlocklist(subcategoryId) ? 1 : 0;\n\n    let title = game.i18n.localize(\"tokenactionhud.filterTitle\");\n\n    let hbsData = {\n      topLabel: game.i18n.localize(\"tokenactionhud.filterTagExplanation\"),\n      placeholder: game.i18n.localize(\"tokenactionhud.filterPlaceholder\"),\n      clearButtonText: game.i18n.localize(\"tokenactionhud.clearButton\"),\n      indexExplanationLabel: game.i18n.localize(\n        \"tokenactionhud.blocklistLabel\"\n      ),\n      index: [\n        { value: 0, text: game.i18n.localize(\"tokenactionhud.allowlist\") },\n        { value: 1, text: game.i18n.localize(\"tokenactionhud.blocklist\") },\n      ],\n    };\n\n    let submitFunc = async (choices, indexValue) => {\n      let isBlocklist = parseInt(indexValue) != 0 ? true : false;\n      await TagDialogHelper.submitFilter(\n        filterManager,\n        subcategoryId,\n        choices,\n        isBlocklist\n      );\n    };\n\n    TagDialog.showDialog(\n      suggestions,\n      selected,\n      indexChoice,\n      title,\n      hbsData,\n      submitFunc\n    );\n  }\n\n  static _showSubcategoryDialogue(categoryManager, categoryId, categoryName) {\n    let suggestions = CompendiumHelper.getCompendiumChoicesAsTagifyEntries();\n    let selected =\n      categoryManager.getCategorySubcategoriesAsTagifyEntries(categoryId);\n\n    let title =\n      game.i18n.localize(\"tokenactionhud.subcategoryTagTitle\") +\n      ` (${categoryName})`;\n\n    let hbsData = {\n      topLabel: game.i18n.localize(\"tokenactionhud.subcategoryTagExplanation\"),\n      placeholder: game.i18n.localize(\"tokenactionhud.filterPlaceholder\"),\n      clearButtonText: game.i18n.localize(\"tokenactionhud.clearButton\"),\n    };\n\n    let submitFunc = async (choices, indexValue) => {\n      let subcats = choices.map((c) => {\n        return { id: c.id, title: c.value, type: c.type };\n      });\n      await TagDialogHelper.submitSubcategories(\n        categoryManager,\n        categoryId,\n        subcats\n      );\n    };\n\n    TagDialog.showDialog(\n      suggestions,\n      selected,\n      null,\n      title,\n      hbsData,\n      submitFunc\n    );\n  }\n\n  static _showCategoryDialog(categoryManager) {\n    let selected = categoryManager.getExistingCategories();\n    let indexChoice = categoryManager.arePush() ? 1 : 0;\n    let title = game.i18n.localize(\"tokenactionhud.categoryTagTitle\");\n\n    let hbsData = {\n      topLabel: game.i18n.localize(\"tokenactionhud.categoryTagExplanation\"),\n      placeholder: game.i18n.localize(\"tokenactionhud.filterPlaceholder\"),\n      clearButtonText: game.i18n.localize(\"tokenactionhud.clearButton\"),\n      indexExplanationLabel: game.i18n.localize(\n        \"tokenactionhud.pushLabelExplanation\"\n      ),\n      index: [\n        { value: 0, text: game.i18n.localize(\"tokenactionhud.unshift\") },\n        { value: 1, text: game.i18n.localize(\"tokenactionhud.push\") },\n      ],\n    };\n\n    let submitFunc = async (choices, indexValue) => {\n      let push = parseInt(indexValue) != 0 ? true : false;\n      await TagDialogHelper.submitCategories(categoryManager, choices, push);\n    };\n\n    TagDialog.showDialog(\n      null,\n      selected,\n      indexChoice,\n      title,\n      hbsData,\n      submitFunc\n    );\n  }\n}\n",
    "export class CategoryResizer {\n  static resizeHoveredCategory(catId) {\n    function jq(myid) {\n      return \"#\" + myid.replace(/(:|\\.|\\[|\\]|,|=|@)/g, \"\\\\$1\");\n    }\n\n    let id = jq(catId);\n    let category = $(id);\n\n    if (!category[0]) return;\n\n    let content = category.find(\".tah-content\");\n    let isOneLineFit = category.hasClass(\"oneLine\");\n    let actions = category.find(\".tah-actions\");\n\n    if (actions.length === 0) return;\n\n    // reset content to original width\n    let contentDefaultWidth = 300;\n    let minWidth = 200;\n    CategoryResizer.resizeActions(actions, contentDefaultWidth);\n\n    let step = 30;\n\n    let bottomLimit = $(document).find(\"#hotbar\").offset().top - 20;\n    let rightLimit = $(document).find(\"#sidebar\").offset().left - 20;\n\n    let maxRequiredWidth = CategoryResizer.calculateMaxRequiredWidth(actions);\n    while (\n      CategoryResizer.shouldIncreaseWidth(\n        content,\n        actions,\n        maxRequiredWidth,\n        bottomLimit,\n        rightLimit,\n        isOneLineFit\n      )\n    ) {\n      let box = actions[0].getBoundingClientRect();\n      let boxWidth = box.width;\n      let cssWidth = actions.width();\n\n      if (boxWidth > maxRequiredWidth) return;\n\n      let newWidth = cssWidth + step;\n\n      CategoryResizer.resizeActions(actions, newWidth);\n    }\n\n    let priorWidth;\n    while (\n      CategoryResizer.shouldShrinkWidth(\n        content,\n        actions,\n        minWidth,\n        bottomLimit,\n        rightLimit,\n        isOneLineFit\n      )\n    ) {\n      let box = actions[0].getBoundingClientRect();\n      let boxWidth = box.width;\n      let cssWidth = actions.width();\n\n      if (boxWidth < minWidth) return;\n\n      let newWidth = cssWidth - step;\n\n      CategoryResizer.resizeActions(actions, newWidth);\n    }\n  }\n\n  static calculateMaxRequiredWidth(actions) {\n    let maxWidth = 0;\n\n    actions.each(function () {\n      let action = $(this);\n      if (action.hasClass(\"excludeFromWidthCalculation\")) return;\n\n      let totalWidth = 0;\n      Array.from(action.children()).forEach((c) => {\n        let child = $(c);\n        let childWidth = child.width();\n        let marginWidth =\n          parseInt(child.css(\"marginLeft\")) +\n          parseInt(child.css(\"marginRight\"));\n\n        totalWidth += childWidth + marginWidth;\n      });\n\n      if (totalWidth > maxWidth) maxWidth = totalWidth;\n    });\n\n    return maxWidth;\n  }\n\n  static shouldIncreaseWidth(\n    content,\n    actions,\n    maxRequiredWidth,\n    bottomLimit,\n    rightLimit,\n    isOneLineFit\n  ) {\n    let contentRect = content[0].getBoundingClientRect();\n    let actionsRect = actions[0].getBoundingClientRect();\n\n    if (actionsRect.right >= rightLimit) return false;\n\n    if (actionsRect.width >= maxRequiredWidth) return false;\n\n    let actionArray = Array.from(content.find(\".tah-action\")).sort(\n      (a, b) => $(a).offset().top - $(b).offset().top\n    );\n    let rows = CategoryResizer.calculateRows(actionArray);\n    let columns = CategoryResizer.calculateMaxRowButtons(actionArray);\n    if (contentRect.bottom <= bottomLimit && columns >= rows && !isOneLineFit)\n      return false;\n\n    return true;\n  }\n\n  static shouldShrinkWidth(\n    content,\n    actions,\n    actionsMinWidth,\n    bottomLimit,\n    rightLimit,\n    isOneLineFit\n  ) {\n    let contentRect = content[0].getBoundingClientRect();\n    let actionsRect = actions[0].getBoundingClientRect();\n\n    if (contentRect.bottom >= bottomLimit) return false;\n\n    if (actionsRect.width <= actionsMinWidth) return false;\n\n    let actionArray = Array.from(content.find(\".tah-action\")).sort(\n      (a, b) => $(a).offset().top - $(b).offset().top\n    );\n    let rows = CategoryResizer.calculateRows(actionArray);\n    let columns = CategoryResizer.calculateMaxRowButtons(actionArray);\n\n    if (\n      actionsRect.right <= rightLimit &&\n      (rows >= columns - 1 || isOneLineFit)\n    )\n      return false;\n\n    return true;\n  }\n\n  static calculateRows(actionArray) {\n    var rows = 0;\n    let currentTopOffset = 0;\n    let closeRange = 5;\n\n    actionArray.forEach((a) => {\n      let offset = $(a).offset().top;\n\n      if (Math.abs(currentTopOffset - offset) >= closeRange) {\n        rows++;\n        currentTopOffset = offset;\n      }\n    });\n\n    return rows;\n  }\n\n  static calculateMaxRowButtons(actionArray) {\n    if (actionArray.length < 2) return actionArray.length;\n\n    var rowButtons = [];\n    let currentTopOffset = 0;\n    let rowButtonCounter = 0;\n    let closeRange = 5;\n\n    actionArray.forEach((a) => {\n      let offset = $(a).offset().top;\n\n      if (Math.abs(currentTopOffset - offset) >= closeRange) {\n        if (rowButtonCounter >= 1) rowButtons.push(rowButtonCounter);\n\n        currentTopOffset = offset;\n        rowButtonCounter = 1;\n      } else {\n        rowButtonCounter++;\n      }\n\n      // if it's the final object, add counter anyway in case it was missed.\n      if (\n        rowButtonCounter >= 1 &&\n        actionArray.indexOf(a) === actionArray.length - 1\n      )\n        rowButtons.push(rowButtonCounter);\n    });\n\n    return Math.max(...rowButtons);\n  }\n\n  static resizeActions(actions, newWidth) {\n    // resize each action with new width\n    actions.map(function () {\n      $(this).css({ width: newWidth + \"px\", \"min-width\": newWidth + \"px\" });\n    });\n  }\n}\n",
    "import * as settings from \"./settings.js\";\nimport { TagDialogHelper } from \"./utilities/tagDialogHelper.js\";\nimport { CategoryResizer } from \"./utilities/categoryResizer.js\";\n\nexport class TokenActionHUD extends Application {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  refresh_timeout = null;\n  tokens = null;\n  rendering = false;\n  categoryHovered = \"\";\n  defaultLeftPos = 150;\n  defaultTopPos = 80;\n\n  constructor(systemManager) {\n    super();\n    this.systemManager = systemManager;\n  }\n\n  async init(user) {\n    this.actions = await this.systemManager.getActionHandler(user);\n\n    this.rollHandler = this.systemManager.getRollHandler();\n    this.filterManager = this.systemManager.getFilterManager();\n    this.categoryManager = this.systemManager.getCategoryManager();\n  }\n\n  updateSettings() {\n    this.updateRollHandler();\n    this.update();\n  }\n\n  updateRollHandler() {\n    this.rollHandler = this.systemManager.getRollHandler();\n  }\n\n  setTokensReference(tokens) {\n    this.tokens = tokens;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      template: \"/modules/token-action-hud/templates/template.hbs\",\n      id: \"token-action-hud\",\n      classes: [],\n      width: 200,\n      height: 20,\n      left: 150,\n      top: 80,\n      scale: 1,\n      background: \"none\",\n      popOut: false,\n      minimizable: false,\n      resizable: false,\n      title: \"token-action-hud\",\n      dragDrop: [],\n      tabs: [],\n      scrollY: [],\n    });\n  }\n\n  getScale() {\n    const scale = parseFloat(settings.get(\"scale\"));\n\n    if (scale < 0.8) return 0.8;\n\n    if (scale > 2) return 2;\n\n    return scale;\n  }\n\n  getBackground() {\n    return settings.get(\"background\");\n  }\n\n  /** @override */\n  getData(options = {}) {\n    const data = super.getData();\n    data.actions = this.targetActions;\n    data.id = \"token-action-hud\";\n    data.hovering = settings.get(\"onTokenHover\");\n    data.scale = this.getScale();\n    data.background = this.getBackground();\n    settings.Logger.debug(\"HUD data:\", data);\n    return data;\n  }\n\n  /** @override */\n  activateListeners(html) {\n    const tokenactionhud = \"#token-action-hud\";\n    const repositionIcon = \"#tah-reposition\";\n    const categoriesIcon = \"#tah-categories\";\n    const action = \".tah-action\";\n\n    const handleClick = (e) => {\n      let target = e.target;\n\n      if (target.tagName !== \"BUTTON\") target = e.currentTarget.children[0];\n\n      let value = target.value;\n      try {\n        this.rollHandler.handleActionEvent(e, value);\n      } catch (error) {\n        settings.Logger.error(e);\n      }\n    };\n\n    html.find(action).on(\"click\", (e) => {\n      handleClick(e);\n    });\n\n    html.find(action).contextmenu((e) => {\n      handleClick(e);\n    });\n\n    function handlePossibleFilterButtonClick(e) {\n      let target = e.target;\n      if (target.value.length === 0) return;\n\n      let id = target.value;\n      let categoryTitle = target.innerText ?? target.outerText;\n\n      if (game.tokenActionHUD.categoryManager.isCompendiumCategory(id))\n        TagDialogHelper.showSubcategoryDialogue(\n          game.tokenActionHUD.categoryManager,\n          id,\n          categoryTitle\n        );\n      else\n        TagDialogHelper.showFilterDialog(game.tokenActionHUD.filterManager, id);\n    }\n\n    function handlePossibleFilterSubtitleClick(e) {\n      let target = e.target;\n      if (target.id.length === 0) return;\n\n      let id = target.id;\n\n      TagDialogHelper.showFilterDialog(game.tokenActionHUD.filterManager, id);\n    }\n\n    function closeCategory(event) {\n      if (game.tokenActionHUD.rendering) return;\n      let category = $(this)[0];\n      $(category).removeClass(\"hover\");\n      let id = category.id;\n      game.tokenActionHUD.clearHoveredCategory(id);\n    }\n\n    function openCategory(event) {\n      let category = $(this)[0];\n      closeAllCategories(event);\n      $(category).addClass(\"hover\");\n      let id = category.id;\n      game.tokenActionHUD.setHoveredCategory(id);\n      CategoryResizer.resizeHoveredCategory(id);\n    }\n\n    function closeAllCategories(event) {\n      html.find(\".tah-category\").removeClass(\"hover\");\n    }\n\n    function toggleCategory(event) {\n      let category = $(this.parentElement);\n      let boundClick;\n      if ($(category).hasClass(\"hover\")) {\n        boundClick = closeCategory.bind(this.parentElement);\n        boundClick(event);\n      } else {\n        boundClick = openCategory.bind(this.parentElement);\n        boundClick(event);\n      }\n    }\n\n    html\n      .find(\".tah-title-button\")\n      .contextmenu(\"click\", (e) => handlePossibleFilterButtonClick(e));\n\n    html\n      .find(\".tah-subtitle\")\n      .click(\"click\", (e) => handlePossibleFilterSubtitleClick(e));\n    html\n      .find(\".tah-subtitle\")\n      .contextmenu(\"click\", (e) => handlePossibleFilterSubtitleClick(e));\n\n    if (settings.get(\"clickOpenCategory\")) {\n      html.find(\".tah-title-button\").click(\"click\", toggleCategory);\n    } else {\n      html.find(\".tah-category\").hover(openCategory, closeCategory);\n    }\n\n    html.find(categoriesIcon).mousedown((ev) => {\n      ev.preventDefault();\n      ev = ev || window.event;\n\n      TagDialogHelper._showCategoryDialog(this.categoryManager);\n    });\n\n    html.find(repositionIcon).mousedown((ev) => {\n      ev.preventDefault();\n      ev = ev || window.event;\n\n      let hud = $(document.body).find(tokenactionhud);\n      let marginLeft = parseInt(hud.css(\"marginLeft\").replace(\"px\", \"\"));\n      let marginTop = parseInt(hud.css(\"marginTop\").replace(\"px\", \"\"));\n\n      dragElement(document.getElementById(\"token-action-hud\"));\n      let pos1 = 0,\n        pos2 = 0,\n        pos3 = 0,\n        pos4 = 0;\n\n      function dragElement(elmnt) {\n        elmnt.onmousedown = dragMouseDown;\n\n        function dragMouseDown(e) {\n          e = e || window.event;\n          e.preventDefault();\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n\n          document.onmouseup = closeDragElement;\n          document.onmousemove = elementDrag;\n        }\n\n        function elementDrag(e) {\n          e = e || window.event;\n          e.preventDefault();\n          // calculate the new cursor position:\n          pos1 = pos3 - e.clientX;\n          pos2 = pos4 - e.clientY;\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n          // set the element's new position:\n          elmnt.style.top = elmnt.offsetTop - pos2 - marginTop + \"px\";\n          elmnt.style.left = elmnt.offsetLeft - pos1 - marginLeft + \"px\";\n          elmnt.style.position = \"fixed\";\n          elmnt.style.zIndex = 100;\n        }\n\n        function closeDragElement() {\n          // stop moving when mouse button is released:\n          elmnt.onmousedown = null;\n          document.onmouseup = null;\n          document.onmousemove = null;\n          let xPos =\n            elmnt.offsetLeft - pos1 > window.innerWidth\n              ? window.innerWidth\n              : elmnt.offsetLeft - pos1;\n          let yPos =\n            elmnt.offsetTop - pos2 > window.innerHeight - 20\n              ? window.innerHeight - 100\n              : elmnt.offsetTop - pos2;\n          xPos = xPos < 0 ? 0 : xPos;\n          yPos = yPos < 0 ? 0 : yPos;\n          if (\n            xPos != elmnt.offsetLeft - pos1 ||\n            yPos != elmnt.offsetTop - pos2\n          ) {\n            elmnt.style.top = yPos + \"px\";\n            elmnt.style.left = xPos + \"px\";\n          }\n          settings.Logger.info(\n            `Setting position to x: ${xPos}px, y: ${yPos}px, and saving in user flags.`\n          );\n          game.user.update({\n            flags: {\n              \"token-action-hud\": { hudPos: { top: yPos, left: xPos } },\n            },\n          });\n        }\n      }\n    });\n\n    $(document)\n      .find(\".tah-filterholder\")\n      .parents(\".tah-subcategory\")\n      .css(\"cursor\", \"pointer\");\n  }\n\n  applySettings() {\n    if (!settings.get(\"dropdown\")) {\n      $(document).find(\".tah-content\").css({\n        bottom: \"40px\",\n        \"flex-direction\": \"column-reverse\",\n      });\n    }\n  }\n\n  // Positioning\n  trySetPos() {\n    if (!(this.targetActions && this.targetActions.tokenId)) return;\n\n    let hudTitle = $(document).find(\"#tah-hudTitle\");\n    if (hudTitle.length > 0)\n      hudTitle.css(\"top\", -hudTitle[0].getBoundingClientRect().height);\n\n    let token = canvas?.tokens?.placeables.find(\n      (t) => t.data._id === this.targetActions?.tokenId\n    );\n    if (settings.get(\"onTokenHover\") && token) {\n      this.setHoverPos(token);\n    } else {\n      this.setUserPos();\n    }\n\n    this.restoreCategoryHoverState();\n    this.rendering = false;\n  }\n\n  setUserPos() {\n    if (\n      !(\n        game.user.data.flags[\"token-action-hud\"] &&\n        game.user.data.flags[\"token-action-hud\"].hudPos\n      )\n    )\n      return;\n\n    let pos = game.user.data.flags[\"token-action-hud\"].hudPos;\n    let defaultLeftPos = this.defaultLeftPos;\n    let defaultTopPos = this.defaultTopPos;\n\n    return new Promise((resolve) => {\n      function check() {\n        let elmnt = document.getElementById(\"token-action-hud\");\n        if (elmnt) {\n          elmnt.style.bottom = null;\n          elmnt.style.top =\n            pos.top < 5 || pos.top > window.innerHeight + 5\n              ? defaultTopPos + \"px\"\n              : pos.top + \"px\";\n          elmnt.style.left =\n            pos.left < 5 || pos.left > window.innerWidth + 5\n              ? defaultLeftPos + \"px\"\n              : pos.left + \"px\";\n          elmnt.style.position = \"fixed\";\n          elmnt.style.zIndex = 100;\n          resolve();\n        } else {\n          setTimeout(check, 30);\n        }\n      }\n\n      check();\n    });\n  }\n\n  setHoverPos(token) {\n    return new Promise((resolve) => {\n      function check(token) {\n        let elmnt = $(\"#token-action-hud\");\n        if (elmnt) {\n          elmnt.css(\"bottom\", null);\n          elmnt.css(\n            \"left\",\n            token.worldTransform.tx +\n              (token.data.width * canvas.dimensions.size + 55) *\n                canvas.scene._viewPosition.scale +\n              \"px\"\n          );\n          elmnt.css(\"top\", token.worldTransform.ty + 0 + \"px\");\n          elmnt.css(\"position\", \"fixed\");\n          elmnt.css(\"zIndex\", 100);\n          resolve();\n        } else {\n          setTimeout(check, 30);\n        }\n      }\n\n      check(token);\n    });\n  }\n\n  setHoveredCategory(catId) {\n    this.categoryHovered = catId;\n  }\n\n  clearHoveredCategory(catId) {\n    if (this.categoryHovered === catId) this.categoryHovered = \"\";\n  }\n\n  restoreCategoryHoverState() {\n    if (this.categoryHovered === \"\") return;\n\n    let id = `#${this.categoryHovered}`;\n    let category = $(id);\n\n    if (!category[0]) return;\n\n    if (settings.get(\"clickOpenCategory\")) {\n      let button = category.find(\".tah-title-button\")[0];\n      button.click();\n    } else {\n      category.mouseenter();\n    }\n  }\n\n  async resetHud() {\n    await this.resetFlags();\n    this.resetPosition();\n  }\n\n  resetPosition() {\n    settings.Logger.info(\n      `Resetting HUD position to x: 80px, y: 150px, and saving in user flags. \\nIf HUD is still not visible, something else may be wrong.\\nFeel free to contact ^ and stick#0520 on Discord`\n    );\n    game.user.update({\n      flags: { \"token-action-hud\": { hudPos: { top: 80, left: 150 } } },\n    });\n    this.update();\n  }\n\n  async resetFlags() {\n    settings.Logger.info(\n      `Resetting Token Action HUD filter and category flags`\n    );\n    await this.categoryManager.reset();\n    await this.filterManager.reset();\n    this.update();\n  }\n\n  update() {\n    // Delay refresh because switching tokens could cause a controlToken(false) then controlToken(true) very fast\n    if (this.refresh_timeout) clearTimeout(this.refresh_timeout);\n    this.refresh_timeout = setTimeout(this.updateHud.bind(this), 100);\n  }\n\n  async updateHud() {\n    settings.Logger.debug(\"Updating HUD\");\n\n    let token = this._getTargetToken(this.tokens?.controlled);\n\n    let multipleTokens = this.tokens?.controlled.length > 1 && !token;\n    this.targetActions = await this.actions.buildActionList(\n      token,\n      multipleTokens\n    );\n\n    if (!this.showHudEnabled()) {\n      this.close();\n      return;\n    }\n\n    this.rendering = true;\n    this.render(true);\n  }\n\n  // Really just checks if only one token is being controlled. Not smart.\n  validTokenChange(token) {\n    if (settings.get(\"alwaysShowHud\"))\n      return (\n        this.isRelevantToken(token) || token.actorId === game.user.character?.id\n      );\n    else return this.isRelevantToken(token);\n  }\n\n  isRelevantToken(token) {\n    let controlled = this.tokens?.controlled;\n    return (\n      controlled?.some((t) => t.id === this.getTokenId(token)) ||\n      (controlled?.length === 0 &&\n        canvas?.tokens?.placeables?.some(\n          (t) => t.id === this.targetActions?.tokenId\n        ))\n    );\n  }\n\n  getTokenId(token) {\n    return token.id ?? token.id;\n  }\n\n  // Is something being hovered on, is the setting on, and is it the token you're currently selecting.\n  validTokenHover(token, hovered) {\n    return (\n      hovered &&\n      settings.get(\"onTokenHover\") &&\n      token.id === this.targetActions?.tokenId\n    );\n  }\n\n  // Basically update any time. All this logic could be improved.\n  validActorOrItemUpdate(actor) {\n    if (actor) {\n      settings.Logger.debug(`actor change, comparing actors`);\n      settings.Logger.debug(\n        `actor.id: ${actor.id}; this.targetActions.actorId: ${this.targetActions?.actorId}`\n      );\n\n      if (!actor) {\n        settings.Logger.debug(\"No actor, possibly deleted, should update HUD.\");\n        return true;\n      }\n\n      if (this.targetActions && actor.id === this.targetActions.actorId) {\n        settings.Logger.debug(\"Same actor IDs, should update HUD.\");\n        return true;\n      }\n\n      settings.Logger.debug(\"Different actor, no need to update HUD.\");\n      return false;\n    }\n  }\n\n  showHudEnabled() {\n    settings.Logger.debug(\n      \"showHudEnabled()\",\n      `isGM: ${game.user.isGM}`,\n      `enabledForUser: ${settings.get(\"enabledForUser\")}`,\n      `playerPermission: ${settings.get(\"playerPermission\")}`\n    );\n\n    if (!settings.get(\"enabledForUser\")) return false;\n\n    return settings.get(\"playerPermission\") || game.user.isGM;\n  }\n\n  isLinkedCompendium(compendiumKey) {\n    settings.Logger.debug(\n      \"Compendium hook triggered. Checking if compendium is linked.\"\n    );\n    return this.categoryManager.isLinkedCompendium(compendiumKey);\n  }\n\n  /** @private */\n  _getTargetToken(controlled = []) {\n    if (controlled.length > 1) return null;\n\n    if (\n      controlled.length === 0 &&\n      canvas.tokens?.placeables &&\n      game.user.character\n    ) {\n      if (!settings.get(\"alwaysShowHud\")) return null;\n\n      let character = game.user.character;\n      let token = canvas?.tokens?.placeables.find(\n        (t) => t.actor?.id === character?.id\n      );\n      if (token) return token;\n\n      return null;\n    }\n\n    let ct = controlled[0];\n\n    if (!ct) return null;\n\n    if (this._userHasPermission(ct)) return ct;\n\n    return null;\n  }\n\n  /** @private */\n  _userHasPermission(token = \"\") {\n    let actor = token.actor;\n    let user = game.user;\n    return game.user.isGM || actor?.hasPerm(user, \"OWNER\");\n  }\n}\n",
    "export class Filter {\n  id = \"\";\n  isBlocklist = false;\n  filteredElements = [];\n  possibleChoices = [];\n\n  constructor(id) {\n    this.id = id;\n  }\n\n  async setFilteredElements(elements, isBlocklist) {\n    if (Array.isArray(elements)) {\n      this.filteredElements = elements;\n      this.isBlocklist = isBlocklist;\n    }\n\n    await this.updateFlag();\n  }\n\n  getSuggestions() {\n    return this.possibleChoices;\n  }\n\n  getFilteredElements() {\n    return this.filteredElements;\n  }\n\n  getFilteredNames() {\n    let result = this.filteredElements.map((f) => f.value);\n    return result;\n  }\n\n  getFilteredIds() {\n    let result = this.filteredElements.map((f) => f.id);\n    return result;\n  }\n\n  setSuggestions(choices) {\n    if (Array.isArray(choices)) this.possibleChoices = choices;\n  }\n\n  async updateFlag() {\n    let flag = {\n      isBlocklist: this.isBlocklist,\n      elements: this.filteredElements,\n    };\n    await game.user.setFlag(\"token-action-hud\", `filters.${this.id}`, flag);\n  }\n\n  async clearFlag() {\n    await game.user.setFlag(\"token-action-hud\", \"filters\", {\n      [`-=${this.id}`]: null,\n    });\n  }\n}\n",
    "import { Filter } from \"./filter.js\";\nimport { Logger } from \"../../logger.js\";\n\nexport class FilterManager {\n  filters = [];\n  user = null;\n\n  constructor(user) {\n    this.user = user;\n\n    let savedFilters = user.getFlag(\"token-action-hud\", \"filters\");\n    if (!savedFilters) return;\n\n    Logger.debug(\"saved filters:\", savedFilters);\n\n    Object.entries(savedFilters).forEach((f) => {\n      let filter = new Filter(f[0]);\n      filter.setFilteredElements(f[1].elements, f[1].isBlocklist);\n      this.filters.push(filter);\n    });\n  }\n\n  async reset() {\n    this.filters = [];\n    await game.user.unsetFlag(\"token-action-hud\", \"filters\");\n  }\n\n  createOrGetFilter(filterId) {\n    if (this.filters.some((f) => f.id === filterId))\n      return this.filters.find((f) => f.id);\n\n    let filter = new Filter(filterId);\n    this.filters.push(filter);\n    return filter;\n  }\n\n  getSuggestions(filterId) {\n    let filter = this._getFilter(filterId);\n\n    return filter.getSuggestions();\n  }\n\n  setSuggestions(filterId, choices) {\n    let filter = this._getFilter(filterId);\n\n    filter.setSuggestions(choices);\n  }\n\n  getFilteredElements(filterId) {\n    let filter = this._getFilter(filterId);\n\n    return filter.getFilteredElements();\n  }\n\n  getFilteredNames(filterId) {\n    let filter = this._getFilter(filterId);\n\n    return filter.getFilteredNames();\n  }\n\n  getFilteredIds(filterId) {\n    let filter = this._getFilter(filterId);\n\n    return filter.getFilteredIds();\n  }\n\n  async setFilteredElements(filterId, elements, isBlocklist) {\n    let filter = this._getFilter(filterId);\n    await filter.setFilteredElements(elements, isBlocklist);\n  }\n\n  async clearFilter(filterId) {\n    let filter = this.filters.find((f) => f.id === filterId);\n\n    if (!filter) return;\n\n    await filter.clearFlag();\n\n    this.filters.splice(this.filters.indexOf(filter), 1);\n  }\n\n  isBlocklist(filterId) {\n    let filter = this._getFilter(filterId);\n\n    return filter.isBlocklist;\n  }\n\n  _getFilter(filterId) {\n    return (\n      this.filters.find((f) => f.id === filterId) ??\n      this.createOrGetFilter(filterId)\n    );\n  }\n}\n",
    "export const SubcategoryType = {\n  MACRO: \"macro\",\n  COMPENDIUM: \"comp\",\n};\n",
    "export class FilterSubcategory {\n  constructor(filterManager, title) {\n    this.filterManager = filterManager;\n    this.title = title;\n  }\n\n  async updateFlag(categoryId) {\n    let contents = this.getFlagContents();\n    await game.user.setFlag(\n      \"token-action-hud\",\n      `categories.${categoryId}.subcategories.${this.id}`,\n      contents\n    );\n  }\n\n  async unsetFlag(categoryId) {\n    if (categoryId)\n      await game.user.setFlag(\n        \"token-action-hud\",\n        `categories.${categoryId}.subcategories`,\n        { [`-=${this.id}`]: null }\n      );\n  }\n\n  createFilter() {\n    this.filterManager.createOrGetFilter(this.id);\n  }\n\n  clearFilter() {\n    this.filterManager.clearFilter(this.id);\n  }\n\n  async setFilteredElements(elements, isBlocklist) {\n    await this.filterManager.setFilteredElements(\n      this.id,\n      elements,\n      isBlocklist\n    );\n  }\n\n  asTagifyEntry() {\n    return { id: this.id, value: this.title, type: this.type };\n  }\n\n  async addToCategory(actionHandler, category) {\n    let subcategory = actionHandler.initializeEmptySubcategory(this.id);\n    subcategory.actions = await this._getActions(actionHandler.delimiter);\n    subcategory.canFilter = true;\n    actionHandler._combineSubcategoryWithCategory(\n      category,\n      this.title,\n      subcategory\n    );\n  }\n\n  getFlagContents() {\n    return { id: this.id, title: this.title, type: this.type };\n  }\n\n  async _getActions() {\n    return [];\n  }\n}\n",
    "import { CompendiumHelper } from \"./compendiumHelper.js\";\nimport { SubcategoryType } from \"../../enums/subcategoryType.js\";\nimport { FilterSubcategory } from \"./filterSubcategory.js\";\n\nexport class CompendiumSubcategory extends FilterSubcategory {\n  constructor(filterManager, categoryId, compendiumId, title) {\n    super(filterManager, title);\n    this.id = `${categoryId}_${compendiumId}`.slugify({\n      replacement: \"_\",\n      strict: true,\n    });\n    this.compendiumId = compendiumId;\n    this.type = SubcategoryType.COMPENDIUM;\n  }\n\n  async submitFilterSuggestions() {\n    let suggestions = await CompendiumHelper.getCompendiumEntriesForFilter(\n      this.compendiumId\n    );\n    this.filterManager.setSuggestions(this.id, suggestions);\n  }\n\n  /** @override */\n  async _getActions(delimiter) {\n    let packEntries = await CompendiumHelper.getEntriesForActions(\n      this.compendiumId,\n      delimiter\n    );\n\n    let filters = this.filterManager.getFilteredIds(this.id);\n    let isBlocklist = this.filterManager.isBlocklist(this.id);\n\n    let actions = packEntries;\n\n    if (filters.length > 0)\n      actions = packEntries.filter(\n        (p) => filters.includes(p.id) !== isBlocklist\n      );\n\n    return actions;\n  }\n\n  /** @override */\n  getFlagContents() {\n    return { id: this.compendiumId, title: this.title, type: this.type };\n  }\n}\n",
    "import * as settings from \"../../settings.js\";\n\nexport class MacroHelper {\n  constructor() {}\n\n  static exists(key, macros) {\n    if (!!macros) {\n      return macros.some((m) => m.data._id === key);\n    }\n\n    const macroEntries =\n      \"some\" in game.macros.entries ? game.macros.entries : game.macros;\n\n    return !!macroEntries.some((m) => m.data._id === key);\n  }\n\n  static getEntriesForActions(delimiter) {\n    let macroType = \"macro\";\n    let entries = MacroHelper.getMacros();\n    return entries.map((m) => {\n      let encodedValue = [macroType, macroType, m.data._id].join(delimiter);\n      let img = MacroHelper.getImage(m);\n      return {\n        name: m.data.name,\n        encodedValue: encodedValue,\n        id: m.data._id,\n        img: img,\n      };\n    });\n  }\n\n  static getMacrosForFilter() {\n    return MacroHelper.getMacros().map((m) => {\n      return { id: m.data._id, value: m.data.name };\n    });\n  }\n\n  static getMacros() {\n    const macros =\n      \"filter\" in game.macros.entries ? game.macros.entries : game.macros;\n\n    return macros.filter((m) => {\n      let permissions = m.data.permission;\n      if (permissions[game.userId]) return permissions[game.userId] > 0;\n\n      return permissions.default > 0;\n    });\n  }\n\n  static getImage(macro) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = macro.data.img;\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n}\n",
    "import { MacroHelper } from \"./macroHelper.js\";\nimport { SubcategoryType } from \"../../enums/subcategoryType.js\";\nimport { FilterSubcategory } from \"./filterSubcategory.js\";\n\nexport class MacroSubcategory extends FilterSubcategory {\n  constructor(filterManager, categoryKey, title) {\n    super(filterManager, title);\n    this.id = `${categoryKey}_${title}`.slugify({\n      replacement: \"_\",\n      strict: true,\n    });\n    this.type = SubcategoryType.MACRO;\n  }\n\n  submitFilterSuggestions() {\n    let suggestions = MacroHelper.getMacrosForFilter();\n    this.filterManager.setSuggestions(this.id, suggestions);\n  }\n\n  /** @override */\n  _getActions(delimiter) {\n    let possibleMacros = MacroHelper.getEntriesForActions(delimiter);\n\n    let filters = this.filterManager.getFilteredIds(this.id);\n    let isBlocklist = this.filterManager.isBlocklist(this.id);\n\n    if (filters.length === 0) return [];\n\n    let filteredActions = possibleMacros.filter(\n      (p) => filters.includes(p.id) !== isBlocklist\n    );\n\n    return filteredActions;\n  }\n}\n",
    "import { CompendiumSubcategory } from \"./compendiumSubcategory.js\";\nimport { MacroSubcategory } from \"./macroSubcategory.js\";\nimport { CompendiumHelper } from \"./compendiumHelper.js\";\nimport { SubcategoryType } from \"../../enums/subcategoryType.js\";\n\nexport class FilterCategory {\n  subcategories = [];\n  id = \"\";\n  key = \"\";\n  title = \"\";\n  push = false; // push or shift when adding to actionList\n  core = false; // is it a base category; if so, don't always display\n\n  constructor(filterManager, id, title, push, core) {\n    this.filterManager = filterManager;\n    this.id = id;\n    this.key = id.slugify({ replacement: \"_\", strict: true });\n    this.title = title;\n    this.push = push;\n    this.core = core ?? false;\n  }\n\n  async addToActionList(actionHandler, actionList) {\n    if (actionList.categories.some((c) => c.name === this.title)) {\n      let existingCat = actionList.categories.find(\n        (c) => c.name === this.title\n      );\n\n      if (!existingCat.subcategories.length) return;\n\n      await this.addSubcategoriesToCategory(actionHandler, existingCat);\n    } else {\n      await this.doAddToActionList(actionHandler, actionList);\n    }\n  }\n\n  async doAddToActionList(actionHandler, actionList) {\n    if (this.core) return;\n\n    let result = actionHandler.initializeEmptyCategory(this.id);\n    result.core = this.core;\n\n    await this.addSubcategoriesToCategory(actionHandler, result);\n\n    actionHandler._combineCategoryWithList(\n      actionList,\n      this.title,\n      result,\n      this.push\n    );\n  }\n\n  async addSubcategoriesToCategory(actionHandler, category) {\n    for (let subcategory of this.subcategories) {\n      await subcategory.addToCategory(actionHandler, category);\n    }\n  }\n\n  async selectSubcategories(selection) {\n    for (let subcat of selection) {\n      if (subcat.type === SubcategoryType.COMPENDIUM)\n        await this.addCompendiumSubcategory(subcat);\n      else this.addMacroSubcategory(subcat);\n    }\n\n    if (this.subcategories.length === 0) return;\n\n    let titleMap = selection.map((subcat) => subcat.title);\n    for (var i = this.subcategories.length - 1; i >= 0; i--) {\n      let subcat = this.subcategories[i];\n      if (!titleMap.includes(subcat.title)) await this.removeSubcategory(i);\n    }\n\n    await this.updateFlag();\n  }\n\n  async addCompendiumSubcategory(compendium) {\n    if (this.subcategories.some((c) => c.compendiumId === compendium.id))\n      return;\n\n    if (!CompendiumHelper.exists(compendium.id)) return;\n\n    let hudCompendium = new CompendiumSubcategory(\n      this.filterManager,\n      this.key,\n      compendium.id,\n      compendium.title\n    );\n    hudCompendium.createFilter();\n    await hudCompendium.submitFilterSuggestions();\n\n    this.subcategories.push(hudCompendium);\n  }\n\n  addMacroSubcategory(choice) {\n    if (this.subcategories.some((c) => c.title === choice.title)) return;\n\n    let subcategory = new MacroSubcategory(\n      this.filterManager,\n      this.key,\n      choice.title\n    );\n    subcategory.createFilter();\n    subcategory.submitFilterSuggestions();\n\n    this.subcategories.push(subcategory);\n  }\n\n  async updateFlag() {\n    let update = {\n      categories: {\n        [this.key]: {\n          title: this.title,\n          id: this.id,\n          push: this.push,\n          core: this.core,\n        },\n      },\n    };\n    await game.user.update({ flags: { \"token-action-hud\": update } });\n\n    for (let subcategory of this.subcategories) {\n      await subcategory.updateFlag(this.key);\n    }\n  }\n\n  async removeSubcategory(index) {\n    let subcategory = this.subcategories[index];\n    await subcategory.clearFilter();\n    await subcategory.unsetFlag(this.key);\n    this.subcategories.splice(index, 1);\n  }\n\n  async prepareForDelete() {\n    await this.clearFilters();\n    await this.unsetFlag();\n  }\n\n  async clearFilters() {\n    for (let c of this.subcategories) {\n      await c.clearFilter();\n    }\n  }\n\n  async unsetFlag() {\n    await game.user.setFlag(\"token-action-hud\", \"categories\", {\n      [`-=${this.key}`]: null,\n    });\n  }\n\n  asTagifyEntry() {\n    return { id: this.id, value: this.title };\n  }\n\n  getSubcategoriesAsTagifyEntries() {\n    return this.subcategories.map((c) => c.asTagifyEntry());\n  }\n}\n",
    "import { FilterCategory } from \"./filterCategory.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class CategoryManager {\n  categories = [];\n  user = null;\n\n  constructor(user, filterManager) {\n    this.user = user;\n    this.filterManager = filterManager;\n  }\n\n  async reset() {\n    this.categories = [];\n    await game.user.unsetFlag(\"token-action-hud\", \"categories\");\n  }\n\n  async init() {\n    let savedCategories = this.user.getFlag(\"token-action-hud\", \"categories\");\n    if (savedCategories) {\n      settings.Logger.debug(\"saved categories:\", savedCategories);\n\n      for (let cat of Object.values(savedCategories)) {\n        let id = cat.id;\n        let title = cat.title;\n        let push = cat.push ?? false;\n        let core = cat.core ?? false;\n        if (!(id || title)) continue;\n\n        let category = new FilterCategory(\n          this.filterManager,\n          id,\n          title,\n          push,\n          core\n        );\n\n        let subcategories = cat.subcategories;\n        if (subcategories) {\n          subcategories = Object.values(subcategories);\n          await category.selectSubcategories(subcategories);\n        }\n        this.categories.push(category);\n      }\n    }\n  }\n\n  async addCategoriesToActionList(actionHandler, actionList) {\n    let alwaysShow = settings.get(\"alwaysShowAdditionalCategories\");\n\n    if (alwaysShow) {\n      if (!actionList.tokenId) {\n        actionList.tokenId = \"categoryManager\";\n      }\n\n      if (!actionList.actorId) {\n        actionList.actorId = \"categoryManager\";\n      }\n    }\n\n    if (!actionList.tokenId) return;\n\n    await this.doAddCategories(actionHandler, actionList);\n  }\n\n  async doAddCategories(actionHandler, actionList) {\n    for (let category of this.categories) {\n      await category.addToActionList(actionHandler, actionList);\n    }\n  }\n\n  async submitCategories(selections, push) {\n    selections = selections.map((s) => {\n      return {\n        id: s.value.slugify({ replacement: \"_\", strict: true }),\n        value: s.value,\n      };\n    });\n    for (let choice of selections) {\n      let category = this.categories.find((c) => c.id === choice.id);\n      if (!category) await this._createCategory(choice, push);\n      else await this._updateCategory(category, push);\n    }\n\n    let idMap = selections.map((s) => s.id);\n\n    if (this.categories.length === 0) return;\n\n    for (var i = this.categories.length - 1; i >= 0; i--) {\n      let category = this.categories[i];\n      if (!(idMap.includes(category.id) || category.core))\n        await this.deleteCategory(i);\n    }\n  }\n\n  async addCoreCategories(categories) {\n    for (let core of categories) {\n      let existing = this.categories.find((cat) => cat.id === core.id);\n      if (existing && !existing.core) {\n        existing.core = true;\n        await existing.updateFlag();\n        continue;\n      } else if (existing) {\n        continue;\n      }\n      await this._createCategory(\n        { id: core.id, value: core.name },\n        false,\n        true\n      );\n    }\n  }\n\n  async _createCategory(tagifyCategory, push, core = false) {\n    let newCategory = new FilterCategory(\n      this.filterManager,\n      tagifyCategory.id,\n      tagifyCategory.value,\n      push,\n      core\n    );\n    await newCategory.updateFlag();\n    this.categories.push(newCategory);\n  }\n\n  async _updateCategory(category, push) {\n    category.push = push;\n    await category.updateFlag();\n  }\n\n  async deleteCategory(index) {\n    let category = this.categories[index];\n    await category.prepareForDelete();\n    this.categories.splice(index, 1);\n  }\n\n  async submitSubcategories(categoryId, choices) {\n    let category = this.categories.find((c) => c.id === categoryId);\n\n    if (!category) return;\n\n    await category.selectSubcategories(choices);\n  }\n\n  getExistingCategories() {\n    return this.categories.filter((c) => !c.core).map((c) => c.asTagifyEntry());\n  }\n\n  isCompendiumCategory(id) {\n    return this.categories.some((c) => c.id === id);\n  }\n\n  isLinkedCompendium(id) {\n    return this.categories.some((c) =>\n      c.subcategories?.some((c) => c.compendiumId === id)\n    );\n  }\n\n  arePush() {\n    let categories = this.categories.filter((c) => !c.core);\n    let pushCount = categories.filter((c) => c.push).length;\n    return pushCount >= categories.length / 2;\n  }\n\n  getCategorySubcategoriesAsTagifyEntries(categoryId) {\n    let category = this.categories.find((c) => c.id === categoryId);\n\n    if (!category) return;\n\n    return category.getSubcategoriesAsTagifyEntries();\n  }\n}\n",
    "export class ActionList {\n  constructor() {\n    this.hudTitle = \"\";\n    this.tokenId = \"\";\n    this.actorId = \"\";\n    this.categories = [];\n  }\n}\n",
    "export class ActionCategory {\n  constructor() {\n    this.id = \"\";\n    this.name = \"\";\n    this.cssClass = \"\";\n    this.subcategories = [];\n  }\n}\n",
    "export class ActionSubcategory {\n  constructor() {\n    this.id = \"\";\n    this.name = \"\";\n    this.info1 = \"\";\n    this.canFilter = false;\n    this.actions = [];\n    this.subcategories = [];\n  }\n}\n",
    "export class ActionSet {\n  constructor() {\n    this.set = true;\n    this.actions = [];\n    this.cssClass = \"\";\n  }\n}\n",
    "export class Action {\n  constructor() {\n    this.id = \"\";\n    this.name = \"\";\n    this.encodedValue = \"\";\n    this.info1 = \"\";\n    this.info2 = \"\";\n    this.info3 = \"\";\n    this.cssClass = \"\";\n    this.icon = \"\";\n    this.img = \"\";\n  }\n}\n",
    "export class GenericActionHandler {\n  baseHandler;\n\n  constructor(baseHandler) {\n    this.baseHandler = baseHandler;\n  }\n\n  addGenericCategories(token, actionList, isMultipleTokens) {\n    this._addConditions(token, actionList, isMultipleTokens);\n    this._addUtilities(token, actionList, isMultipleTokens);\n  }\n\n  /** @private */\n  _addConditions(token, actionList, isMultipleTokens) {}\n\n  /** @private */\n  _addUtilities(token, actionList, isMultipleTokens) {\n    let utilityCat = actionList.categories.find((c) => c.id === \"utility\");\n    if (!utilityCat) {\n      utilityCat = this.baseHandler.initializeEmptyCategory(\"utility\");\n      utilityCat.name = this.baseHandler.i18n(\"tokenactionhud.utility\");\n      actionList.categories.push(utilityCat);\n    }\n\n    if (isMultipleTokens) {\n      const tokens = canvas.tokens.controlled;\n      this._addMultiUtilities(utilityCat, tokens);\n    } else {\n      this._getUtilityList(utilityCat, token.id);\n    }\n  }\n\n  /** @private */\n  _getUtilityList(utilityCat, tokenId) {\n    let macroType = \"utility\";\n\n    let utility = this.baseHandler.initializeEmptySubcategory();\n\n    let combatStateValue = [macroType, tokenId, \"toggleCombat\"].join(\n      this.baseHandler.delimiter\n    );\n    let combatAction = {\n      id: \"toggleCombat\",\n      encodedValue: combatStateValue,\n      name: this.baseHandler.i18n(\"tokenactionhud.toggleCombatState\"),\n    };\n    combatAction.cssClass = canvas.tokens.placeables.find(\n      (t) => t.data._id === tokenId\n    ).inCombat\n      ? \"active\"\n      : \"\";\n    utility.actions.push(combatAction);\n\n    if (game.user.isGM) {\n      let visbilityValue = [macroType, tokenId, \"toggleVisibility\"].join(\n        this.baseHandler.delimiter\n      );\n      let visibilityAction = {\n        id: \"toggleVisibility\",\n        encodedValue: visbilityValue,\n        name: this.baseHandler.i18n(\"tokenactionhud.toggleVisibility\"),\n      };\n      visibilityAction.cssClass = !canvas.tokens.placeables.find(\n        (t) => t.data._id === tokenId\n      ).data.hidden\n        ? \"active\"\n        : \"\";\n      utility.actions.push(visibilityAction);\n    }\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      utilityCat,\n      this.baseHandler.i18n(\"tokenactionhud.token\"),\n      utility\n    );\n  }\n\n  /** @private */\n  _addMultiUtilities(utilityCat, tokens) {\n    let macroType = \"utility\";\n    let tokenId = \"multi\";\n\n    let utility = this.baseHandler.initializeEmptySubcategory();\n\n    let combatStateValue = [macroType, tokenId, \"toggleCombat\"].join(\n      this.baseHandler.delimiter\n    );\n    let combatAction = {\n      id: \"toggleCombat\",\n      encodedValue: combatStateValue,\n      name: this.baseHandler.i18n(\"tokenactionhud.toggleCombatState\"),\n    };\n    combatAction.cssClass = tokens.every((t) => t.inCombat) ? \"active\" : \"\";\n    utility.actions.push(combatAction);\n\n    if (game.user.isGM) {\n      let visbilityValue = [macroType, tokenId, \"toggleVisibility\"].join(\n        this.baseHandler.delimiter\n      );\n      let visibilityAction = {\n        id: \"toggleVisibility\",\n        encodedValue: visbilityValue,\n        name: this.baseHandler.i18n(\"tokenactionhud.toggleVisibility\"),\n      };\n      visibilityAction.cssClass = tokens.every((t) => !t.data.hidden)\n        ? \"active\"\n        : \"\";\n      utility.actions.push(visibilityAction);\n    }\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      utilityCat,\n      this.baseHandler.i18n(\"tokenactionhud.token\"),\n      utility\n    );\n  }\n}\n",
    "import { ActionList } from \"./entities/actionList.js\";\nimport { ActionCategory } from \"./entities/actionCategory.js\";\nimport { ActionSubcategory } from \"./entities/actionSubcategory.js\";\nimport { ActionSet } from \"./entities/actionSet.js\";\nimport { Action } from \"./entities/action.js\";\nimport * as settings from \"../settings.js\";\nimport { GenericActionHandler } from \"./genericActionHandler.js\";\n\nexport class ActionHandler {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  linkedCompendiumsGm = [];\n  linkedCompendiumsPlayer = [];\n  furtherActionHandlers = [];\n  delimiter = \"|\";\n\n  filterManager = null;\n\n  constructor(filterManager, categoryManager) {\n    this.filterManager = filterManager;\n    this.categoryManager = categoryManager;\n    this.genericActionHandler = new GenericActionHandler(this);\n  }\n\n  /** @public */\n  async registerCoreCategories(categories) {\n    await this.categoryManager.addCoreCategories(categories);\n  }\n\n  /** @public */\n  async buildActionList(token, multipleTokens) {\n    let actionList = await this.doBuildActionList(token, multipleTokens);\n    this._addGenericCategories(token, actionList, multipleTokens);\n    this._doBuildFurtherActions(token, actionList, multipleTokens);\n    await this.registerCoreCategories(actionList.categories);\n    await this.categoryManager.addCategoriesToActionList(this, actionList);\n    return actionList;\n  }\n\n  /** @public */\n  doBuildActionList(token) {}\n\n  /** @protected */\n  _addGenericCategories(token, actionList, multipleTokens) {\n    if (token || multipleTokens)\n      this.genericActionHandler.addGenericCategories(\n        token,\n        actionList,\n        multipleTokens\n      );\n  }\n\n  /** @protected */\n  _doBuildFurtherActions(token, actionList, multipleTokens) {\n    this.furtherActionHandlers.forEach((handler) =>\n      handler.extendActionList(actionList, multipleTokens)\n    );\n  }\n\n  /** @public */\n  addFurtherActionHandler(handler) {\n    settings.Logger.debug(\n      `Adding further action handler: ${handler.constructor.name}`\n    );\n    this.furtherActionHandlers.push(handler);\n  }\n\n  /** @public */\n  initializeEmptyActionList() {\n    return new ActionList();\n  }\n\n  /** @public */\n  initializeEmptyActionSet() {\n    return new ActionSet();\n  }\n\n  /** @public */\n  initializeEmptyAction() {\n    return new Action();\n  }\n\n  /** @public */\n  initializeEmptyCategory(categoryId) {\n    let category = new ActionCategory();\n    category.id = categoryId;\n    return category;\n  }\n\n  initializeEmptySubcategory(id = \"\") {\n    let subcategory = new ActionSubcategory();\n    subcategory.id = id;\n    return subcategory;\n  }\n\n  /** @protected */\n  _combineCategoryWithList(result, categoryName, category, push = true) {\n    if (!category) return;\n\n    if (\n      category.subcategories.length === 0 &&\n      (category.core || category.core === undefined)\n    )\n      return;\n\n    if (categoryName?.length > 0) category.name = categoryName;\n\n    if (push) result.categories.push(category);\n    else result.categories.unshift(category);\n  }\n\n  /** @protected */\n  _combineSubcategoryWithCategory(category, subcategoryName, subcategory) {\n    if (!subcategory) return;\n\n    if (subcategoryName?.length > 0) subcategory.name = subcategoryName;\n\n    if (\n      subcategory.subcategories.length > 0 ||\n      subcategory.actions.length > 0 ||\n      subcategory.canFilter\n    )\n      category.subcategories.push(subcategory);\n    else\n      settings.Logger.debug(\n        \"subcategory criteria not met, disposing of\",\n        subcategoryName\n      );\n  }\n\n  /** @protected */\n  _foundrySort(a, b) {\n    if (!(a?.data?.sort || b?.data?.sort)) return 0;\n\n    return a.data.sort - b.data.sort;\n  }\n}\n",
    "import { ActionHandler } from \"./actionHandler.js\";\n\nexport class ActionListExtender extends ActionHandler {\n  constructor() {\n    super();\n  }\n\n  extendActionList(actionList, multipleTokens) {}\n}\n",
    "import { ActionListExtender } from \"./actionListExtender.js\";\nimport * as settings from \"../settings.js\";\n\nexport class ItemMacroActionListExtender extends ActionListExtender {\n  constructor() {\n    super();\n  }\n\n  static isModuleActive(id) {\n    let module = game.modules.get(id);\n    return module && module.active;\n  }\n\n  /** @override */\n  extendActionList(actionList, multipleTokens) {\n    if (multipleTokens) return;\n\n    let tokenId = actionList.tokenId;\n    let actorId = actionList.actorId;\n\n    if (!actorId) return;\n\n    let actor = this.getActor(tokenId);\n    let items = actor.items.filter((item) => item.hasMacro());\n\n    let itemIds;\n    if (ItemMacroActionListExtender.isModuleActive(\"midi-qol\")) {\n      itemIds = items\n        .filter(this.isUnsupportedByMidiQoL)\n        .map((item) => item.data._id);\n    } else {\n      itemIds = items.map((item) => item.data._id);\n    }\n\n    if (!itemIds) return;\n\n    if (itemIds.length === 0) return;\n\n    let itemMacroSetting = settings.get(\"itemMacroReplace\");\n\n    if (itemMacroSetting === \"showOriginal\") return actionList;\n\n    let replace = itemMacroSetting === \"showItemMacro\";\n\n    actionList.categories.forEach((category) => {\n      category.subcategories.forEach((subcategory) => {\n        this.addSubcategoryActions(itemIds, subcategory, replace);\n      });\n    });\n\n    return actionList;\n  }\n\n  addSubcategoryActions(itemIds, subcategory, replace) {\n    if (subcategory.subcategories && subcategory.subcategories.length > 0)\n      subcategory.subcategories.forEach((s) =>\n        this.addSubcategoryActions(itemIds, s, replace)\n      );\n\n    let macroActions = [];\n    subcategory.actions.forEach((action) => {\n      if (!itemIds.includes(action.id)) return;\n\n      let macroAction = this.createItemMacroAction(action, replace);\n\n      // if replacing, actions should have already been edited in place, no need to add.\n      if (!replace) macroActions.push(macroAction);\n    });\n\n    this.addActionsToSubcategory(subcategory, macroActions);\n  }\n\n  createItemMacroAction(action, replace) {\n    let macroType = \"itemMacro\";\n    let newAction = replace ? action : {};\n\n    let keep = action.encodedValue.substr(\n      action.encodedValue.indexOf(this.delimiter)\n    );\n    newAction.encodedValue = macroType + keep;\n    newAction.name = replace ? action.name : `(M) ${action.name}`;\n    newAction.id = action.id;\n    newAction.img = action.img;\n    newAction.icon = action.icon;\n\n    newAction.info1 = action.info1;\n    newAction.info2 = action.info2;\n    newAction.info3 = action.info3;\n\n    return newAction;\n  }\n\n  addActionsToSubcategory(subcategory, macroActions) {\n    macroActions.forEach((ma) => {\n      let index = subcategory.actions.findIndex((a) => a.id === ma.id) + 1;\n      subcategory.actions.splice(index, 0, ma);\n    });\n  }\n\n  isUnsupportedByMidiQoL(item) {\n    let flag = item.getFlag(\"midi-qol\", \"onUseMacroName\");\n    return !flag;\n  }\n\n  getActor(tokenId) {\n    return canvas.tokens.placeables.find((t) => t.data._id === tokenId)?.actor;\n  }\n}\n",
    "import * as settings from \"../settings.js\";\n\nexport class RollHandler {\n  preRollHandlers = [];\n\n  constructor() {}\n\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  getActor(tokenId) {\n    return canvas.tokens.placeables.find((t) => t.data._id === tokenId)?.actor;\n  }\n\n  getItem(actor, itemId) {\n    return actor.items.get(itemId);\n  }\n\n  getToken(tokenId) {\n    return canvas.tokens.placeables.find((t) => t.data._id === tokenId);\n  }\n\n  throwInvalidValueErr(err) {\n    throw new Error(\n      `Error handling button click: unexpected button value/payload`\n    );\n  }\n\n  async handleActionEvent(event, encodedValue) {\n    settings.Logger.debug(encodedValue);\n\n    this.registerKeyPresses(event);\n\n    let handled = false;\n    this.preRollHandlers.forEach((handler) => {\n      if (handled) return;\n\n      handled = handler.prehandleActionEvent(event, encodedValue);\n    });\n\n    if (handled) return;\n\n    if (this._isMultiGenericAction(encodedValue)) {\n      await this._doMultiGenericAction(encodedValue);\n      return;\n    }\n\n    this.doHandleActionEvent(event, encodedValue);\n  }\n\n  doHandleActionEvent(event, encodedValue) {}\n\n  addPreRollHandler(handler) {\n    settings.Logger.debug(\n      `Adding pre-roll handler: ${handler.constructor.name}`\n    );\n    this.preRollHandlers.push(handler);\n  }\n\n  registerKeyPresses(event) {\n    this.rightClick = this.isRightClick(event);\n    this.ctrl = this.isCtrl(event);\n    this.alt = this.isAlt(event);\n    this.shift = this.isShift(event);\n  }\n\n  doRenderItem(tokenId, itemId) {\n    let actor = this.getActor(tokenId);\n    let item = this.getItem(actor, itemId);\n\n    item.sheet.render(true);\n  }\n\n  isRenderItem() {\n    return (\n      settings.get(\"renderItemOnRightClick\") &&\n      this.rightClick &&\n      !(this.alt || this.ctrl || this.shift)\n    );\n  }\n\n  isRightClick(event) {\n    return event?.originalEvent?.button === 2;\n  }\n\n  isAlt(event) {\n    return event?.altKey;\n  }\n\n  isCtrl(event) {\n    return keyboard?.isCtrl(event);\n  }\n\n  isShift(event) {\n    return event?.shiftKey;\n  }\n\n  /** @private */\n  _isMultiGenericAction(encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    let macroType = payload[0];\n    let actionId = payload[2];\n\n    return macroType === \"utility\" && actionId.includes(\"toggle\");\n  }\n\n  /** @private */\n  async _doMultiGenericAction(encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    let actionId = payload[2];\n\n    if (actionId === \"toggleVisibility\") {\n      await canvas.tokens.controlled[0].toggleVisibility();\n    }\n\n    if (actionId === \"toggleCombat\") {\n      await canvas.tokens.controlled[0].toggleCombat();\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n}\n",
    "import * as settings from \"../settings.js\";\nimport { RollHandler } from \"./rollHandler.js\";\n\n/*\n * Used for adding support for actions not part of the core functions.\n * Returns true from prehandleActionEvent() if it can perform an action and stops\n * further actions being performed.\n */\nexport class PreRollHandler extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  prehandleActionEvent(event, encodedValue) {\n    return false;\n  }\n}\n",
    "import { PreRollHandler } from \"./preRollHandler.js\";\n\nexport class CompendiumMacroPreHandler extends PreRollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  prehandleActionEvent(event, encodedValue) {\n    let delimiter = game.tokenActionHUD.actions.delimiter;\n\n    let payload = encodedValue.split(delimiter);\n\n    if (payload.length != 3) return false;\n\n    let macroType = payload[0];\n    let key = payload[1];\n    let actionId = payload[2];\n\n    let types = [\n      \"compendiumEntry\",\n      \"compendiumMacro\",\n      \"compendiumPlaylist\",\n      \"macro\",\n    ];\n    if (!types.includes(macroType)) return false;\n\n    switch (macroType) {\n      case \"compendiumEntry\":\n        this.handleCompendium(macroType, event, key, actionId);\n        break;\n      case \"compendiumMacro\":\n        this.handleMacroCompendium(macroType, event, key, actionId);\n        break;\n      case \"compendiumPlaylist\":\n        this.handlePlaylistCompendium(macroType, event, key, actionId);\n        break;\n      case \"macro\":\n        this.handleMacro(macroType, event, key, actionId);\n        break;\n      default:\n        return false;\n    }\n\n    return true;\n  }\n\n  handleCompendium(macroType, event, compendiumKey, entityId) {\n    let pack = game.packs.get(compendiumKey);\n\n    pack.getEntity(entityId).then((e) => e.sheet.render(true));\n  }\n\n  handleMacroCompendium(macroType, event, compendiumKey, entityId) {\n    let pack = game.packs.get(compendiumKey);\n\n    pack.getEntity(entityId).then((e) => e.execute());\n  }\n\n  async handlePlaylistCompendium(macroType, event, compendiumKey, actionId) {\n    let pack = game.packs.get(compendiumKey);\n\n    let actionPayload = actionId.split(\">\");\n    let playlistId = actionPayload[0];\n    let soundId = actionPayload[1];\n\n    let playlist = await pack.getEntity(playlistId);\n    let sound = playlist.sounds.find((s) => s._id === soundId);\n\n    AudioHelper.play({ src: sound.path }, {});\n  }\n\n  handleMacro(macroType, event, tokenId, actionId) {\n    game.macros.find((i) => i.data._id === actionId).execute();\n  }\n}\n",
    "import { PreRollHandler } from \"./preRollHandler.js\";\nimport * as settings from \"../settings.js\";\n\nexport class ItemMacroPreRollHandler extends PreRollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  prehandleActionEvent(event, encodedValue) {\n    this.registerKeyPresses(event);\n\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) return false;\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (macroType != \"itemMacro\") return false;\n\n    if (this.isRenderItem()) {\n      this.doRenderItem(tokenId, actionId);\n      return true;\n    }\n\n    return this._tryExecuteItemMacro(event, tokenId, actionId);\n  }\n\n  _tryExecuteItemMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let item = super.getItem(actor, actionId);\n\n    try {\n      item.executeMacro();\n    } catch (e) {\n      settings.Logger.error(\"ItemMacro error: \", e);\n      return false;\n    }\n\n    return true;\n  }\n}\n",
    "import * as settings from \"../settings.js\";\nimport { Logger } from \"../logger.js\";\nimport { FilterManager } from \"../actions/filter/filterManager.js\";\nimport { CategoryManager } from \"../actions/categories/categoryManager.js\";\nimport { ItemMacroActionListExtender } from \"../actions/itemMacroExtender.js\";\nimport { CompendiumMacroPreHandler } from \"../rollHandlers/compendiumMacroPreHandler.js\";\nimport { ItemMacroPreRollHandler } from \"../rollHandlers/pre-itemMacro.js\";\n\nexport class SystemManager {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  appName;\n  constructor(appName) {\n    this.appName = appName;\n  }\n\n  /** ACTION HANDLERS */\n\n  async getActionHandler(user) {\n    this.filterManager = new FilterManager(user);\n    this.categoryManager = new CategoryManager(user, this.filterManager);\n\n    await this.categoryManager.init();\n\n    let actionHandler = this.doGetActionHandler(\n      this.filterManager,\n      this.categoryManager\n    );\n    this.addActionExtenders(actionHandler);\n    return actionHandler;\n  }\n\n  doGetActionHandler() {}\n\n  addActionExtenders(actionHandler) {\n    if (SystemManager.isModuleActive(\"itemacro\"))\n      actionHandler.addFurtherActionHandler(new ItemMacroActionListExtender());\n  }\n\n  filterManager;\n  getFilterManager() {\n    return this.filterManager;\n  }\n\n  categoryManager;\n  getCategoryManager() {\n    return this.categoryManager;\n  }\n\n  /** ROLL HANDLERS */\n\n  getRollHandler() {\n    let rollHandlerId = settings.get(\"rollHandler\");\n\n    if (\n      !(rollHandlerId === \"core\" || SystemManager.isModuleActive(rollHandlerId))\n    ) {\n      Logger.error(rollHandlerId, this.i18n(\"tokenactionhud.handlerNotFound\"));\n      rollHandlerId = \"core\";\n      settings.set(\"rollHandler\", rollHandlerId);\n    }\n\n    let rollHandler = this.doGetRollHandler(rollHandlerId);\n    this.addPreHandlers(rollHandler);\n    return rollHandler;\n  }\n\n  doGetRollHandler(handlerId) {}\n\n  addPreHandlers(rollHandler) {\n    rollHandler.addPreRollHandler(new CompendiumMacroPreHandler());\n\n    if (SystemManager.isModuleActive(\"itemacro\"))\n      rollHandler.addPreRollHandler(new ItemMacroPreRollHandler());\n  }\n\n  getAvailableRollHandlers() {}\n\n  /** SETTINGS */\n\n  registerSettings() {\n    let rollHandlers = this.getAvailableRollHandlers();\n    settings.registerSettings(this.appName, this, rollHandlers);\n  }\n\n  /** UTILITY */\n\n  static addHandler(choices, id) {\n    if (SystemManager.isModuleActive(id)) {\n      let title = SystemManager.getModuleTitle(id);\n      mergeObject(choices, { [id]: title });\n    }\n  }\n\n  static isModuleActive(id) {\n    let module = game.modules.get(id);\n    return module && module.active;\n  }\n\n  static getModuleTitle(id) {\n    return game.modules.get(id)?.data.title ?? \"\";\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerBitD extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n    this.filterManager.createOrGetFilter(\"skills\");\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let actions = this._getActions(actor, tokenId);\n    let resistances = this._getResistances(actor, tokenId);\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.actions\"),\n      actions\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.resistance\"),\n      resistances\n    );\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _getActions(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"actions\");\n\n    for (let attribute in actor.data.data.attributes) {\n      let attributeCategory = this.initializeEmptySubcategory();\n      for (let skill_name in actor.data.data.attributes[attribute].skills) {\n        let skill = actor.data.data.attributes[attribute].skills[skill_name];\n        let name = this.i18n(skill.label);\n        let encodedValue = [\"action\", tokenId, skill_name].join(this.delimiter);\n\n        attributeCategory.actions.push({\n          name: name,\n          encodedValue: encodedValue,\n        });\n      }\n      let attributeTitle = this.i18n(\n        actor.data.data.attributes[attribute].label\n      );\n      this._combineSubcategoryWithCategory(\n        result,\n        attributeTitle,\n        attributeCategory\n      );\n    }\n    return result;\n  }\n\n  _getResistances(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"actions\");\n\n    let resistanceCategory = this.initializeEmptySubcategory();\n    for (let attribute in actor.data.data.attributes) {\n      let name = this.i18n(actor.data.data.attributes[attribute].label);\n      let encodedValue = [\"resistance\", tokenId, attribute].join(\n        this.delimiter\n      );\n      resistanceCategory.actions.push({\n        name: name,\n        encodedValue: encodedValue,\n      });\n    }\n\n    let resistanceTitle = this.i18n(\"tokenactionhud.resistance\");\n    this._combineSubcategoryWithCategory(\n      result,\n      resistanceTitle,\n      resistanceCategory\n    );\n\n    return result;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\n\nexport class RollHandlerBaseBitD extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n\n    actor.rollAttributePopup(actionId);\n  }\n\n  rollItemMacro(event, actor, actionId) {\n    actor.item.find((i) => i.data.id === actionId).roll(event);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerBitD as ActionHandler } from \"../actions/bitd/bitd-actions.js\";\nimport { RollHandlerBaseBitD as Core } from \"../rollHandlers/bitd/bitd-base.js\";\nimport * as settings from \"../settings/bitd-settings.js\";\n\nexport class BitDSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core BitD\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\nimport { Logger } from \"../../logger.js\";\n\nexport class ActionHandler5e extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  doBuildActionList(token, multipleTokens) {\n    if (token) {\n      return this._buildSingleTokenList(token);\n    } else if (multipleTokens) {\n      return this._buildMultipleTokenList();\n    }\n    return this.initializeEmptyActionList();\n  }\n\n  async _buildSingleTokenList(token) {\n    const list = this.initializeEmptyActionList();\n    list.tokenId = token?.id;\n    list.actorId = token?.actor?.id;\n    if (!list.tokenId || !list.actorId) {\n      return list;\n    }\n\n    if (settings.get(\"showHudTitle\")) {\n      list.hudTitle = token.data?.name;\n    }\n\n    const cats = await this._buildCategories(token);\n    cats\n      .flat()\n      .filter((c) => c)\n      .forEach((c) => {\n        this._combineCategoryWithList(list, c.name, c);\n      });\n\n    return list;\n  }\n\n  _buildCategories(token) {\n    return [\n      this._buildItemsCategory(token),\n      this._buildSpellsCategory(token),\n      this._buildFeaturesCategory(token),\n      this._buildSkillsCategory(token),\n      this._buildAbilitiesCategory(token),\n      this._buildEffectsCategory(token),\n      this._buildConditionsCategory(token),\n      this._buildUtilityCategory(token),\n    ];\n  }\n\n  _buildAbilitiesCategory(token) {\n    const actor = token.actor;\n    const abilities = actor.data.data.abilities;\n\n    if (settings.get(\"splitAbilities\")) {\n      const savesTitle = this.i18n(\"tokenactionhud.saves\");\n      const savesCat = this._getAbilityList(\n        token.id,\n        abilities,\n        \"saves\",\n        savesTitle,\n        \"abilitySave\"\n      );\n      savesCat.name = savesTitle;\n\n      const checksTitle = this.i18n(\"tokenactionhud.checks\");\n      const checksCat = this._getAbilityList(\n        token.id,\n        abilities,\n        \"checks\",\n        this.i18n(\"tokenactionhud.checks\"),\n        \"abilityCheck\"\n      );\n      checksCat.name = checksTitle;\n\n      return [savesCat, checksCat];\n    }\n\n    return this._getAbilityList(\n      token.id,\n      abilities,\n      \"abilities\",\n      this.i18n(\"tokenactionhud.abilities\"),\n      \"ability\"\n    );\n  }\n\n  _buildMultipleTokenList() {\n    const list = this.initializeEmptyActionList();\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId);\n\n    if (settings.get(\"splitAbilities\")) {\n      let savesTitle = this.i18n(\"tokenactionhud.saves\");\n      let checksTitle = this.i18n(\"tokenactionhud.checks\");\n      this._addMultiAbilities(\n        list,\n        tokenId,\n        \"saves\",\n        savesTitle,\n        \"abilitySave\"\n      );\n      this._addMultiAbilities(\n        list,\n        tokenId,\n        \"checks\",\n        checksTitle,\n        \"abilityCheck\"\n      );\n    } else {\n      let abilitiesTitle = this.i18n(\"tokenactionhud.abilities\");\n      this._addMultiAbilities(\n        list,\n        tokenId,\n        \"abilities\",\n        abilitiesTitle,\n        \"ability\"\n      );\n    }\n\n    if (settings.get(\"showConditionsCategory\"))\n      this._addMultiConditions(list, tokenId);\n\n    this._addMultiUtilities(list, tokenId, actors);\n\n    return list;\n  }\n\n  /** ITEMS **/\n\n  /** @private */\n  _buildItemsCategory(token) {\n    const actor = token.actor;\n    const tokenId = token.id;\n\n    let validItems = this._filterLongerActions(\n      actor.data.items.filter((i) => this._getEntityData(i).quantity > 0)\n    );\n    let sortedItems = this._sortByItemSort(validItems);\n    let macroType = \"item\";\n\n    let equipped;\n    if (actor.data.type === \"npc\" && settings.get(\"showAllNpcItems\")) {\n      equipped = sortedItems.filter(\n        (i) =>\n          i.type !== \"consumable\" && i.type !== \"spell\" && i.type !== \"feat\"\n      );\n    } else {\n      equipped = sortedItems.filter(\n        (i) => i.type !== \"consumable\" && this._getEntityData(i).equipped\n      );\n    }\n    let activeEquipped = this._getActiveEquipment(equipped);\n\n    let weapons = activeEquipped.filter((i) => i.type == \"weapon\");\n    let weaponActions = weapons.map((w) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = activeEquipped.filter((i) => i.type == \"equipment\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let other = activeEquipped.filter(\n      (i) => i.type != \"weapon\" && i.type != \"equipment\"\n    );\n    let otherActions = other.map((o) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, o)\n    );\n    let otherCat = this.initializeEmptySubcategory();\n    otherCat.actions = otherActions;\n\n    let allConsumables = this._getActiveEquipment(\n      sortedItems.filter((i) => i.type == \"consumable\")\n    );\n\n    let expendedFiltered = this._filterExpendedItems(allConsumables);\n    let consumable = expendedFiltered;\n    let consumableActions = consumable.map((c) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, c)\n    );\n    let consumablesCat = this.initializeEmptySubcategory();\n    consumablesCat.actions = consumableActions;\n\n    let tools = validItems.filter((t) => t.type === \"tool\");\n    let toolsActions = tools.map((i) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, i)\n    );\n    let toolsCat = this.initializeEmptySubcategory();\n    toolsCat.actions = toolsActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n    let otherTitle = this.i18n(\"tokenactionhud.other\");\n    let consumablesTitle = this.i18n(\"tokenactionhud.consumables\");\n    let toolsTitle = this.i18n(\"tokenactionhud.tools\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n    result.name = this.i18n(\"tokenactionhud.inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n    this._combineSubcategoryWithCategory(result, otherTitle, otherCat);\n    this._combineSubcategoryWithCategory(\n      result,\n      consumablesTitle,\n      consumablesCat\n    );\n    this._combineSubcategoryWithCategory(result, toolsTitle, toolsCat);\n\n    return result;\n  }\n\n  /** @private */\n  _getActiveEquipment(equipment) {\n    const activationTypes = Object.keys(\n      game.dnd5e.config.abilityActivationTypes\n    ).filter((at) => at !== \"none\");\n\n    let activeEquipment = equipment.filter((e) => {\n      const equipmentData = this._getEntityData(e);\n      let activation = equipmentData.activation;\n      if (!activation) return false;\n\n      return activationTypes.includes(equipmentData.activation.type);\n    });\n\n    return activeEquipment;\n  }\n\n  /** SPELLS **/\n\n  /** @private */\n  _buildSpellsCategory(token) {\n    const actor = token.actor;\n    if (actor.data.type === \"vehicle\") return;\n\n    let validSpells = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type === \"spell\")\n    );\n    validSpells = this._filterExpendedItems(validSpells);\n\n    if (actor.data.type === \"character\" || !settings.get(\"showAllNpcItems\"))\n      validSpells = this._filterNonpreparedSpells(validSpells);\n\n    let spellsSorted = this._sortSpellsByLevel(validSpells);\n    return this._categoriseSpells(actor, token.id, spellsSorted);\n  }\n\n  /** @private */\n  _sortSpellsByLevel(spells) {\n    let result = Object.values(spells);\n\n    result.sort((a, b) => {\n      const aData = this._getEntityData(a);\n      const bData = this._getEntityData(b);\n      if (aData.level === bData.level)\n        return a.name\n          .toUpperCase()\n          .localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      return aData.level - bData.level;\n    });\n\n    return result;\n  }\n\n  /** @private */\n  _categoriseSpells(actor, tokenId, spells) {\n    const powers = this.initializeEmptySubcategory();\n    const book = this.initializeEmptySubcategory();\n    const macroType = \"spell\";\n\n    // Reverse sort spells by level\n    const spellSlotInfo = Object.entries(actor.data.data.spells).sort(\n      (a, b) => {\n        return b[0]\n          .toUpperCase()\n          .localeCompare(a[0].toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      }\n    );\n\n    // Go through spells and if higher available slots exist, mark spell slots available at lower levels.\n    var pactInfo = spellSlotInfo.find((s) => s[0] === \"pact\");\n\n    var slotsAvailable = false;\n    spellSlotInfo.forEach((s) => {\n      if (s[0].startsWith(\"spell\")) {\n        if (!slotsAvailable && s[1].max > 0 && s[1].value > 0)\n          slotsAvailable = true;\n\n        if (!slotsAvailable && s[0] === \"spell\" + pactInfo[1]?.level) {\n          if (pactInfo[1].max > 0 && pactInfo[1].value > 0)\n            slotsAvailable = true;\n        }\n\n        s[1].slotsAvailable = slotsAvailable;\n      } else {\n        if (!s[1]) s[1] = {};\n\n        s[1].slotsAvailable = !s[1].max || s[1].value > 0;\n      }\n    });\n\n    let pactIndex = spellSlotInfo.findIndex((p) => p[0] === \"pact\");\n    if (!spellSlotInfo[pactIndex][1].slotsAvailable) {\n      var pactSpellEquivalent = spellSlotInfo.findIndex(\n        (s) => s[0] === \"spell\" + pactInfo[1].level\n      );\n      spellSlotInfo[pactIndex][1].slotsAvailable =\n        spellSlotInfo[pactSpellEquivalent][1].slotsAvailable;\n    }\n\n    let dispose = spells.reduce(\n      function (dispose, s) {\n        const spellData = this._getEntityData(s);\n        let prep = spellData.preparation.mode;\n        const prepType = game.dnd5e.config.spellPreparationModes[prep];\n\n        var level = spellData.level;\n        let power = prep === \"pact\" || prep === \"atwill\" || prep === \"innate\";\n\n        var max, slots, levelName, levelKey, levelInfo;\n\n        if (power) {\n          levelKey = prep;\n        } else {\n          levelKey = \"spell\" + level;\n          levelName = level\n            ? `${this.i18n(\"tokenactionhud.level\")} ${level}`\n            : this.i18n(\"tokenactionhud.cantrips\");\n        }\n\n        levelInfo = spellSlotInfo.find((lvl) => lvl[0] === levelKey)?.[1];\n        slots = levelInfo?.value;\n        max = levelInfo?.max;\n\n        let ignoreSlotsAvailable = settings.get(\"showEmptyItems\");\n        if (max && !(levelInfo?.slotsAvailable || ignoreSlotsAvailable)) return;\n\n        let spell = this._buildItem(tokenId, actor, macroType, s);\n\n        if (settings.get(\"showSpellInfo\")) this._addSpellInfo(s, spell);\n\n        // Initialise subcategory if non-existant.\n        let subcategory;\n        if (power) {\n          subcategory = powers.subcategories.find(\n            (cat) => cat.name === prepType\n          );\n        } else {\n          subcategory = book.subcategories.find(\n            (cat) => cat.name === levelName\n          );\n        }\n\n        if (!subcategory) {\n          subcategory = this.initializeEmptySubcategory();\n          if (max > 0) {\n            subcategory.info1 = `${slots}/${max}`;\n          }\n        }\n\n        subcategory.actions.push(spell);\n\n        if (power && powers.subcategories.indexOf(subcategory) < 0)\n          this._combineSubcategoryWithCategory(powers, prepType, subcategory);\n        else if (!power && book.subcategories.indexOf(subcategory) < 0)\n          this._combineSubcategoryWithCategory(book, levelName, subcategory);\n\n        return dispose;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"spells\");\n    result.name = this.i18n(\"tokenactionhud.spells\");\n\n    let powersTitle = this.i18n(\"tokenactionhud.powers\");\n    let booksTitle = this.i18n(\"tokenactionhud.books\");\n\n    this._combineSubcategoryWithCategory(result, powersTitle, powers);\n    this._combineSubcategoryWithCategory(result, booksTitle, book);\n\n    return result;\n  }\n\n  /** @private */\n  _addSpellInfo(s, spell) {\n    const spellData = this._getEntityData(s);\n    let c = spellData.components;\n\n    spell.info1 = \"\";\n    spell.info2 = \"\";\n    spell.info3 = \"\";\n    if (c?.vocal)\n      spell.info1 += this.i18n(\"DND5E.ComponentVerbal\").charAt(0).toUpperCase();\n\n    if (c?.somatic)\n      spell.info1 += this.i18n(\"DND5E.ComponentSomatic\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.material)\n      spell.info1 += this.i18n(\"DND5E.ComponentMaterial\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.concentration)\n      spell.info2 += this.i18n(\"DND5E.Concentration\").charAt(0).toUpperCase();\n\n    if (c?.ritual)\n      spell.info3 += this.i18n(\"DND5E.Ritual\").charAt(0).toUpperCase();\n  }\n\n  /** FEATS **/\n\n  /** @private */\n  _buildFeaturesCategory(token) {\n    let validFeats = this._filterLongerActions(\n      token.actor.data.items.filter((i) => i.type == \"feat\")\n    );\n    let sortedFeats = this._sortByItemSort(validFeats);\n    return this._categoriseFeats(token.id, token.actor, sortedFeats);\n  }\n\n  /** @private */\n  _categoriseFeats(tokenId, actor, feats) {\n    let active = this.initializeEmptySubcategory();\n    let passive = this.initializeEmptySubcategory();\n    let lair = this.initializeEmptySubcategory();\n    let legendary = this.initializeEmptySubcategory();\n\n    let dispose = feats.reduce(\n      function (dispose, f) {\n        const featData = this._getEntityData(f);\n        const activationType = featData.activation.type;\n        const macroType = \"feat\";\n\n        let feat = this._buildEquipmentItem(tokenId, actor, macroType, f);\n\n        if (!activationType || activationType === \"\") {\n          passive.actions.push(feat);\n          return;\n        }\n\n        if (activationType == \"lair\") {\n          lair.actions.push(feat);\n          return;\n        }\n\n        if (activationType == \"legendary\") {\n          legendary.actions.push(feat);\n          return;\n        }\n\n        active.actions.push(feat);\n\n        return;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"feats\");\n    result.name = this.i18n(\"tokenactionhud.features\");\n\n    let activeTitle = this.i18n(\"tokenactionhud.active\");\n    let legendaryTitle = this.i18n(\"tokenactionhud.legendary\");\n    let lairTitle = this.i18n(\"tokenactionhud.lair\");\n    this._combineSubcategoryWithCategory(result, activeTitle, active);\n    this._combineSubcategoryWithCategory(result, legendaryTitle, legendary);\n    this._combineSubcategoryWithCategory(result, lairTitle, lair);\n\n    if (!settings.get(\"ignorePassiveFeats\")) {\n      let passiveTitle = this.i18n(\"tokenactionhud.passive\");\n      this._combineSubcategoryWithCategory(result, passiveTitle, passive);\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _buildSkillsCategory(token) {\n    const actor = token.actor;\n    if (actor.data.type === \"vehicle\") return;\n\n    const skills = actor.data.data.skills;\n\n    let result = this.initializeEmptyCategory(\"skills\");\n    result.name = this.i18n(\"tokenactionhud.skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(skills)\n      .map((e) => {\n        try {\n          let skillId = e[0];\n          let name = abbr ? skillId : game.dnd5e.config.skills[skillId];\n          name = name.charAt(0).toUpperCase() + name.slice(1);\n          let encodedValue = [macroType, token.id, e[0]].join(this.delimiter);\n          let icon = this._getProficiencyIcon(skills[skillId].value);\n          return {\n            name: name,\n            id: e[0],\n            encodedValue: encodedValue,\n            icon: icon,\n          };\n        } catch (error) {\n          Logger.error(e);\n          return null;\n        }\n      })\n      .filter((s) => !!s);\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n\n    return result;\n  }\n\n  _addMultiSkills(list, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(game.dnd5e.config.skills).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(list, skillsTitle, result, true);\n  }\n\n  /** @private */\n  _getAbilityList(tokenId, abilities, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n    result.name = categoryName;\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(game.dnd5e.config.abilities).map((e) => {\n      if (abilities[e[0]].value === 0) return;\n\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon;\n      if (categoryId === \"checks\") icon = \"\";\n      else icon = this._getProficiencyIcon(abilities[e[0]].proficient);\n\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, abilityCategory);\n\n    return result;\n  }\n\n  _addMultiAbilities(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(game.dnd5e.config.abilities).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(cat, categoryName, abilityCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  /** @private */\n  _buildUtilityCategory(token) {\n    const actor = token.actor;\n\n    let result = this.initializeEmptyCategory(\"utility\");\n    result.name = this.i18n(\"tokenactionhud.utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n    let utility = this.initializeEmptySubcategory();\n\n    this._addIntiativeSubcategory(macroType, result, token.id);\n\n    if (actor.data.type === \"character\") {\n      let shortRestValue = [macroType, token.id, \"shortRest\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"shortRest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.shortRest\"),\n      });\n      let longRestValue = [macroType, token.id, \"longRest\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"longRest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.longRest\"),\n      });\n\n      if (actor.data.data.attributes.hp.value <= 0) {\n        let deathSaveValue = [macroType, token.id, \"deathSave\"].join(\n          this.delimiter\n        );\n        let deathSaveAction = {\n          id: \"deathSave\",\n          encodedValue: deathSaveValue,\n          name: this.i18n(\"tokenactionhud.deathSave\"),\n        };\n        utility.actions.push(deathSaveAction);\n      }\n\n      let inspirationValue = [macroType, token.id, \"inspiration\"].join(\n        this.delimiter\n      );\n      let inspirationAction = {\n        id: \"inspiration\",\n        encodedValue: inspirationValue,\n        name: this.i18n(\"tokenactionhud.inspiration\"),\n      };\n      inspirationAction.cssClass = actor.data.data.attributes?.inspiration\n        ? \"active\"\n        : \"\";\n      utility.actions.push(inspirationAction);\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _buildEffectsCategory(token) {\n    let result = this.initializeEmptyCategory(\"effects\");\n    result.name = this.i18n(\"tokenactionhud.effects\");\n    this._addEffectsSubcategories(token.actor, token.id, result);\n    return result;\n  }\n\n  /** @private */\n  _buildConditionsCategory(token) {\n    if (!settings.get(\"showConditionsCategory\")) return;\n    let result = this.initializeEmptyCategory(\"conditions\");\n    result.name = this.i18n(\"tokenactionhud.conditions\");\n    this._addConditionsSubcategory(token.actor, token.id, result);\n    return result;\n  }\n\n  /** @private */\n  _addEffectsSubcategories(actor, tokenId, category) {\n    const macroType = \"effect\";\n\n    const effects =\n      \"find\" in actor.effects.entries ? actor.effects.entries : actor.effects;\n\n    let tempCategory = this.initializeEmptySubcategory();\n    let passiveCategory = this.initializeEmptySubcategory();\n\n    effects.forEach((e) => {\n      const effectData = this._getEntityData(e);\n      const name = effectData.label;\n      const encodedValue = [macroType, tokenId, e.id].join(this.delimiter);\n      const cssClass = effectData.disabled ? \"\" : \"active\";\n      const image = effectData.icon;\n      let action = {\n        name: name,\n        id: e.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      e.isTemporary\n        ? tempCategory.actions.push(action)\n        : passiveCategory.actions.push(action);\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.temporary\"),\n      tempCategory\n    );\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.passive\"),\n      passiveCategory\n    );\n  }\n\n  /** @private */\n  _addMultiConditions(list, tokenId) {\n    const category = this.initializeEmptyCategory(\"conditions\");\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n    const actors = canvas.tokens.controlled\n      .filter((t) => !!t.actor)\n      .map((t) => t.actor);\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const cssClass = actors.every((actor) => {\n        const effects =\n          \"some\" in actor.effects.entries\n            ? actor.effects.entries\n            : actor.effects;\n        effects.some((e) => e.data.flags.core?.statusId === c.id);\n      })\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    const conName = this.i18n(\"tokenactionhud.conditions\");\n    this._combineSubcategoryWithCategory(category, conName, conditions);\n    this._combineCategoryWithList(list, conName, category);\n  }\n\n  /** @private */\n  _addConditionsSubcategory(actor, tokenId, category) {\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const effects =\n        \"some\" in actor.effects.entries ? actor.effects.entries : actor.effects;\n      const cssClass = effects.some((e) => e.data.flags.core?.statusId === c.id)\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.conditions\"),\n      conditions\n    );\n  }\n\n  /** @private */\n  _addIntiativeSubcategory(macroType, category, tokenId) {\n    const combat = game.combat;\n    let combatant, currentInitiative;\n    if (combat) {\n      combatant = combat.combatants.find((c) => c.tokenId === tokenId);\n      currentInitiative = combatant?.initiative;\n    }\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    if (currentInitiative) initiativeAction.info1 = currentInitiative;\n    initiativeAction.cssClass = currentInitiative ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiIntiativeSubcategory(macroType, tokenId, category) {\n    const combat = game.combat;\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    let isActive;\n    if (combat) {\n      let tokenIds = canvas.tokens.controlled.map((t) => t.id);\n      let tokenCombatants = tokenIds.map((id) =>\n        combat.combatants.find((c) => c.tokenId === id)\n      );\n      isActive = tokenCombatants.every((c) => !!c?.initiative);\n    }\n\n    initiativeAction.cssClass = isActive ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    this._addMultiIntiativeSubcategory(macroType, tokenId, category);\n\n    let rests = this.initializeEmptySubcategory();\n    let utility = this.initializeEmptySubcategory();\n\n    if (actors.every((a) => a.data.type === \"character\")) {\n      let shortRestValue = [macroType, tokenId, \"shortRest\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"shortRest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.shortRest\"),\n      });\n      let longRestValue = [macroType, tokenId, \"longRest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"longRest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.longRest\"),\n      });\n\n      let inspirationValue = [macroType, tokenId, \"inspiration\"].join(\n        this.delimiter\n      );\n      let inspirationAction = {\n        id: \"inspiration\",\n        encodedValue: inspirationValue,\n        name: this.i18n(\"tokenactionhud.inspiration\"),\n      };\n      inspirationAction.cssClass = actors.every(\n        (a) => a.data.data.attributes?.inspiration\n      )\n        ? \"active\"\n        : \"\";\n      utility.actions.push(inspirationAction);\n    }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      category\n    );\n  }\n\n  /** @private */\n  _buildEquipmentItem(tokenId, actor, macroType, item) {\n    let action = this._buildItem(tokenId, actor, macroType, item);\n    this._addItemInfo(actor, item, action);\n    return action;\n  }\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    const itemData = this._getEntityData(item);\n    const itemId = item.id ?? item._id;\n    let encodedValue = [macroType, tokenId, itemId].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data?.data?.activation?.type);\n    let result = {\n      name: item.name,\n      id: itemId,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    if (\n      itemData.recharge &&\n      !itemData.recharge.charged &&\n      itemData.recharge.value\n    ) {\n      result.name += ` (${this.i18n(\"tokenactionhud.recharge\")})`;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _addItemInfo(actor, item, action) {\n    action.info1 = this._getQuantityData(item);\n\n    action.info2 = this._getUsesData(item);\n\n    action.info3 = this._getConsumeData(item, actor);\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    const itemData = this._getEntityData(item);\n    let result = \"\";\n    let quantity = itemData.quantity;\n    if (quantity > 1) {\n      result = quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getUsesData(item) {\n    const itemData = this._getEntityData(item);\n    let result = \"\";\n\n    let uses = itemData.uses;\n    if (!uses) return result;\n\n    result = uses.value === 0 && uses.max ? \"0\" : uses.value;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getConsumeData(item, actor) {\n    const itemData = this._getEntityData(item);\n    let result = \"\";\n\n    let consumeType = itemData.consume?.type;\n    if (consumeType && consumeType !== \"\") {\n      let consumeId = itemData.consume.target;\n      let parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\n      if (consumeType === \"attribute\") {\n        let target = getProperty(actor, `data.data.${parentId}`);\n\n        if (target) {\n          result = target.value ?? 0;\n          if (!!target.max) result += `/${target.max}`;\n        }\n      }\n\n      if (consumeType === \"charges\") {\n        let consumeId = itemData.consume.target;\n        let target = actor.items.get(consumeId);\n        let uses = target?.data.data.uses;\n        if (uses?.value) {\n          result = uses.value;\n          if (uses.max) result += `/${uses.max}`;\n        }\n      }\n\n      if (!(consumeType === \"attribute\" || consumeType === \"charges\")) {\n        let consumeId = itemData.consume.target;\n        let target = actor.items.get(consumeId);\n        let quantity = target?.data.data.quantity;\n        if (quantity) {\n          result = quantity;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _filterLongerActions(items) {\n    var result;\n\n    if (settings.get(\"hideLongerActions\"))\n      result = items.filter((i) => {\n        const iData = this._getEntityData(i);\n        return (\n          !iData.activation ||\n          !(\n            iData.activation.type === \"minute\" ||\n            iData.activation.type === \"hour\" ||\n            iData.activation.type === \"day\"\n          )\n        );\n      });\n\n    return result ? result : items;\n  }\n\n  /** @private */\n  _filterNonpreparedSpells(spells) {\n    const nonpreparableSpells = Object.keys(\n      game.dnd5e.config.spellPreparationModes\n    ).filter((p) => p != \"prepared\");\n    let result = spells;\n\n    if (settings.get(\"showAllNonpreparableSpells\")) {\n      result = spells.filter((i) => {\n        const iData = this._getEntityData(i);\n        return (\n          iData.preparation.prepared ||\n          nonpreparableSpells.includes(iData.preparation.mode) ||\n          iData.level === 0\n        );\n      });\n    } else {\n      result = spells.filter(\n        (i) => this._getEntityData(i).preparation.prepared\n      );\n    }\n\n    return result;\n  }\n\n  _filterExpendedItems(items) {\n    if (settings.get(\"showEmptyItems\")) return items;\n\n    return items.filter((i) => {\n      const iData = this._getEntityData(i);\n      let uses = iData.uses;\n      // Assume something with no uses is unlimited in its use.\n      if (!uses) return true;\n\n      // if it has a max but value is 0, don't return.\n      if (uses.max > 0 && !uses.value) return false;\n\n      return true;\n    });\n  }\n\n  /** @private */\n  _sortByItemSort(items) {\n    let result = Object.values(items);\n\n    result.sort((a, b) => a.sort - b.sort);\n\n    return result;\n  }\n\n  /** @private */\n  _getProficiencyIcon(level) {\n    const icons = {\n      0: \"\",\n      0.5: '<i class=\"fas fa-adjust\"></i>',\n      1: '<i class=\"fas fa-check\"></i>',\n      2: '<i class=\"fas fa-check-double\"></i>',\n    };\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      //action: `<i class=\"fas fa-fist-raised\"></i>`,\n      bonus: `<i class=\"fas fa-plus\"></i>`,\n      crew: `<i class=\"fas fa-users\"></i>`,\n      legendary: `<i class=\"fas fa-dragon\"></i>`,\n      reaction: `<i class=\"fas fa-bolt\"></i>`,\n      //none: `<i class=\"far fa-circle\"></i>`,\n      special: `<i class=\"fas fa-star\"></i>`,\n      lair: `<i class=\"fas fa-home\"></i>`,\n      minute: `<i class=\"fas fa-hourglass-start\"></i>`,\n      hour: `<i class=\"fas fa-hourglass-half\"></i>`,\n      day: `<i class=\"fas fa-hourglass-end\"></i>`,\n    };\n    return img[action];\n  }\n\n  _getEntityData(entity) {\n    return entity.data.data ?? entity.data;\n  }\n}\n",
    "import { ActionHandler5e } from \"./dnd5e-actions.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandler5eGroupByType extends ActionHandler5e {\n  /** @override */\n  async _buildCategories(token) {\n    const api = game.modules.get(\"character-actions-list-5e\").api;\n    const actionData = await api.getActorActionsData(token.actor);\n\n    return [\n      this._buildActionCategory(token, \"actions\", actionData.action),\n      this._buildActionCategory(token, \"bonusActions\", actionData.bonus),\n      this._buildActionCategory(token, \"reactions\", actionData.reaction),\n      this._buildActionCategory(token, \"crewActions\", actionData.crew),\n      this._buildActionCategory(\n        token,\n        \"legendaryActions\",\n        actionData.legendary\n      ),\n      this._buildActionCategory(token, \"lairActions\", actionData.lair),\n      this._buildActionCategory(token, \"specialActions\", actionData.other),\n      this._buildSkillsCategory(token),\n      this._buildAbilitiesCategory(token),\n      this._buildEffectsCategory(token),\n      this._buildConditionsCategory(token),\n      this._buildUtilityCategory(token),\n    ];\n  }\n\n  _buildActionCategory(token, title, actions) {\n    const category = this.initializeEmptyCategory(title);\n    category.name = this.i18n(`tokenactionhud.${title}`);\n\n    let spells = [];\n    for (const a of actions) {\n      if (a.type == \"spell\") {\n        spells.push(a);\n        actions.delete(a);\n      }\n    }\n    if (\n      token.actor.data.type === \"character\" ||\n      !settings.get(\"showAllNpcItems\")\n    ) {\n      spells = this._filterNonpreparedSpells(spells);\n    }\n    spells = this._sortSpellsByLevel(spells);\n    spells = this._categoriseSpells(token.actor, token.id, spells);\n\n    this._subCategorizeEquipment(\n      token,\n      category,\n      actions,\n      this.i18n(\"tokenactionhud.weapons\"),\n      (i) => i.type == \"weapon\"\n    );\n    this._subCategorizeEquipment(\n      token,\n      category,\n      actions,\n      this.i18n(\"tokenactionhud.equipment\"),\n      (i) => i.type == \"equipment\"\n    );\n    this._subCategorizeEquipment(\n      token,\n      category,\n      actions,\n      this.i18n(\"tokenactionhud.consumables\"),\n      (i) => i.type == \"consumable\"\n    );\n    this._subCategorizeEquipment(\n      token,\n      category,\n      actions,\n      this.i18n(\"tokenactionhud.tools\"),\n      (i) => i.type == \"tool\"\n    );\n    this._subCategorizeEquipment(\n      token,\n      category,\n      actions,\n      this.i18n(\"tokenactionhud.other\"),\n      (i) => true\n    );\n\n    for (const subCat of spells.subcategories) {\n      this._combineSubcategoryWithCategory(category, subCat.name, subCat);\n    }\n\n    return category;\n  }\n\n  // Adds actions matching predicate to a new subcategory, and returns it.\n  // Deletes matches from the actions set as it does so.\n  _subCategorizeEquipment(token, category, actions, title, predicate) {\n    const subcat = this.initializeEmptySubcategory();\n    const matches = new Set();\n    for (const a of actions) {\n      if (predicate(a)) {\n        matches.add(a);\n        actions.delete(a);\n      }\n    }\n    if (matches.size > 0) {\n      subcat.actions = [...matches].map((i) =>\n        this._buildEquipmentItem(token.id, token.actor, \"item\", i)\n      );\n      this._combineSubcategoryWithCategory(category, title, subcat);\n    }\n  }\n}\n",
    "import { PreRollHandler } from \"../preRollHandler.js\";\n\nexport class MagicItemsPreRollHandler extends PreRollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  prehandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) return false;\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (macroType != \"magicItem\") return false;\n\n    this._magicItemMacro(event, tokenId, actionId);\n    return true;\n  }\n\n  _magicItemMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let actionParts = actionId.split(\">\");\n\n    let itemId = actionParts[0];\n    let magicEffectId = actionParts[1];\n\n    let magicItemActor = MagicItems.actor(actor._id);\n\n    magicItemActor.roll(itemId, magicEffectId);\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n}\n",
    "import { ActionListExtender } from \"./actionListExtender.js\";\nimport * as settings from \"../settings.js\";\n\nexport class MagicItemActionListExtender extends ActionListExtender {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  extendActionList(actionList, multipleTokens) {\n    if (multipleTokens) return;\n\n    let tokenId = actionList.tokenId;\n    let actorId = actionList.actorId;\n\n    if (!actorId) return;\n\n    let itemCategories = actionList.categories.find(\n      (c) => c.id === \"inventory\"\n    );\n    let actor = MagicItems.actor(actorId);\n\n    if (!(actor && itemCategories)) return;\n\n    let magicItems = actor.items ?? [];\n\n    if (magicItems.length === 0) return;\n\n    let magicItemsCategory = this.initializeEmptyCategory(\"magicItemsModule\");\n    magicItemsCategory.name = this.i18n(\"tokenactionhud.magicItems\");\n\n    let magicItemsIds = magicItems.map((item) => item.id);\n\n    itemCategories.subcategories.forEach((s) => {\n      s.actions.forEach((action) => {\n        if (!magicItemsIds.includes(action.id)) return;\n\n        let magicItem = magicItems.find((item) => item.id === action.id);\n\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\n\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\n\n        let subcategory = this.initializeEmptySubcategory();\n        subcategory.info1 = `${magicItem.uses}/${magicItem.charges}`;\n\n        magicItem.ownedEntries.forEach((entry) => {\n          let effect = entry.item;\n          let encodedValue = [\n            \"magicItem\",\n            tokenId,\n            `${action.id}>${effect.id}`,\n          ].join(\"|\");\n          let img = this._getImage(effect);\n          let magicItemAction = {\n            name: effect.name,\n            id: effect.id,\n            encodedValue: encodedValue,\n            img: img,\n          };\n          magicItemAction.info1 = effect.consumption;\n          if (effect.baseLevel)\n            magicItemAction.info2 = `${this.i18n(\n              \"tokenactionhud.levelAbbreviation\"\n            )} ${effect.baseLevel}`;\n          subcategory.actions.push(magicItemAction);\n        });\n\n        subcategory.actions.unshift(action);\n\n        this._combineSubcategoryWithCategory(\n          magicItemsCategory,\n          action.name,\n          subcategory\n        );\n      });\n    });\n\n    this._combineCategoryWithList(\n      actionList,\n      magicItemsCategory.name,\n      magicItemsCategory,\n      false\n    );\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  _isItemEquipped(magicItem) {\n    return magicItem.item.data.data.equipped;\n  }\n\n  _isItemAttuned(magicItem) {\n    var itemData = magicItem.item.data.data;\n\n    if (!!itemData.attunement) {\n      const attuned = CONFIG.DND5E.attunementTypes?.ATTUNED ?? 2;\n      return itemData.attunement === attuned;\n    }\n\n    if (!!itemData.attuned) return itemData.attuned;\n\n    return false;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBase5e extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      for (let t of canvas.tokens.controlled) {\n        let idToken = t.id;\n        await this._handleMacros(event, macroType, idToken, actionId);\n      }\n    } else {\n      await this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    switch (macroType) {\n      case \"ability\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"skill\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"abilitySave\":\n        this.rollAbilitySaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilityCheck\":\n        this.rollAbilityCheckMacro(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"spell\":\n      case \"feat\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"utility\":\n        await this.performUtilityMacro(event, tokenId, actionId);\n        break;\n      case \"effect\":\n        await this.toggleEffect(event, tokenId, actionId);\n        break;\n      case \"condition\":\n        await this.toggleCondition(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbility(checkId, { event: event });\n  }\n\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilityTest(checkId, { event: event });\n  }\n\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilitySave(checkId, { event: event });\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSkill(checkId, { event: event });\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    let item = super.getItem(actor, itemId);\n\n    if (this.needsRecharge(item)) {\n      item.rollRecharge();\n      return;\n    }\n\n    if (item.data.type === \"spell\") return actor.useSpell(item);\n\n    return item.roll({ event });\n  }\n\n  needsRecharge(item) {\n    const itemData = this._getEntityData(item);\n    return (\n      itemData.recharge && !itemData.recharge.charged && itemData.recharge.value\n    );\n  }\n\n  async performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"shortRest\":\n        actor.shortRest();\n        break;\n      case \"longRest\":\n        actor.longRest();\n        break;\n      case \"inspiration\":\n        let update = !actor.data.data.attributes.inspiration;\n        actor.update({ \"data.attributes.inspiration\": update });\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n      case \"deathSave\":\n        actor.rollDeathSave({ event });\n        break;\n      case \"initiative\":\n        await this.performInitiativeMacro(tokenId);\n        break;\n    }\n  }\n\n  async performInitiativeMacro(tokenId) {\n    let actor = super.getActor(tokenId);\n\n    await actor.rollInitiative({ createCombatants: true });\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleEffect(event, tokenId, effectId) {\n    const actor = super.getActor(tokenId);\n    const effects =\n      \"find\" in actor.effects.entries ? actor.effects.entries : actor.effects;\n    const effect = effects.find((e) => e.id === effectId);\n\n    if (!effect) return;\n\n    const statusId = effect.data.flags.core?.statusId;\n    if (statusId) {\n      await this.toggleCondition(event, tokenId, statusId);\n      return;\n    }\n\n    await effect.update({ disabled: !effect.data.disabled });\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleCondition(event, tokenId, effectId) {\n    const token = super.getToken(tokenId);\n    const isRightClick = this.isRightClick(event);\n    if (\n      effectId.includes(\"combat-utility-belt.\") &&\n      game.cub &&\n      !isRightClick\n    ) {\n      const cubCondition = this.findCondition(effectId)?.label;\n      if (!cubCondition) return;\n\n      game.cub.hasCondition(cubCondition, token)\n        ? await game.cub.removeCondition(cubCondition, token)\n        : await game.cub.addCondition(cubCondition, token);\n    } else {\n      const condition = this.findCondition(effectId);\n      if (!condition) return;\n\n      isRightClick\n        ? await token.toggleOverlay(condition)\n        : await token.toggleEffect(condition);\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  findCondition(id) {\n    return CONFIG.statusEffects.find((effect) => effect.id === id);\n  }\n\n  _getEntityData(entity) {\n    return entity.data.data ?? entity.data;\n  }\n}\n",
    "import { RollHandlerBase5e } from \"./dnd5e-base.js\";\n\nexport class RollHandlerMinorQol5e extends RollHandlerBase5e {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    let item = actor.items.get(itemId);\n\n    if (this.needsRecharge(item)) {\n      item.rollRecharge();\n      return;\n    }\n\n    if (this.rightClick && this.ctrl) {\n      item.rollAttack();\n      return;\n    }\n    if (this.rightClick && this.alt) {\n      item.rollDamage();\n      return;\n    }\n\n    var versatile;\n    if (item.data.data.properties?.ver) {\n      versatile = this.rightClick;\n    }\n\n    MinorQOL.doCombinedRoll({ actor, item, event, versatile });\n  }\n}\n",
    "import { RollHandlerBase5e } from \"./dnd5e-base.js\";\n\nexport class RollHandlerObsidian extends RollHandlerBase5e {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    let actor = super.getActor(tokenId);\n    OBSIDIAN.Items.roll(actor, { roll: \"abl\", abl: checkId });\n  }\n\n  /** @override */\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    let actor = super.getActor(tokenId);\n    OBSIDIAN.Items.roll(actor, { roll: \"save\", save: checkId });\n  }\n\n  /** @override */\n  rollSkillMacro(event, tokenId, checkId) {\n    let actor = super.getActor(tokenId);\n    OBSIDIAN.Items.roll(actor, { roll: \"skl\", skl: checkId });\n  }\n\n  /** @override */\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    OBSIDIAN.Items.roll(actor, { roll: \"item\", id: itemId });\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandler5e as ActionHandler } from \"../actions/dnd5e/dnd5e-actions.js\";\nimport { ActionHandler5eGroupByType } from \"../actions/dnd5e/dnd5e-actions-by-type.js\";\nimport { MagicItemsPreRollHandler } from \"../rollHandlers/dnd5e/pre-magicItems.js\";\nimport { MagicItemActionListExtender } from \"../actions/magicItemsExtender.js\";\nimport { RollHandlerBase5e as Core } from \"../rollHandlers/dnd5e/dnd5e-base.js\";\nimport { RollHandlerMinorQol5e as MinorQol5e } from \"../rollHandlers/dnd5e/dnd5e-minorqol.js\";\nimport { RollHandlerObsidian as Obsidian5e } from \"../rollHandlers/dnd5e/dnd5e-obsidian.js\";\nimport * as settings from \"../settings.js\";\nimport * as systemSettings from \"../settings/dnd5e-settings.js\";\n\nexport class Dnd5eSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler;\n    if (\n      SystemManager.isModuleActive(\"character-actions-list-5e\") &&\n      settings.get(\"useActionList\")\n    ) {\n      actionHandler = new ActionHandler5eGroupByType(\n        filterManager,\n        categoryManager\n      );\n    } else {\n      actionHandler = new ActionHandler(filterManager, categoryManager);\n    }\n\n    if (SystemManager.isModuleActive(\"magicitems\"))\n      actionHandler.addFurtherActionHandler(new MagicItemActionListExtender());\n\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let coreTitle = \"Core D&D5e\";\n\n    if (SystemManager.isModuleActive(\"midi-qol\"))\n      coreTitle += ` [supports ${SystemManager.getModuleTitle(\"midi-qol\")}]`;\n\n    let choices = { core: coreTitle };\n    SystemManager.addHandler(choices, \"minor-qol\");\n    SystemManager.addHandler(choices, \"obsidian\");\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    let rollHandler;\n    switch (handlerId) {\n      case \"minor-qol\":\n        rollHandler = new MinorQol5e();\n        break;\n      case \"obsidian\":\n        rollHandler = new Obsidian5e();\n        break;\n      case \"core\":\n      default:\n        rollHandler = new Core();\n        break;\n    }\n\n    if (SystemManager.isModuleActive(\"magicitems\"))\n      rollHandler.addPreRollHandler(new MagicItemsPreRollHandler());\n\n    return rollHandler;\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    systemSettings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(appName, updateFunc) {\n  game.settings.register(appName, \"ignorePassiveFeats\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showSpellInfo\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showSpellInfo.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showSpellInfo.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showAllNonpreparableSpells\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showAllNonpreparableSpells.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showAllNonpreparableSpells.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"hideLongerActions\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.hideLongerActions.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.hideLongerActions.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"abbreviateSkills\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"splitAbilities\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.splitAbilities.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.splitAbilities.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showAllNpcItems\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showAllNpcItems.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showAllNpcItems.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showEmptyItems\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  game.settings.register(appName, \"showConditionsCategory\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showConditionsCategory.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showConditionsCategory.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n\n  if (game.modules.get(\"character-actions-list-5e\")?.active) {\n    game.settings.register(appName, \"useActionList\", {\n      name: game.i18n.localize(\"tokenactionhud.settings.useActionList.name\"),\n      hint: game.i18n.localize(\"tokenactionhud.settings.useActionList.hint\"),\n      scope: \"client\",\n      config: true,\n      type: Boolean,\n      default: false,\n      onChange: (value) => {\n        updateFunc(value);\n      },\n    });\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerDemonlord extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let attributes = this._getAttributes(actor, tokenId);\n    let weapons = this._getItemsList(actor, tokenId);\n    let talents = this._getTalents(actor, tokenId);\n    let spells = this._getSpells(actor, tokenId);\n    let utility = this._getUtilityList(actor, tokenId);\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.settings.demonlord.challenge\"),\n      attributes\n    );\n\n    if (actor.data.type === \"character\")\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.weapons\"),\n        weapons\n      );\n    else\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.settings.demonlord.attackoptions\"),\n        weapons\n      );\n\n    if (actor.data.type === \"character\")\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.talents\"),\n        talents\n      );\n    else\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.settings.demonlord.specialattacks\"),\n        talents\n      );\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.spells\"),\n      spells\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n\n    this._setFilterSuggestions(actor);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _getItemsList(actor, tokenId) {\n    let macroType = \"weapon\";\n    let result = this.initializeEmptyCategory(\"items\");\n\n    let subcategory = this.initializeEmptySubcategory();\n\n    subcategory.actions = this._produceMap(\n      tokenId,\n      actor.items\n        .filter((i) => i.type == macroType)\n        .map((item) => {\n          return {\n            name: item.name,\n            encodedValue: [item.type, tokenId, item._id].join(this.delimiter),\n          };\n        }),\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      subcategory\n    );\n\n    return result;\n  }\n\n  _getAttributes(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = this.initializeEmptySubcategory();\n    let macroType = \"challenge\";\n\n    let rollableAttributes = Object.entries(actor.data.data.attributes);\n    let attributesMap = rollableAttributes.map((c) => {\n      let name = this.i18n(\"tokenactionhud.attribute.\" + c[0]);\n      let encodedValue = [macroType, tokenId, c[0]].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: c[0] };\n    });\n\n    attributes.actions = this._produceMap(tokenId, attributesMap, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.settings.demonlord.challenge\"),\n      attributes\n    );\n\n    return result;\n  }\n\n  _addMultiAttributes(list, tokenId, actors) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = this.initializeEmptySubcategory();\n    let macroType = \"challenge\";\n\n    let attributesMap = null;\n\n    if (\n      actors.every((actor) => {\n        let rollableAttributes = Object.entries(actor.data.data.attributes);\n\n        attributesMap = rollableAttributes.map((c) => {\n          let name = this.i18n(\"tokenactionhud.attribute.\" + c[0]);\n          let encodedValue = [macroType, tokenId, c[0]].join(this.delimiter);\n          return { name: name, encodedValue: encodedValue, id: c[0] };\n        });\n      })\n    );\n\n    if (attributesMap != null) {\n      attributes.actions = this._produceMap(tokenId, attributesMap, macroType);\n\n      this._combineSubcategoryWithCategory(\n        result,\n        this.i18n(\"tokenactionhud.settings.demonlord.challenge\"),\n        attributes\n      );\n      this._combineCategoryWithList(\n        list,\n        this.i18n(\"tokenactionhud.settings.demonlord.challenge\"),\n        result\n      );\n    }\n  }\n\n  _getTalents(actor, tokenId) {\n    let macroType = \"talent\";\n    let result = this.initializeEmptyCategory(\"talents\");\n\n    let talents = actor.items.filter((i) => i.type == macroType);\n\n    const groups = [\n      ...new Set(talents.map((talent) => talent.data.data.groupname)),\n    ];\n    groups.sort().forEach((group) => {\n      if (group != undefined) {\n        let groupCategory = this.initializeEmptySubcategory();\n        groupCategory.name = group;\n        result.subcategories.push(groupCategory);\n\n        let levelSubcategory = this.initializeEmptySubcategory();\n        talents.forEach((talentEntry) => {\n          if (talentEntry.data.data.groupname == group) {\n            let encodedValue = [macroType, tokenId, talentEntry._id].join(\n              this.delimiter\n            );\n            let addTalent = {\n              name: talentEntry.name,\n              encodedValue: encodedValue,\n              id: talentEntry._id,\n            };\n            addTalent.img = this._getImage(talentEntry);\n            addTalent.info2 = this._getUsesData(talentEntry);\n\n            levelSubcategory.actions.push(addTalent);\n          }\n        });\n\n        this._combineSubcategoryWithCategory(\n          groupCategory,\n          group,\n          levelSubcategory\n        );\n      }\n    });\n\n    return result;\n  }\n\n  _getSpells(actor, tokenId) {\n    let macroType = \"spell\";\n    let result = this.initializeEmptyCategory(\"spells\");\n\n    let spells = actor.items.filter((i) => i.type === macroType);\n\n    let spellsSorted = this._sortSpellsByRank(spells);\n    let spellCategories = this._categoriseSpells(tokenId, spellsSorted);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.spells\"),\n      spellCategories\n    );\n\n    return result;\n  }\n\n  _sortSpellsByRank(spells) {\n    let result = Object.values(spells);\n\n    result.sort((a, b) => {\n      if (a.data.rank === b.data.rank)\n        return a.name\n          .toUpperCase()\n          .localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      return a.data.rank - b.data.rank;\n    });\n\n    return result;\n  }\n\n  _categoriseSpells(tokenId, spells) {\n    const macroType = \"spell\";\n    let result = this.initializeEmptySubcategory();\n\n    const traditions = [\n      ...new Set(spells.map((spell) => spell.data.data.tradition)),\n    ];\n    traditions.sort().forEach((tradition) => {\n      if (tradition != undefined) {\n        let traditionCategory = this.initializeEmptySubcategory();\n        traditionCategory.name = tradition;\n        result.subcategories.push(traditionCategory);\n\n        let levelSubcategory = this.initializeEmptySubcategory();\n        spells.forEach((spellEntry) => {\n          if (spellEntry.data.data.tradition == tradition) {\n            let encodedValue = [macroType, tokenId, spellEntry._id].join(\n              this.delimiter\n            );\n            let addSpell = {\n              name: spellEntry.name,\n              encodedValue: encodedValue,\n              id: spellEntry._id,\n            };\n            addSpell.img = this._getImage(spellEntry);\n            addSpell.info2 = this._getCastingsData(spellEntry);\n\n            levelSubcategory.actions.push(addSpell);\n          }\n        });\n\n        this._combineSubcategoryWithCategory(\n          traditionCategory,\n          tradition,\n          levelSubcategory\n        );\n      }\n    });\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"creature\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    this._addMultiAttributes(list, list.tokenId, actors);\n    this._addMultiUtilities(list, list.tokenId, actors);\n  }\n\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actor.data.type === \"character\") {\n      let shortRestValue = [macroType, tokenId, \"rest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.settings.demonlord.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.settings.demonlord.rest\"),\n      rests\n    );\n\n    return result;\n  }\n\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actors.every((actor) => actor.data.type === \"character\")) {\n      let shortRestValue = [macroType, tokenId, \"rest\", \"\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.settings.demonlord.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.settings.demonlord.rest\"),\n      rests\n    );\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      category\n    );\n  }\n\n  /** @override */\n  _setFilterSuggestions(id, items) {\n    let suggestions = items?.map((s) => {\n      return { id: s._id, value: s.name };\n    });\n    if (suggestions?.length > 0)\n      this.filterManager.setSuggestions(id, suggestions);\n  }\n\n  _filterElements(categoryId, skills) {\n    let filteredNames = this.filterManager.getFilteredNames(categoryId);\n    let result = skills.filter((s) => !!s);\n    if (filteredNames.length > 0) {\n      if (this.filterManager.isBlocklist(categoryId)) {\n        result = skills.filter((s) => !filteredNames.includes(s.name));\n      } else {\n        result = skills.filter((s) => filteredNames.includes(s.name));\n      }\n    }\n\n    return result;\n  }\n\n  _produceMap(tokenId, itemSet, type) {\n    return itemSet.map((i) => {\n      let icon = this._getImage(i);\n      let result = {\n        name: i.name,\n        encodedValue: i.encodedValue,\n        id: i._id,\n        icon,\n      };\n\n      if (type === \"talent\") result.info2 = this._getUsesData(i);\n\n      return result;\n    });\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  _getUsesData(item) {\n    let result = \"\";\n\n    let uses = item.data.data.uses;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n\n  _getCastingsData(item) {\n    let result = \"\";\n\n    let uses = item.data.data.castings;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseDemonlord extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      canvas.tokens.controlled.forEach((t) => {\n        let idToken = t.data._id;\n        this._handleMacros(event, macroType, idToken, actionId);\n      });\n    } else {\n      this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  _handleMacros(event, macroType, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let item = null;\n    if ([\"weapon\", \"specialaction\", \"spell\", \"talent\"].includes(macroType)) {\n      item = actor.items.get(actionId);\n    }\n\n    switch (macroType) {\n      case \"challenge\":\n        const attribute = actor ? actor.data.data.attributes[actionId] : null;\n        actor.rollChallenge(attribute, actionId);\n        break;\n      case \"weapon\":\n        actor.rollWeaponAttack(item._id, null);\n        break;\n      case \"talent\":\n      case \"specialaction\":\n        actor.rollTalent(item._id, null);\n        break;\n      case \"spell\":\n        actor.rollSpell(item._id, null);\n        break;\n      case \"utility\":\n        this.performUtilityMacro(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"rest\":\n        actor.restActor(token);\n        break;\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n    }\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerDemonlord as ActionHandler } from \"../actions/demonlord/demonlord-actions.js\";\nimport { RollHandlerBaseDemonlord as Core } from \"../rollHandlers/demonlord/demonlord-base.js\";\nimport * as settings from \"../settings/demonlord-settings.js\";\n\nexport class DemonlordSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Demonlord\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\nimport { CompendiumHelper } from \"../categories/compendiumHelper.js\";\n\nexport class ActionHandlerDw extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (settings.get(\"showGmCompendiums\")) {\n      result.tokenId = \"gm\";\n      result.actorId = \"gm\";\n      await this.addGmCompendiumsToList(result);\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let actorType = actor.data.type;\n\n    if (actorType === \"npc\") {\n      let damage = this._getDamage(actor, tokenId);\n      let tags = this._getTags(actor, tokenId);\n      let specialQualities = this._getSpecialQualities(actor, tokenId);\n      this.moves = this._getMovesNpc(actor, tokenId);\n\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.damage\"),\n        damage\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.tags\"),\n        tags\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.specialQualities\"),\n        specialQualities\n      );\n    } else if (actorType === \"character\") {\n      let damage = this._getDamage(actor, tokenId);\n      let startingMoves = this._getMovesByType(actor, tokenId, \"starting\");\n      let advancedMoves = this._getMovesByType(actor, tokenId, \"advanced\");\n      let basicMoves = this._getMovesByType(actor, tokenId, \"basic\");\n      let specialMoves = this._getMovesByType(actor, tokenId, \"special\");\n      let otherMoves = this._getMovesByType(actor, tokenId, \"\");\n      let spells = this._getSpells(\n        actor,\n        tokenId,\n        \"spells\",\n        this.i18n(\"tokenactionhud.spells\"),\n        \"spell\"\n      );\n      let equipment = this._getSubcategoryByType(\n        actor,\n        tokenId,\n        \"equipment\",\n        this.i18n(\"tokenactionhud.equipment\"),\n        \"equipment\"\n      );\n      let abilities = this._getAbilities(actor, tokenId);\n\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.damage\"),\n        damage\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.starting\"),\n        startingMoves\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.advanced\"),\n        advancedMoves\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.special\"),\n        specialMoves\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.basic\"),\n        basicMoves\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.other\"),\n        otherMoves\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.spells\"),\n        spells\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.equipment\"),\n        equipment\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.abilities\"),\n        abilities\n      );\n    }\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  async addGmCompendiumsToList(actionList) {\n    let category = this.initializeEmptyCategory(\"gm\");\n\n    let movesSubcategory = this.initializeEmptySubcategory();\n    movesSubcategory.actions = await CompendiumHelper.getEntriesForActions(\n      \"dungeonworld.gm-movesprincipals\",\n      this.delimiter\n    );\n    let movesName = this.i18n(\"tokenactionhud.moves\");\n    this._combineSubcategoryWithCategory(category, movesName, movesSubcategory);\n\n    let chartsSubcategory = this.initializeEmptySubcategory();\n    chartsSubcategory.actions = await CompendiumHelper.getEntriesForActions(\n      \"dungeonworld.charts\",\n      this.delimiter\n    );\n    let chartsName = this.i18n(\"tokenactionhud.charts\");\n    this._combineSubcategoryWithCategory(\n      category,\n      chartsName,\n      chartsSubcategory\n    );\n\n    let treasureSubcategory = this.initializeEmptySubcategory();\n    treasureSubcategory.actions = await CompendiumHelper.getEntriesForActions(\n      \"dungeonworld.rollable-tables\",\n      this.delimiter\n    );\n    let treasureName = this.i18n(\"tokenactionhud.treasure\");\n    this._combineSubcategoryWithCategory(\n      category,\n      treasureName,\n      treasureSubcategory\n    );\n\n    let categoryName = this.i18n(\"tokenactionhud.gm\");\n    this._combineCategoryWithList(actionList, categoryName, category);\n  }\n\n  _getDamage(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"damage\");\n    let damageCategory = this.initializeEmptySubcategory();\n    let encodedValue = [\"damage\", tokenId, \"damage\"].join(this.delimiter);\n    damageCategory.actions.push({\n      name: this.i18n(\"DW.Damage\"),\n      encodedValue: encodedValue,\n      id: \"damage\",\n    });\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"DW.Damage\"),\n      damageCategory\n    );\n\n    return result;\n  }\n\n  _getMovesByType(actor, tokenId, movesType) {\n    let moves = actor.itemTypes.move.filter(\n      (m) => m.data.data.moveType === movesType\n    );\n    let result = this.initializeEmptyCategory(\"moves\");\n\n    let rollCategory = this._getRollMoves(moves, tokenId);\n    let bookCategory = this._getBookMoves(moves, tokenId);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      rollCategory\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.book\"),\n      bookCategory\n    );\n\n    return result;\n  }\n\n  _getRollMoves(moves, tokenId) {\n    let rollMoves = moves.filter((m) => m.data.data.rollType !== \"\");\n    let rollActions = this._produceMap(tokenId, rollMoves, \"move\");\n    let rollCategory = this.initializeEmptySubcategory();\n    rollCategory.actions = rollActions;\n\n    return rollCategory;\n  }\n\n  _getBookMoves(moves, tokenId) {\n    let bookMoves = moves.filter((m) => m.data.data.rollType === \"\");\n    let bookActions = this._produceMap(tokenId, bookMoves, \"move\");\n    let bookCategory = this.initializeEmptySubcategory();\n    bookCategory.actions = bookActions;\n\n    return bookCategory;\n  }\n\n  /** @private */\n  _getSubcategoryByType(\n    actor,\n    tokenId,\n    categoryId,\n    categoryName,\n    categoryType\n  ) {\n    let items = actor.itemTypes[categoryType];\n    let result = this.initializeEmptyCategory(categoryId);\n    let actions = this._produceMap(tokenId, items, categoryType);\n    let category = this.initializeEmptySubcategory();\n    category.actions = actions;\n\n    this._combineSubcategoryWithCategory(result, categoryName, category);\n\n    return result;\n  }\n\n  /** @private */\n  _getSpells(actor, tokenId, categoryId, categoryName, categoryType) {\n    let items = actor.itemTypes[categoryType];\n    let preparedSpells = items\n      .filter((s) => s.data.data.prepared)\n      .sort(\n        (a, b) =>\n          parseInt(a.data.data.spellLevel) - parseInt(b.data.data.spellLevel)\n      );\n    let spellsByLevel = preparedSpells.reduce((acc, s) => {\n      let spellLevel = s.data.data.spellLevel;\n      let levelName =\n        spellLevel == 0\n          ? \"Rotes\"\n          : `${this.i18n(\"tokenactionhud.level\")} ${spellLevel}`;\n      let levelCategory;\n      if (!acc.some((l) => l.name === levelName)) {\n        levelCategory = this.initializeEmptySubcategory();\n        levelCategory.name = levelName;\n        acc.push(levelCategory);\n      } else {\n        levelCategory = acc.find((l) => l.name === levelName);\n      }\n\n      let spellAction = this._produceMap(tokenId, [s], categoryType);\n\n      levelCategory.actions.push(...spellAction);\n\n      return acc;\n    }, []);\n\n    let result = this.initializeEmptyCategory(categoryId);\n    spellsByLevel.forEach((subcat) => {\n      this._combineSubcategoryWithCategory(result, subcat.name, subcat);\n    });\n\n    return result;\n  }\n\n  /** @private */\n  _getAbilities(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"abilities\");\n\n    let abilities = Object.entries(actor.data.data.abilities);\n    let abilitiesMap = abilities.map((a) => {\n      return { data: { _id: a[0] }, name: a[1].label };\n    });\n    let actions = this._produceMap(tokenId, abilitiesMap, \"ability\");\n    let abilitiesCategory = this.initializeEmptySubcategory();\n    abilitiesCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.abilities\"),\n      abilitiesCategory\n    );\n\n    return result;\n  }\n\n  _getMovesNpc(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"moves\");\n\n    let biography = actor.data.data.details.biography;\n\n    let instinctsCategory = this.initializeEmptySubcategory();\n    let instinctRegex = new RegExp(\"<p(|s+[^>]*)>(Instinct:.*?)</ps*>\", \"g\");\n    let instinctMap = Array.from(biography.matchAll(instinctRegex)).map((m) => {\n      let move = m[2];\n      let encodedValue = encodeURIComponent(move);\n      return { data: { _id: encodedValue }, name: move };\n    });\n\n    let instinctActions = this._produceMap(tokenId, instinctMap, \"instinct\");\n    instinctsCategory.actions = instinctActions;\n\n    let movesCategory = this.initializeEmptySubcategory();\n    var movesRegex = new RegExp(\"<li(|s+[^>]*)>(.*?)</lis*>\", \"g\");\n    var movesMap = Array.from(biography.matchAll(movesRegex)).map((m) => {\n      let move = m[2];\n      let encodedValue = encodeURIComponent(move);\n      return { data: { _id: encodedValue }, name: move };\n    });\n\n    let movesActions = this._produceMap(tokenId, movesMap, \"move\");\n    movesCategory.actions = movesActions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.instinct\"),\n      instinctsCategory\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.monsterMoves\"),\n      movesCategory\n    );\n\n    return result;\n  }\n\n  _getTags(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"tags\");\n    let tags = actor.data.data.tagsString.split(\",\").map((t) => {\n      let tag = t.trim();\n      if (tag.length === 0) return;\n\n      let encodedValue = encodeURIComponent(tag);\n      return { data: { _id: encodedValue }, name: tag };\n    });\n\n    let tagCategory = this.initializeEmptySubcategory();\n    tagCategory.actions = this._produceMap(tokenId, tags, \"tag\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.tags\"),\n      tagCategory\n    );\n    return result;\n  }\n\n  _getSpecialQualities(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"qualities\");\n    let qualities = actor.data.data.attributes.specialQualities.value\n      .split(\",\")\n      .map((s) => {\n        let quality = s.trim();\n        if (quality.length === 0) return;\n\n        let encodedValue = encodeURIComponent(quality);\n        return { data: { _id: encodedValue }, name: quality };\n      });\n\n    let qualityCategory = this.initializeEmptySubcategory();\n    qualityCategory.actions = this._produceMap(tokenId, qualities, \"quality\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.specialQualities\"),\n      qualityCategory\n    );\n    return result;\n  }\n\n  /** @private */\n  _produceMap(tokenId, itemSet, macroType) {\n    return itemSet\n      .filter((i) => !!i)\n      .map((i) => {\n        let encodedValue = [macroType, tokenId, i.data._id].join(\n          this.delimiter\n        );\n        let item = { name: i.name, encodedValue: encodedValue, id: i.data._id };\n\n        this._addItemInfo(i, item);\n\n        return item;\n      });\n  }\n\n  _addItemInfo(i, item) {\n    let uses = i.data.data?.uses;\n    item.info1 = uses ?? \"\";\n\n    let quantity = i.data.data?.quantity;\n    item.info2 = quantity > 1 ? quantity : \"\";\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseDw extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    let charType = actor.data.type;\n\n    if (charType === \"character\") {\n      switch (macroType) {\n        case \"damage\":\n          this._handleDamage(macroType, event, actor, actionId);\n          break;\n        case \"move\":\n        case \"spell\":\n        case \"equipment\":\n          this._handleMove(macroType, event, tokenId, actor, actionId);\n          break;\n        case \"ability\":\n          this._handleAbility(macroType, event, actor, actionId);\n          break;\n      }\n    } else if (charType === \"npc\") {\n      switch (macroType) {\n        case \"damage\":\n          this._handleDamage(macroType, event, actor, actionId);\n          break;\n        case \"move\":\n          this._handleMoveNpc(macroType, event, actor, actionId);\n          break;\n        case \"tag\":\n        case \"quality\":\n        case \"instinct\":\n          this._handleTextNpc(macroType, event, actor, actionId);\n          break;\n      }\n    }\n  }\n\n  _handleDamage(macroType, event, actor, actionId) {\n    let damage = actor.data.data.attributes.damage;\n    let damageDie = `${damage.value}`;\n    let damageMod = damage.misc.length > 0 ? damage.misc.length : 0;\n\n    let flavour = damage.piercing;\n\n    let formula = damageMod > 0 ? `${damageDie}+${damageMod}` : damageDie;\n    let title = this.i18n(\"tokenactionhud.damage\");\n\n    let templateData = {\n      title: title,\n      flavor: `${flavour}`,\n    };\n    actor.rollMove(formula, actor, {}, templateData);\n  }\n\n  _handleMove(macroType, event, tokenId, actor, actionId) {\n    let move = actor.items.get(actionId);\n\n    if (this.isRenderItem()) {\n      this.doRenderItem(tokenId, actionId);\n      return;\n    }\n\n    move.roll();\n  }\n\n  _handleAbility(macroType, event, actor, actionId) {\n    let ability = actor.data.data.abilities[actionId];\n\n    let mod = ability.mod;\n    let formula = `2d6+${mod}`;\n\n    let title = `${ability.label} ${game.i18n.localize(\"tokenactionhud.roll\")}`;\n    let abilityText = ability.label.toLowerCase();\n\n    let templateData = {\n      title: title,\n      flavor: `Made a move using ${abilityText}!`,\n    };\n    actor.rollMove(formula, actor, {}, templateData);\n  }\n\n  _handleTextNpc(macroType, event, actor, actionId) {\n    let action = decodeURIComponent(actionId);\n\n    let title = macroType.charAt(0).toUpperCase() + macroType.slice(1);\n    let templateData = {\n      title: title,\n      details: action,\n    };\n    actor.rollMove(null, actor, {}, templateData);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerDw as ActionHandler } from \"../actions/dungeonworld/dw-actions.js\";\nimport { RollHandlerBaseDw as Core } from \"../rollHandlers/dungeonworld/dw-base.js\";\nimport * as settings from \"../settings/dungeonworld-settings.js\";\n\nexport class DungeonWorldSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core DungeonWorld\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"showGmCompendiums\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dungeonworld.showGmCompendiums.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dungeonworld.showGmCompendiums.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerPf1 extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor.id;\n\n    this._addAttacksList(result, actor, tokenId);\n    this._addBuffsList(result, actor, tokenId);\n    this._addConditionsList(result, actor, tokenId);\n    this._addItemsList(result, actor, tokenId);\n    this._addSpellsList(result, actor, tokenId);\n    this._addFeatsList(result, actor, tokenId);\n    this._addSkillsList(result, actor, tokenId);\n    this._addSavesList(result, actor, tokenId);\n    this._addChecksList(result, actor, tokenId);\n    this._addUtilityList(result, actor, tokenId);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId);\n\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n\n    this._addMultiSaves(list, tokenId, \"saves\", savesTitle, \"abilitySave\");\n    this._addMultiAbilities(\n      list,\n      tokenId,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n\n    this._addMultiUtilities(list, tokenId, actors);\n  }\n\n  _addAttacksList(result, actor, tokenId) {\n    let attacks = this._getAttacksList(actor, tokenId);\n    let attackTitle = this.i18n(\"tokenactionhud.attack\");\n    this._combineCategoryWithList(result, attackTitle, attacks);\n  }\n\n  _addBuffsList(result, actor, tokenId) {\n    let buffs = this._getBuffsList(actor, tokenId);\n    let buffsTitle = this.i18n(\"tokenactionhud.buffs\");\n    this._combineCategoryWithList(result, buffsTitle, buffs);\n  }\n\n  _addConditionsList(result, actor, tokenId) {\n    let conditionsTitle = this.i18n(\"tokenactionhud.conditions\");\n    let conditionsCategory = this._getConditionsList(\n      tokenId,\n      actor.data.data.attributes.conditions,\n      \"conditions\",\n      conditionsTitle,\n      \"condition\"\n    );\n    this._combineCategoryWithList(result, conditionsTitle, conditionsCategory);\n  }\n\n  _addItemsList(result, actor, tokenId) {\n    let items = this._getItemList(actor, tokenId);\n    let itemsTitle = this.i18n(\"tokenactionhud.inventory\");\n    this._combineCategoryWithList(result, itemsTitle, items);\n  }\n\n  _addSpellsList(result, actor, tokenId) {\n    let spells = this._getSpellsList(actor, tokenId);\n    let spellsTitle = this.i18n(\"tokenactionhud.spells\");\n    this._combineCategoryWithList(result, spellsTitle, spells);\n  }\n\n  _addFeatsList(result, actor, tokenId) {\n    let feats = this._getFeatsList(actor, tokenId);\n    let featsTitle = this.i18n(\"tokenactionhud.features\");\n    this._combineCategoryWithList(result, featsTitle, feats);\n  }\n\n  _addSkillsList(result, actor, tokenId) {\n    let skills = this._getSkillsList(actor.data.data.skills, tokenId);\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineCategoryWithList(result, skillsTitle, skills);\n  }\n\n  _addSavesList(result, actor, tokenId) {\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let saves = this._getSavesList(\n      tokenId,\n      actor,\n      \"saves\",\n      savesTitle,\n      \"abilitySave\"\n    );\n    this._combineCategoryWithList(result, savesTitle, saves);\n  }\n\n  _addChecksList(result, actor, tokenId) {\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n    let checks = this._getAbilityList(\n      tokenId,\n      actor.data.data.abilities,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n    this._combineCategoryWithList(result, checksTitle, checks);\n  }\n\n  _addUtilityList(result, actor, tokenId) {\n    let utility = this._getUtilityList(actor, tokenId);\n    let utilityTitle = this.i18n(\"tokenactionhud.utility\");\n    this._combineCategoryWithList(result, utilityTitle, utility);\n  }\n\n  /** @private */\n  _getAttacksList(actor, tokenId) {\n    let validAttacks = actor.items\n      .filter((i) => i.type === \"attack\")\n      .map((i) => i.data);\n    let sortedAttacks = this._sortByItemSort(validAttacks);\n    let macroType = \"attack\";\n\n    let result = this.initializeEmptyCategory(\"attacks\");\n\n    let cmbMacro = \"cmb\";\n    let cmbName = this.i18n(\"tokenactionhud.cmb\");\n    let cmbValue = [cmbMacro, tokenId, cmbMacro].join(this.delimiter);\n    let cmbAction = { name: cmbName, encodedValue: cmbValue, id: cmbMacro };\n\n    let babMacro = \"bab\";\n    let babName = this.i18n(\"tokenactionhud.bab\");\n    let babValue = [babMacro, tokenId, babMacro].join(this.delimiter);\n    let babAction = { name: babName, encodedValue: babValue, id: babMacro };\n\n    let bonusCat = this.initializeEmptySubcategory();\n    bonusCat.actions = Array.of(cmbAction, babAction);\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.bonuses\"),\n      bonusCat\n    );\n\n    let meleeMacro = \"melee\";\n    let meleeName = this.i18n(\"tokenactionhud.melee\");\n    let meleeValue = [meleeMacro, tokenId, meleeMacro].join(this.delimiter);\n    let meleeAction = {\n      name: meleeName,\n      encodedValue: meleeValue,\n      id: meleeMacro,\n    };\n\n    let rangedMacro = \"ranged\";\n    let rangedName = this.i18n(\"tokenactionhud.ranged\");\n    let rangedValue = [rangedMacro, tokenId, rangedMacro].join(this.delimiter);\n    let rangedAction = {\n      name: rangedName,\n      encodedValue: rangedValue,\n      id: rangedMacro,\n    };\n\n    let weaponActions = sortedAttacks.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n\n    weaponActions.unshift(rangedAction);\n    weaponActions.unshift(meleeAction);\n\n    weaponsCat.actions = weaponActions;\n    let weaponsTitle = this.i18n(\"tokenactionhud.attack\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n\n    return result;\n  }\n\n  /** @private */\n  _getBuffsList(actor, tokenId) {\n    let validBuff = actor.items\n      .filter((i) => i.type === \"buff\")\n      .map((i) => i.data);\n    let sortedBuffs = this._sortByItemSort(validBuff);\n    let macroType = \"buff\";\n\n    let buffActions = sortedBuffs.map((w) => {\n      var action = this._buildItem(tokenId, actor, macroType, w);\n      action.cssClass = w.data.active ? \"active\" : \"\";\n      return action;\n    });\n    let buffCat = this.initializeEmptySubcategory();\n    buffCat.actions = buffActions;\n    let buffTitle = this.i18n(\"tokenactionhud.buffs\");\n\n    let result = this.initializeEmptyCategory(\"buffs\");\n    this._combineSubcategoryWithCategory(result, buffTitle, buffCat);\n\n    return result;\n  }\n\n  /** ITEMS **/\n\n  /** @private */\n  _getItemList(actor, tokenId) {\n    let validItems = actor.items\n      .filter((i) => i.data.data.quantity > 0)\n      .map((i) => i.data);\n    let sortedItems = this._sortByItemSort(validItems);\n    let macroType = \"item\";\n\n    let equipped = sortedItems.filter(\n      (i) => i.type !== \"consumable\" && i.data.equipped\n    );\n\n    let weapons = equipped.filter((i) => i.type == \"weapon\");\n    let weaponActions = weapons.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = equipped.filter((i) => i.type == \"equipment\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildItem(tokenId, actor, macroType, e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let other = equipped.filter(\n      (i) => i.type != \"weapon\" && i.type != \"equipment\"\n    );\n    let otherActions = other.map((o) =>\n      this._buildItem(tokenId, actor, macroType, o)\n    );\n    let otherCat = this.initializeEmptySubcategory();\n    otherCat.actions = otherActions;\n\n    let allConsumables = sortedItems.filter((i) => i.type == \"consumable\");\n\n    let expendedFiltered = this._filterExpendedItems(allConsumables);\n    let consumable = expendedFiltered.filter(\n      (c) =>\n        (c.data.uses?.value && c.data.uses?.value >= 0) ||\n        (c.data.uses?.max && c.data.uses?.max >= 0)\n    );\n    let consumableActions = consumable.map((c) =>\n      this._buildItem(tokenId, actor, macroType, c)\n    );\n    let consumablesCat = this.initializeEmptySubcategory();\n    consumablesCat.actions = consumableActions;\n\n    let inconsumable = allConsumables.filter(\n      (c) =>\n        !(c.data.uses?.max || c.data.uses?.value) &&\n        c.data.consumableType != \"ammo\"\n    );\n    let incomsumableActions = inconsumable.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let inconsumablesCat = this.initializeEmptySubcategory();\n    inconsumablesCat.actions = incomsumableActions;\n\n    let tools = validItems.filter((t) => t.type === \"tool\");\n    let toolsActions = tools.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let toolsCat = this.initializeEmptySubcategory();\n    toolsCat.actions = toolsActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n    let otherTitle = this.i18n(\"tokenactionhud.other\");\n    let consumablesTitle = this.i18n(\"tokenactionhud.consumables\");\n    let incomsumablesTitle = this.i18n(\"tokenactionhud.inconsumables\");\n    let toolsTitle = this.i18n(\"tokenactionhud.tools\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n    this._combineSubcategoryWithCategory(result, otherTitle, otherCat);\n    this._combineSubcategoryWithCategory(\n      result,\n      consumablesTitle,\n      consumablesCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      incomsumablesTitle,\n      inconsumablesCat\n    );\n    this._combineSubcategoryWithCategory(result, toolsTitle, toolsCat);\n\n    return result;\n  }\n\n  /** SPELLS **/\n\n  /** @private */\n  _getSpellsList(actor, tokenId) {\n    let validSpells = actor.items\n      .filter((i) => i.type === \"spell\")\n      .map((i) => i.data);\n    validSpells = this._filterExpendedItems(validSpells);\n\n    let spells = this._categoriseSpells(actor, tokenId, validSpells);\n\n    return spells;\n  }\n\n  /** @private */\n  _categoriseSpells(actor, tokenId, spells) {\n    const macroType = \"spell\";\n    let result = this.initializeEmptySubcategory(\"spells\");\n    let concentrationSubcategory =\n      this.initializeEmptySubcategory(\"concentration\");\n    concentrationSubcategory.name = this.i18n(\"tokenactionhud.concentration\");\n\n    const spellbooks = [...new Set(spells.map((i) => i.data.spellbook))].sort();\n\n    spellbooks.forEach((sb) => {\n      const isSpontaneous =\n        actor.data.data.attributes.spells.spellbooks[sb].spontaneous;\n      let spellbookName = sb.charAt(0).toUpperCase() + sb.slice(1);\n\n      concentrationSubcategory.actions.push(\n        this._createConcentrationAction(tokenId, spellbookName)\n      );\n\n      const sbSpells = spells\n        .filter((s) => s.data.spellbook === sb)\n        .sort((a, b) =>\n          a.name.toUpperCase().localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          })\n        )\n        .sort((a, b) => a.data.level - b.data.level);\n\n      const spellsByLevel = sbSpells.reduce((arr, s) => {\n        if (!arr.hasOwnProperty(s.data.level)) arr[s.data.level] = [];\n\n        arr[s.data.level].push(s);\n\n        return arr;\n      }, {});\n\n      var firstLevelOfBook = true;\n      Object.entries(spellsByLevel).forEach((level) => {\n        var category = this.initializeEmptySubcategory();\n\n        var categoryName =\n          level[0] > 0\n            ? `${this.i18n(\"tokenactionhud.level\")} ${level[0]}`\n            : this.i18n(\"tokenactionhud.cantrips\");\n        var spellInfo =\n          actor.data.data.attributes?.spells?.spellbooks[sb][\"spells\"][\n            \"spell\" + level[0]\n          ];\n        if (spellInfo && spellInfo.max > 0) {\n          var categoryInfo = `${spellInfo.value}/${spellInfo.max}`;\n          category.info1 = categoryInfo;\n        }\n\n        if (firstLevelOfBook) {\n          categoryName = `${spellbookName} - ${categoryName}`;\n          firstLevelOfBook = false;\n        }\n\n        level[1].forEach((spell) => {\n          if (!this._isSpellCastable(actor, spell)) return;\n\n          let name = spell.name;\n          name = name.charAt(0).toUpperCase() + name.slice(1);\n          let id = spell._id;\n          let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n          var action = {\n            name: name,\n            id: id,\n            encodedValue: encodedValue,\n            info2: \"\",\n          };\n          action.img = this._getImage(spell);\n          this._addSpellInfo(spell, isSpontaneous, action);\n\n          category.actions.push(action);\n        });\n\n        this._combineSubcategoryWithCategory(result, categoryName, category);\n      });\n    });\n\n    if (concentrationSubcategory.actions?.length > 0)\n      result.subcategories.unshift(concentrationSubcategory);\n\n    return result;\n  }\n\n  /** @private */\n  _addSpellInfo(spell, isSpontaneous, spellAction) {\n    let c = spell.data.components;\n\n    if (!isSpontaneous && spell.data.preparation) {\n      let prep = spell.data.preparation;\n      if (prep.maxAmount)\n        spellAction.info1 = `${prep.preparedAmount}/${prep.maxAmount}`;\n    }\n\n    if (c?.verbal)\n      spellAction.info2 += this.i18n(\"PF1.SpellComponentVerbal\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.somatic)\n      spellAction.info2 += this.i18n(\"PF1.SpellComponentSomatic\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.material)\n      spellAction.info2 += this.i18n(\"PF1.SpellComponentMaterial\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.focus)\n      spellAction.info3 = this.i18n(\"PF1.SpellComponentFocus\")\n        .charAt(0)\n        .toUpperCase();\n  }\n\n  /** @private */\n  _isSpellCastable(actor, spell) {\n    const spellbook = spell.data.spellbook;\n    const isSpontaneous =\n      actor.data.data.attributes.spells.spellbooks[spellbook].spontaneous;\n\n    if (actor.data.type !== \"character\") return true;\n\n    if (spell.data.atWill) return true;\n\n    if (isSpontaneous && spell.data.preparation.spontaneousPrepared)\n      return true;\n\n    if (spell.data.preparation.preparedAmount === 0) return false;\n\n    return true;\n  }\n\n  _createConcentrationAction(tokenId, school) {\n    let concentrationMacro = \"concentration\";\n    let name = school;\n    let encodedValue = [concentrationMacro, tokenId, school.toLowerCase()].join(\n      this.delimiter\n    );\n    return { name: name, encodedValue: encodedValue, id: concentrationMacro };\n  }\n\n  /** FEATS **/\n\n  /** @private */\n  _getFeatsList(actor, tokenId) {\n    let validFeats = actor.items\n      .filter((i) => i.type == \"feat\")\n      .map((i) => i.data);\n    let sortedFeats = this._sortByItemSort(validFeats);\n    let feats = this._categoriseFeats(tokenId, actor, sortedFeats);\n\n    return feats;\n  }\n\n  /** @private */\n  _categoriseFeats(tokenId, actor, feats) {\n    let active = this.initializeEmptySubcategory();\n    let passive = this.initializeEmptySubcategory();\n    let disabled = this.initializeEmptySubcategory();\n\n    let dispose = feats.reduce(\n      function (dispose, f) {\n        const activationType = f.data.activation.type;\n        const macroType = \"feat\";\n\n        let feat = this._buildItem(tokenId, actor, macroType, f);\n\n        if (!f.document.isActive) {\n          disabled.actions.push(feat);\n          return;\n        }\n\n        if (\n          !activationType ||\n          activationType === \"\" ||\n          activationType === \"passive\"\n        ) {\n          passive.actions.push(feat);\n          return;\n        }\n\n        active.actions.push(feat);\n\n        return;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"feats\");\n\n    let activeTitle = this.i18n(\"tokenactionhud.active\");\n    this._combineSubcategoryWithCategory(result, activeTitle, active);\n\n    if (!settings.get(\"ignorePassiveFeats\")) {\n      let passiveTitle = this.i18n(\"tokenactionhud.passive\");\n      this._combineSubcategoryWithCategory(result, passiveTitle, passive);\n    }\n\n    if (!settings.get(\"ignoreDisabledFeats\")) {\n      let disabledTitle = this.i18n(\"tokenactionhud.pf1.disabled\");\n      this._combineSubcategoryWithCategory(result, disabledTitle, disabled);\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getSkillsList(skills, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let allSkills = new Set();\n\n    Object.entries(skills).forEach((s) => {\n      if (s[0].startsWith(\"skill\")) s[1].isCustomSkill = true;\n\n      allSkills.add(s);\n\n      if (s[1].subSkills) {\n        Object.entries(s[1].subSkills).forEach((ss) => {\n          ss[1].isCustomSkill = true;\n          ss[1].mainSkill = s[0];\n          allSkills.add(ss);\n        });\n      }\n    });\n\n    let skillsActions = [...allSkills]\n      .map((e) => {\n        let id = e[0];\n        let data = e[1];\n\n        // rt: requires training\n        if (data.rt && !data.rank) {\n          return null;\n        }\n\n        let name = abbr ? id : CONFIG.PF1.skills[id];\n\n        if (data.isCustomSkill || !name) {\n          name = data.name ?? \"?\";\n          id = `${data.mainSkill}.subSkills.${id}`;\n        }\n\n        name = name.charAt(0).toUpperCase() + name.slice(1);\n        let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n        let info1 = this._getSkillRankInfo(data.rank);\n        return { name: name, id: id, encodedValue: encodedValue, info1: info1 };\n      })\n      .filter((s) => !!s);\n\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n\n    return result;\n  }\n\n  _getSkillRankInfo(rank) {\n    if (rank <= 0) return \"\";\n\n    return `R${rank}`;\n  }\n\n  _addMultiSkills(list, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(CONFIG.PF1.skills).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(list, skillsTitle, result, true);\n  }\n\n  /** @private */\n  _getAbilityList(tokenId, abilities, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.PF1.abilities).map((e) => {\n      if (abilities[e[0]].value === 0) return;\n\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon;\n      if (categoryId === \"checks\") icon = \"\";\n      else icon = this._getProficiencyIcon(abilities[e[0]].proficient);\n\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, abilityCategory);\n\n    return result;\n  }\n\n  /** @private */\n  _getSavesList(tokenId, actor, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.PF1.savingThrows).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let savesCategory = this.initializeEmptySubcategory();\n    savesCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, savesCategory);\n\n    let defensesCat = this.initializeEmptySubcategory();\n    let defensesMacro = \"defenses\";\n    let defensesName = this.i18n(\"tokenactionhud.defenses\");\n    let defensesValue = [defensesMacro, tokenId, defensesMacro].join(\n      this.delimiter\n    );\n    let defensesAction = [\n      { name: defensesName, encodedValue: defensesValue, id: defensesMacro },\n    ];\n    defensesCat.actions = defensesAction;\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.defenses\"),\n      defensesCat\n    );\n\n    return result;\n  }\n\n  _getConditionsList(tokenId, conditions, categoryId, categoryName, macroType) {\n    if (!conditions) return;\n\n    let result = this.initializeEmptyCategory(categoryId);\n    let subcategory = this.initializeEmptySubcategory();\n    const entries = Object.entries(conditions);\n\n    entries.forEach((c) => {\n      const key = c[0];\n      const value = c[1];\n\n      let name = CONFIG.PF1.conditions[key];\n      let img;\n      if (settings.get(\"showIcons\")) img = CONFIG.PF1.conditionTextures[key];\n\n      let encodedValue = [macroType, tokenId, key].join(this.delimiter);\n\n      let action = {\n        name: name,\n        id: key,\n        encodedValue: encodedValue,\n        img: img,\n      };\n      action.cssClass = value ? \"active\" : \"\";\n\n      subcategory.actions.push(action);\n    });\n\n    subcategory.actions = subcategory.actions.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n    this._combineSubcategoryWithCategory(result, categoryName, subcategory);\n\n    return result;\n  }\n\n  _addMultiAbilities(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.PF1.abilities).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(cat, categoryName, abilityCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  _addMultiSaves(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n    let savesCategory = this.initializeEmptySubcategory();\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.PF1.savingThrows).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n\n    savesCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(cat, categoryName, savesCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  /** @private */\n  _addIntiativeSubcategory(macroType, category, tokenId) {\n    const combat = game.combat;\n    let combatant, currentInitiative;\n    if (combat) {\n      combatant = combat.combatants.find((c) => c.tokenId === tokenId);\n      currentInitiative = combatant?.initiative;\n    }\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    if (currentInitiative) initiativeAction.info1 = currentInitiative;\n    initiativeAction.cssClass = currentInitiative ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiIntiativeSubcategory(macroType, tokenId, category) {\n    const combat = game.combat;\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    let isActive;\n    if (combat) {\n      let tokenIds = canvas.tokens.controlled.map((t) => t.id);\n      let tokenCombatants = tokenIds.map((id) =>\n        combat.combatants.find((c) => c.tokenId === id)\n      );\n      isActive = tokenCombatants.every((c) => !!c?.initiative);\n    }\n\n    initiativeAction.cssClass = isActive ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    this._addIntiativeSubcategory(macroType, result, tokenId);\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actor.data.type === \"character\") {\n      let longRestValue = [macroType, tokenId, \"rest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    this._addMultiIntiativeSubcategory(macroType, tokenId, category);\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actors.every((a) => a.data.type === \"character\")) {\n      let longRestValue = [macroType, tokenId, \"rest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      category\n    );\n  }\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    let encodedValue = [macroType, tokenId, item._id].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data?.activation?.type);\n    let name = this._getItemName(item);\n    let result = {\n      name: name,\n      id: item._id,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    if (\n      item.data.recharge &&\n      !item.data.recharge.charged &&\n      item.data.recharge.value\n    ) {\n      result.name += ` (${this.i18n(\"tokenactionhud.recharge\")})`;\n    }\n\n    result.info1 = this._getQuantityData(item);\n\n    result.info2 = this._getUsesData(item);\n\n    result.info3 = this._getConsumeData(item, actor);\n\n    return result;\n  }\n\n  _getItemName(item) {\n    let name;\n\n    if (item.data.identified || game.user.isGM) name = item.data.identifiedName;\n    else name = item.data.unidentified?.name;\n\n    if (!name) name = item.name;\n\n    return name;\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    if (item.data.quantity > 1) {\n      result = item.data.quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getUsesData(item) {\n    let result = \"\";\n\n    let uses = item.data.uses;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getConsumeData(item, actor) {\n    let result = \"\";\n\n    let consumeType = item.data.consume?.type;\n    if (consumeType && consumeType !== \"\") {\n      let consumeId = item.data.consume.target;\n      let parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\n      if (consumeType === \"attribute\") {\n        let target = getProperty(actor, `data.data.${consumeId}`);\n\n        if (target) {\n          let parent = getProperty(actor, `data.data.${parentId}`);\n          result = target;\n          if (!!parent.max) result += `/${parent.max}`;\n        }\n      }\n\n      if (consumeType === \"charges\") {\n        let consumeId = item.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let uses = target?.data.data.uses;\n        if (uses?.value) {\n          result = uses.value;\n          if (uses.max) result += `/${uses.max}`;\n        }\n      }\n\n      if (!(consumeType === \"attribute\" || consumeType === \"charges\")) {\n        let consumeId = item.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let quantity = target?.data.data.quantity;\n        if (quantity) {\n          result = quantity;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  _filterExpendedItems(items) {\n    if (settings.get(\"showEmptyItems\")) return items;\n\n    return items.filter((i) => {\n      let uses = i.data.uses;\n      // Assume something with no uses is unlimited in its use.\n      if (!uses) return true;\n\n      // if it has a max but value is 0, don't return.\n      if (uses.max > 0 && !uses.value) return false;\n\n      return true;\n    });\n  }\n\n  /** @private */\n  _sortByItemSort(items) {\n    let result = Object.values(items);\n\n    result.sort((a, b) => a.sort - b.sort);\n\n    return result;\n  }\n\n  /** @private */\n  _getProficiencyIcon(level) {\n    const icons = {\n      0: \"\",\n      0.5: '<i class=\"fas fa-adjust\"></i>',\n      1: '<i class=\"fas fa-check\"></i>',\n      2: '<i class=\"fas fa-check-double\"></i>',\n    };\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      //standard: `<i class=\"fas fa-fist-raised\"></i>`,\n      immediate: `<i class=\"fas fa-bolt\"></i>`,\n      reaction: `<i class=\"fas fa-bolt\"></i>`,\n      free: `<i class=\"fas fa-plus\"></i>`,\n      swift: `<i class=\"fas fa-plus\"></i>`,\n      full: `<i class=\"far fa-circle\"></i>`,\n      round: `<i class=\"fas fa-hourglass-start\"></i>`,\n      minute: `<i class=\"fas fa-hourglass-half\"></i>`,\n      hour: `<i class=\"fas fa-hourglass-end\"></i>`,\n      special: `<i class=\"fas fa-star\"></i>`,\n    };\n    return img[action];\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBasePf1 extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      canvas.tokens.controlled.forEach((t) => {\n        let idToken = t.data._id;\n        this._handleMacros(event, macroType, idToken, actionId);\n      });\n    } else {\n      await this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    switch (macroType) {\n      case \"ability\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"concentration\":\n        this.rollConcentrationMacro(event, tokenId, actionId);\n        break;\n      case \"cmb\":\n        this.rollCmbMacro(event, tokenId, actionId);\n        break;\n      case \"melee\":\n        this.rollMeleeAttackMacro(event, tokenId, actionId);\n        break;\n      case \"ranged\":\n        this.rollRangedAttackMacro(event, tokenId, actionId);\n        break;\n      case \"bab\":\n        this.rollBAB(event, tokenId, actionId);\n        break;\n      case \"skill\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"abilitySave\":\n        this.rollAbilitySaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilityCheck\":\n        this.rollAbilityCheckMacro(event, tokenId, actionId);\n        break;\n      case \"buff\":\n        await this.adjustBuff(event, tokenId, actionId);\n        break;\n      case \"condition\":\n        await this.adjustCondition(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"spell\":\n      case \"feat\":\n      case \"attack\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"defenses\":\n        this.rollDefenses(event, tokenId, actionId);\n        break;\n      case \"utility\":\n        await this.performUtilityMacro(event, tokenId, actionId);\n        break;\n      default:\n        break;\n    }\n  }\n\n  rollCmbMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollCMB(event);\n  }\n\n  rollMeleeAttackMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAttack({ event: event, melee: true });\n  }\n\n  rollRangedAttackMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAttack({ event: event, melee: false });\n  }\n\n  rollBAB(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollBAB({ event: event });\n  }\n\n  rollConcentrationMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollConcentration(checkId);\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbility(checkId, { event: event });\n  }\n\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilityTest(checkId, { event: event });\n  }\n\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSavingThrow(checkId, { event: event });\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSkill(checkId, { event: event });\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    const actor = super.getActor(tokenId);\n    const item = super.getItem(actor, itemId);\n\n    item.use({ ev: event, skipDialog: false });\n  }\n\n  rollDefenses(event, tokenId, itemId) {\n    const actor = super.getActor(tokenId);\n    actor.rollDefenses();\n  }\n\n  async adjustBuff(event, tokenId, buffId) {\n    let actor = super.getActor(tokenId);\n    let buff = super.getItem(actor, buffId);\n\n    let update = { data: { active: !buff.data.data.active } };\n\n    await buff.update(update);\n  }\n\n  async adjustCondition(event, tokenId, conditionKey) {\n    let actor = super.getActor(tokenId);\n\n    const value = actor.data.data.attributes.conditions[conditionKey];\n\n    let update = { data: { attributes: { conditions: {} } } };\n    update.data.attributes.conditions[conditionKey] = !value;\n\n    await actor.update(update);\n  }\n\n  async performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"rest\":\n        actor.sheet._onRest(event);\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n      case \"initiative\":\n        await this.performInitiativeMacro(tokenId);\n        break;\n    }\n  }\n\n  async performInitiativeMacro(tokenId) {\n    let actor = super.getActor(tokenId);\n\n    await actor.rollInitiative({ createCombatants: true });\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerPf1 as ActionHandler } from \"../actions/pf1/pf1-actions.js\";\nimport { RollHandlerBasePf1 as Core } from \"../rollHandlers/pf1/pf1-base.js\";\nimport * as settings from \"../settings/pf1-settings.js\";\n\nexport class Pf1SystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core PF1\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"ignorePassiveFeats\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"abbreviateSkills\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"showEmptyItems\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"ignoreDisabledFeats\", {\n    name: game.i18n.localize(\"tokenactionhud.settings.pf1.showDisabled.name\"),\n    hint: game.i18n.localize(\"tokenactionhud.settings.pf1.showDisabled.hint\"),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerD35E extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    this._addAttacksList(result, actor, tokenId);\n    this._addBuffsList(result, actor, tokenId);\n    this._addItemsList(result, actor, tokenId);\n    this._addSpellsList(result, actor, tokenId);\n    this._addFeatsList(result, actor, tokenId);\n    this._addSkillsList(result, actor, tokenId);\n    this._addSavesList(result, actor, tokenId);\n    this._addChecksList(result, actor, tokenId);\n    this._addUtilityList(result, actor, tokenId);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId);\n\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n\n    this._addMultiSaves(list, tokenId, \"saves\", savesTitle, \"abilitySave\");\n    this._addMultiAbilities(\n      list,\n      tokenId,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n\n    this._addMultiUtilities(list, tokenId, actors);\n  }\n\n  _addAttacksList(result, actor, tokenId) {\n    let attacks = this._getAttacksList(actor, tokenId);\n    let attackTitle = this.i18n(\"tokenactionhud.attack\");\n    this._combineCategoryWithList(result, attackTitle, attacks);\n  }\n\n  _addBuffsList(result, actor, tokenId) {\n    let buffs = this._getBuffsList(actor, tokenId);\n    let buffsTitle = this.i18n(\"tokenactionhud.buffs\");\n    this._combineCategoryWithList(result, buffsTitle, buffs);\n  }\n\n  _addItemsList(result, actor, tokenId) {\n    let items = this._getItemList(actor, tokenId);\n    let itemsTitle = this.i18n(\"tokenactionhud.inventory\");\n    this._combineCategoryWithList(result, itemsTitle, items);\n  }\n\n  _addSpellsList(result, actor, tokenId) {\n    let spells = this._getSpellsList(actor, tokenId);\n    let spellsTitle = this.i18n(\"tokenactionhud.spells\");\n    this._combineCategoryWithList(result, spellsTitle, spells);\n  }\n\n  _addFeatsList(result, actor, tokenId) {\n    let feats = this._getFeatsList(actor, tokenId);\n    let featsTitle = this.i18n(\"tokenactionhud.features\");\n    this._combineCategoryWithList(result, featsTitle, feats);\n  }\n\n  _addSkillsList(result, actor, tokenId) {\n    let skills = this._getSkillsList(actor.data.data.skills, tokenId);\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineCategoryWithList(result, skillsTitle, skills);\n  }\n\n  _addSavesList(result, actor, tokenId) {\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let saves = this._getSavesList(\n      tokenId,\n      actor,\n      \"saves\",\n      savesTitle,\n      \"abilitySave\"\n    );\n    this._combineCategoryWithList(result, savesTitle, saves);\n  }\n\n  _addChecksList(result, actor, tokenId) {\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n    let checks = this._getAbilityList(\n      tokenId,\n      actor.data.data.abilities,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n    this._combineCategoryWithList(result, checksTitle, checks);\n  }\n\n  _addUtilityList(result, actor, tokenId) {\n    let utility = this._getUtilityList(actor, tokenId);\n    let utilityTitle = this.i18n(\"tokenactionhud.utility\");\n    this._combineCategoryWithList(result, utilityTitle, utility);\n  }\n\n  /** @private */\n  _getAttacksList(actor, tokenId) {\n    let validAttacks = actor.data.items.filter((i) => i.type === \"attack\");\n    let sortedAttacks = this._sortByItemSort(validAttacks);\n    let macroType = \"attack\";\n\n    let result = this.initializeEmptyCategory(\"attacks\");\n\n    let cmbCat = this.initializeEmptySubcategory();\n    let cmbMacro = \"cmb\";\n    let name = this.i18n(\"tokenactionhud.d35e.grapple\");\n    let encodedValue = [cmbMacro, tokenId, cmbMacro].join(this.delimiter);\n    let cmbAction = [{ name: name, encodedValue: encodedValue, id: cmbMacro }];\n    cmbCat.actions = cmbAction;\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.d35e.grapple\"),\n      cmbCat\n    );\n\n    let weaponActions = sortedAttacks.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n    let weaponsTitle = this.i18n(\"tokenactionhud.attack\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n\n    let validFullAttacks = actor.data.items.filter((i) => i.type === \"full-attack\");\n    let sortedFullAttacks = this._sortByItemSort(validFullAttacks);\n    let fullAttackActions = sortedFullAttacks.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let attackCat = this.initializeEmptySubcategory();\n    attackCat.actions = fullAttackActions;\n    let attackTitle = this.i18n(\"tokenactionhud.fullAttack\");\n\n    this._combineSubcategoryWithCategory(result, attackTitle, attackCat);\n\n    return result;\n  }\n\n  /** @private */\n  _getBuffsList(actor, tokenId) {\n    let validBuff = actor.data.items.filter((i) => i.type === \"buff\");\n    let sortedBuffs = this._sortByItemSort(validBuff);\n    let macroType = \"buff\";\n\n    let buffActions = sortedBuffs.map((w) => {\n      var action = this._buildItem(tokenId, actor, macroType, w);\n      action.cssClass = w.data.data.active ? \"active\" : \"\";\n      return action;\n    });\n    let buffCat = this.initializeEmptySubcategory();\n    buffCat.actions = buffActions;\n    let buffTitle = this.i18n(\"tokenactionhud.buffs\");\n\n    let result = this.initializeEmptyCategory(\"buffs\");\n    this._combineSubcategoryWithCategory(result, buffTitle, buffCat);\n\n    return result;\n  }\n\n  /** ITEMS **/\n\n  /** @private */\n  _getItemList(actor, tokenId) {\n    let validItems = actor.data.items.filter((i) => i.data.data.quantity > 0);\n    let sortedItems = this._sortByItemSort(validItems);\n    let macroType = \"item\";\n\n    let equipped = sortedItems.filter(\n      (i) => i.type !== \"consumable\" && i.data.data.equipped\n    );\n\n    let weapons = equipped.filter((i) => i.type == \"weapon\");\n    let weaponActions = weapons.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = equipped.filter((i) => i.type == \"equipment\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildItem(tokenId, actor, macroType, e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let other = equipped.filter(\n      (i) => i.type != \"weapon\" && i.type != \"equipment\"\n    );\n    let otherActions = other.map((o) =>\n      this._buildItem(tokenId, actor, macroType, o)\n    );\n    let otherCat = this.initializeEmptySubcategory();\n    otherCat.actions = otherActions;\n\n    let allConsumables = sortedItems.filter((i) => i.type == \"consumable\");\n\n    let expendedFiltered = this._filterExpendedItems(allConsumables);\n    let consumable = expendedFiltered.filter(\n      (c) =>\n        (c.data.data.uses?.value && c.data.data.uses?.value >= 0) ||\n        (c.data.data.uses?.max && c.data.data.uses?.max >= 0)\n    );\n    let consumableActions = consumable.map((c) =>\n      this._buildItem(tokenId, actor, macroType, c)\n    );\n    let consumablesCat = this.initializeEmptySubcategory();\n    consumablesCat.actions = consumableActions;\n\n    let inconsumable = allConsumables.filter(\n      (c) =>\n        !(c.data.data.uses?.max || c.data.data.uses?.value) &&\n        c.data.data.consumableType != \"ammo\"\n    );\n    let incomsumableActions = inconsumable.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let inconsumablesCat = this.initializeEmptySubcategory();\n    inconsumablesCat.actions = incomsumableActions;\n\n    let tools = validItems.filter((t) => t.type === \"tool\");\n    let toolsActions = tools.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let toolsCat = this.initializeEmptySubcategory();\n    toolsCat.actions = toolsActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n    let otherTitle = this.i18n(\"tokenactionhud.other\");\n    let consumablesTitle = this.i18n(\"tokenactionhud.consumables\");\n    let incomsumablesTitle = this.i18n(\"tokenactionhud.inconsumables\");\n    let toolsTitle = this.i18n(\"tokenactionhud.tools\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n    this._combineSubcategoryWithCategory(result, otherTitle, otherCat);\n    this._combineSubcategoryWithCategory(\n      result,\n      consumablesTitle,\n      consumablesCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      incomsumablesTitle,\n      inconsumablesCat\n    );\n    this._combineSubcategoryWithCategory(result, toolsTitle, toolsCat);\n\n    return result;\n  }\n\n  /** SPELLS **/\n\n  /** @private */\n  _getSpellsList(actor, tokenId) {\n    let validSpells = actor.data.items.filter((i) => i.type === \"spell\");\n    validSpells = this._filterExpendedItems(validSpells);\n\n    let spells = this._categoriseSpells(actor, tokenId, validSpells);\n\n    return spells;\n  }\n\n  /** @private */\n  _categoriseSpells(actor, tokenId, spells) {\n    const macroType = \"spell\";\n    let result = this.initializeEmptySubcategory(\"spells\");\n    let concentrationSubcategory =\n      this.initializeEmptySubcategory(\"concentration\");\n    concentrationSubcategory.name = this.i18n(\"tokenactionhud.concentration\");\n\n    const spellbooks = [\n      ...new Set(spells.map((i) => i.data.data.spellbook)),\n    ].sort();\n\n    spellbooks.forEach((sb) => {\n      const isSpontaneous =\n        actor.data.data.attributes.spells.spellbooks[sb].spontaneous;\n      let spellbookName = sb.charAt(0).toUpperCase() + sb.slice(1);\n\n      concentrationSubcategory.actions.push(\n        this._createConcentrationAction(tokenId, spellbookName)\n      );\n\n      const sbSpells = spells\n        .filter((s) => s.data.data.spellbook === sb)\n        .sort((a, b) =>\n          a.name\n            .toUpperCase()\n            .localeCompare(b.name.toUpperCase(), undefined, {\n              sensitivity: \"base\",\n            })\n        )\n        .sort((a, b) => a.data.data.level - b.data.data.level);\n\n      const spellsByLevel = sbSpells.reduce((arr, s) => {\n        if (!arr.hasOwnProperty(s.data.data.level)) arr[s.data.data.level] = [];\n\n        arr[s.data.data.level].push(s);\n\n        return arr;\n      }, {});\n\n      var firstLevelOfBook = true;\n      Object.entries(spellsByLevel).forEach((level) => {\n        var category = this.initializeEmptySubcategory();\n\n        var categoryName =\n          level[0] > 0\n            ? `${this.i18n(\"tokenactionhud.level\")} ${level[0]}`\n            : this.i18n(\"tokenactionhud.cantrips\");\n        var spellInfo =\n          actor.data.data.attributes?.spells?.spellbooks[sb][\"spells\"][\n            \"spell\" + level[0]\n          ];\n        if (spellInfo && spellInfo.max > 0) {\n          var categoryInfo = `${spellInfo.value ? spellInfo.value + \"/\" : \"\"}${\n            spellInfo.max\n          }`;\n          category.info1 = categoryInfo;\n        }\n\n        if (firstLevelOfBook) {\n          categoryName = `${spellbookName} - ${categoryName}`;\n          firstLevelOfBook = false;\n        }\n\n        level[1].forEach((spell) => {\n          if (!this._isSpellCastable(actor, spell)) return;\n\n          let name = spell.name;\n          name = name.charAt(0).toUpperCase() + name.slice(1);\n          let id = spell._id;\n          let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n          var action = {\n            name: name,\n            id: id,\n            encodedValue: encodedValue,\n            info2: \"\",\n          };\n          action.img = this._getImage(spell);\n          this._addSpellInfo(spell, isSpontaneous, action);\n\n          category.actions.push(action);\n        });\n\n        this._combineSubcategoryWithCategory(result, categoryName, category);\n      });\n    });\n\n    if (concentrationSubcategory.actions?.length > 0)\n      result.subcategories.unshift(concentrationSubcategory);\n\n    return result;\n  }\n\n  /** @private */\n  _addSpellInfo(spell, isSpontaneous, spellAction) {\n    let c = spell.data.data.components;\n\n    if (!isSpontaneous && spell.data.data.preparation) {\n      let prep = spell.data.data.preparation;\n      if (prep.maxAmount || prep.preparedAmount)\n        spellAction.info1 = `${prep.preparedAmount}/${prep.maxAmount}`;\n    }\n\n    if (c?.verbal)\n      spellAction.info2 += this.i18n(\"D35E.SpellComponentVerbal\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.somatic)\n      spellAction.info2 += this.i18n(\"D35E.SpellComponentSomatic\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.material)\n      spellAction.info2 += this.i18n(\"D35E.SpellComponentMaterial\")\n        .charAt(0)\n        .toUpperCase();\n\n    if (c?.focus)\n      spellAction.info3 = this.i18n(\"D35E.SpellComponentFocus\")\n        .charAt(0)\n        .toUpperCase();\n  }\n\n  /** @private */\n  _isSpellCastable(actor, spell) {\n    const spellbook = spell.data.data.spellbook;\n    const isSpontaneous =\n      actor.data.data.attributes.spells.spellbooks[spellbook].spontaneous;\n\n    if (spell.data.data.atWill) return true;\n\n    if (isSpontaneous) return true;\n\n    if (spell.data.data.preparation.preparedAmount === 0) return false;\n\n    return true;\n  }\n\n  _createConcentrationAction(tokenId, school) {\n    let concentrationMacro = \"concentration\";\n    let name = school;\n    let encodedValue = [concentrationMacro, tokenId, school.toLowerCase()].join(\n      this.delimiter\n    );\n    return { name: name, encodedValue: encodedValue, id: concentrationMacro };\n  }\n\n  /** FEATS **/\n\n  /** @private */\n  _getFeatsList(actor, tokenId) {\n    let validFeats = actor.data.items.filter((i) => i.type == \"feat\");\n    let sortedFeats = this._sortByItemSort(validFeats);\n    let feats = this._categoriseFeats(tokenId, actor, sortedFeats);\n\n    return feats;\n  }\n\n  /** @private */\n  _categoriseFeats(tokenId, actor, feats) {\n    let active = this.initializeEmptySubcategory();\n    let passive = this.initializeEmptySubcategory();\n\n    let dispose = feats.reduce(\n      function (dispose, f) {\n        const activationType = f.data.data.activation.type;\n        const macroType = \"feat\";\n\n        let feat = this._buildItem(tokenId, actor, macroType, f);\n\n        if (\n          !activationType ||\n          activationType === \"\" ||\n          activationType === \"passive\"\n        ) {\n          passive.actions.push(feat);\n          return;\n        }\n\n        active.actions.push(feat);\n\n        return;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"feats\");\n\n    let activeTitle = this.i18n(\"tokenactionhud.active\");\n    this._combineSubcategoryWithCategory(result, activeTitle, active);\n\n    if (!settings.get(\"ignorePassiveFeats\")) {\n      let passiveTitle = this.i18n(\"tokenactionhud.passive\");\n      this._combineSubcategoryWithCategory(result, passiveTitle, passive);\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getSkillsList(skills, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let allSkills = new Set();\n\n    Object.entries(skills).forEach((_s) => {\n      let s = duplicate(_s);\n      if (s[0].startsWith(\"skill\")) s[1].isCustomSkill = true;\n      if (s[1].rt && !s[1].rank && !s[1].subSkills) return;\n      if (!s[1].subSkills) allSkills.add(s);\n\n      if (s[1].subSkills) {\n        Object.entries(s[1].subSkills).forEach((ss) => {\n          if (ss[1].rt && !ss[1].rank) return;\n          ss[1].isCustomSkill = true;\n          ss[1].mainSkill = s[0];\n          ss[1].name = `${CONFIG.D35E.skills[s[0]]} - ${ss[1].name}`;\n          allSkills.add(ss);\n        });\n      }\n    });\n\n    let skillsActions = [...allSkills].map((e) => {\n      let id = e[0];\n      let data = e[1];\n      let name = abbr ? id : CONFIG.D35E.skills[id];\n\n      if (data.isCustomSkill || !name) {\n        name = data.name ?? \"?\";\n        id = `${data.mainSkill}.subSkills.${id}`;\n      }\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      let info1 = this._getSkillRankInfo(data.rank);\n      let info2 = [data.rt ? \"RT\" : \"\", data.acp ? \"ACP\" : \"\"]\n        .filter((a) => a !== \"\")\n        .join(\",\");\n      return {\n        name: name,\n        id: id,\n        encodedValue: encodedValue,\n        info1: info1,\n        info2: info2,\n      };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions.sort(function (a, b) {\n      if (a.name > b.name) {\n        return 1;\n      }\n      if (a.name < b.name) {\n        return -1;\n      }\n      // a must be equal to b\n      return 0;\n    });\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n\n    return result;\n  }\n\n  _getSkillRankInfo(rank) {\n    if (rank <= 0) return \"\";\n\n    return `R${rank}`;\n  }\n\n  _addMultiSkills(list, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(CONFIG.D35E.skills).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(list, skillsTitle, result, true);\n  }\n\n  /** @private */\n  _getAbilityList(tokenId, abilities, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.D35E.abilities).map((e) => {\n      if (abilities[e[0]].value === 0) return;\n\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon;\n      if (categoryId === \"checks\") icon = \"\";\n      else icon = this._getProficiencyIcon(abilities[e[0]].proficient);\n\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, abilityCategory);\n\n    return result;\n  }\n\n  /** @private */\n  _getSavesList(tokenId, actor, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.D35E.savingThrows).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let savesCategory = this.initializeEmptySubcategory();\n    savesCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, savesCategory);\n\n    let defensesCat = this.initializeEmptySubcategory();\n    let defensesMacro = \"defenses\";\n    let defensesName = this.i18n(\"tokenactionhud.defenses\");\n    let defensesValue = [defensesMacro, tokenId, defensesMacro].join(\n      this.delimiter\n    );\n    let defensesAction = [\n      { name: defensesName, encodedValue: defensesValue, id: defensesMacro },\n    ];\n    defensesCat.actions = defensesAction;\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.defenses\"),\n      defensesCat\n    );\n\n    return result;\n  }\n\n  _addMultiAbilities(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.D35E.abilities).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(cat, categoryName, abilityCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  _addMultiSaves(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n    let savesCategory = this.initializeEmptySubcategory();\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(CONFIG.D35E.savingThrows).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n\n    savesCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(cat, categoryName, savesCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  /** @private */\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actor.data.type === \"character\") {\n      let longRestValue = [macroType, tokenId, \"rest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n\n    if (actors.every((a) => a.data.type === \"character\")) {\n      let longRestValue = [macroType, tokenId, \"rest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"rest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.rest\"),\n      });\n    }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n  }\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    let encodedValue = [macroType, tokenId, item._id].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data?.activation?.type);\n    let name = this._getItemName(item);\n    let result = {\n      name: name,\n      id: item._id,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    if (\n      item.data.data.recharge &&\n      !item.data.data.recharge.charged &&\n      item.data.data.recharge.value\n    ) {\n      result.name += ` (${this.i18n(\"tokenactionhud.recharge\")})`;\n    }\n\n    result.info1 = this._getQuantityData(item);\n\n    result.info2 = this._getUsesData(item);\n\n    result.info3 = this._getConsumeData(item, actor);\n\n    return result;\n  }\n\n  _getItemName(item) {\n    let name;\n\n    if (item.data.data.identified || game.user.isGM)\n      name = item.data.data.identifiedName;\n    else name = item.data.data.unidentified?.name;\n\n    if (!name) name = item.name;\n\n    return name;\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    if (item.data.data.quantity > 1) {\n      result = item.data.data.quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getUsesData(item) {\n    let result = \"\";\n\n    let uses = item.data.data.uses;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getConsumeData(item, actor) {\n    let result = \"\";\n\n    let consumeType = item.data.data.consume?.type;\n    if (consumeType && consumeType !== \"\") {\n      let consumeId = item.data.data.consume.target;\n      let parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\n      if (consumeType === \"attribute\") {\n        let target = getProperty(actor, `data.data.${consumeId}`);\n\n        if (target) {\n          let parent = getProperty(actor, `data.data.${parentId}`);\n          result = target;\n          if (!!parent.max) result += `/${parent.max}`;\n        }\n      }\n\n      if (consumeType === \"charges\") {\n        let consumeId = item.data.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let uses = target?.data.data.uses;\n        if (uses?.value) {\n          result = uses.value;\n          if (uses.max) result += `/${uses.max}`;\n        }\n      }\n\n      if (!(consumeType === \"attribute\" || consumeType === \"charges\")) {\n        let consumeId = item.data.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let quantity = target?.data.data.quantity;\n        if (quantity) {\n          result = quantity;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  _filterExpendedItems(items) {\n    if (settings.get(\"showEmptyItems\")) return items;\n\n    return items.filter((i) => {\n      let uses = i.data.data.uses;\n      // Assume something with no uses is unlimited in its use.\n      if (!uses) return true;\n\n      // if it has a max but value is 0, don't return.\n      if (uses.max > 0 && !uses.value) return false;\n\n      return true;\n    });\n  }\n\n  /** @private */\n  _sortByItemSort(items) {\n    let result = Object.values(items);\n\n    result.sort((a, b) => a.sort - b.sort);\n\n    return result;\n  }\n\n  /** @private */\n  _getProficiencyIcon(level) {\n    const icons = {\n      0: \"\",\n      0.5: '<i class=\"fas fa-adjust\"></i>',\n      1: '<i class=\"fas fa-check\"></i>',\n      2: '<i class=\"fas fa-check-double\"></i>',\n    };\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      //standard: `<i class=\"fas fa-fist-raised\"></i>`,\n      immediate: `<i class=\"fas fa-bolt\"></i>`,\n      swift: `<i class=\"fas fa-plus\"></i>`,\n      full: `<i class=\"far fa-circle\"></i>`,\n      round: `<i class=\"fas fa-hourglass-start\"></i>`,\n      minute: `<i class=\"fas fa-hourglass-half\"></i>`,\n      hour: `<i class=\"fas fa-hourglass-end\"></i>`,\n    };\n    return img[action];\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseD35E extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      canvas.tokens.controlled.forEach((t) => {\n        let idToken = t.data._id;\n        this._handleMacros(event, macroType, idToken, actionId);\n      });\n    } else {\n      await this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    switch (macroType) {\n      case \"ability\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"concentration\":\n        this.rollConcentrationMacro(event, tokenId, actionId);\n        break;\n      case \"cmb\":\n        this.rollCmbMacro(event, tokenId, actionId);\n        break;\n      case \"skill\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"abilitySave\":\n        this.rollAbilitySaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilityCheck\":\n        this.rollAbilityCheckMacro(event, tokenId, actionId);\n        break;\n      case \"buff\":\n        await this.adjustBuff(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"spell\":\n      case \"feat\":\n      case \"attack\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"defenses\":\n        this.rollDefenses(event, tokenId, actionId);\n        break;\n      case \"utility\":\n        this.performUtilityMacro(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollCmbMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollCMB(event);\n  }\n\n  rollConcentrationMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollConcentration(checkId);\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbility(checkId, { event: event });\n  }\n\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilityTest(checkId, { event: event });\n  }\n\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSavingThrow(checkId, { event: event });\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSkill(checkId, { event: event });\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    const actor = super.getActor(tokenId);\n    const item = super.getItem(actor, itemId);\n\n    item.use({ ev: event, skipDialog: false });\n  }\n\n  rollDefenses(event, tokenId, itemId) {\n    const actor = super.getActor(tokenId);\n    actor.rollDefenses();\n  }\n\n  async adjustBuff(event, tokenId, buffId) {\n    let actor = super.getActor(tokenId);\n    let buff = super.getItem(actor, buffId);\n\n    let update = { \"data.active\": !buff.data.data.active };\n\n    await buff.update(update);\n  }\n\n  performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"rest\":\n        actor.sheet._onRest(event);\n        break;\n    }\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerD35E as ActionHandler } from \"../actions/d35e/d35e-actions.js\";\nimport { RollHandlerBaseD35E as Core } from \"../rollHandlers/d35e/d35e-base.js\";\nimport * as settings from \"../settings/d35e-settings.js\";\n\nexport class D35ESystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core D35E\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"ignorePassiveFeats\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.ignorePassiveFeats.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"abbreviateSkills\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.abbreviateSkills.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"showEmptyItems\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showEmptyItems.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n}\n",
    "import * as settings from \"../../settings.js\";\n\nexport class PcActionHandlerPf2e {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  constructor(actionHandlerpf2e) {\n    this.baseHandler = actionHandlerpf2e;\n  }\n\n  buildActionList(result, tokenId, actor) {\n    const type = actor.data.type;\n    if (type === \"familiar\") {\n      this._forFamiliar(result, tokenId, actor);\n    } else {\n      this._forCharacter(result, tokenId, actor);\n    }\n\n    let skills = this._getSkillsList(actor, tokenId);\n    let saves = this.baseHandler._getSaveList(actor, tokenId);\n    let attributes = this._getAttributeList(actor, tokenId);\n    let utilities = this.baseHandler._getUtilityList(actor, tokenId);\n\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      skills\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.saves\"),\n      saves\n    );\n\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utilities\n    );\n  }\n\n  /** @private */\n  _forFamiliar(result, tokenId, actor) {\n    let attack = this._getFamiliarAttack(actor, tokenId);\n    let items = this.baseHandler._getItemsList(actor, tokenId);\n    let effects = this.baseHandler._getEffectsList(actor, tokenId);\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.inventory\"),\n      items\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.attack\"),\n      attack\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.effects\"),\n      effects\n    );\n  }\n\n  /** @private */\n  _forCharacter(result, tokenId, actor) {\n    let toggles = this._getTogglesCategory(actor, tokenId);\n    let strikes = this._getStrikesList(actor, tokenId);\n    let actions = this.baseHandler._getActionsList(actor, tokenId);\n    let items = this.baseHandler._getItemsList(actor, tokenId);\n    let spells = this.baseHandler._getSpellsList(actor, tokenId);\n    let effects = this.baseHandler._getEffectsList(actor, tokenId);\n    let feats = this.baseHandler._getFeatsList(actor, tokenId);\n\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.toggles\"),\n      toggles\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.strikes\"),\n      strikes\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.actions\"),\n      actions\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.effects\"),\n      effects\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.inventory\"),\n      items\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.spells\"),\n      spells\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.features\"),\n      feats\n    );\n  }\n\n  /** @private */\n  _getTogglesCategory(actor, tokenId) {\n    if (!settings.get(\"separateTogglesCategory\")) return;\n\n    let result = this.baseHandler.initializeEmptyCategory(\"toggles\");\n    this._addTogglesCategories(actor, tokenId, result);\n\n    return result;\n  }\n\n  /** @private */\n  _getStrikesList(actor, tokenId) {\n    let result = this.baseHandler.initializeEmptyCategory(\"strikes\");\n    result.cssClass = \"oneLine\";\n\n    if (!settings.get(\"separateTogglesCategory\"))\n      this._addTogglesCategories(actor, tokenId, result);\n\n    this.baseHandler._addStrikesCategories(actor, tokenId, result);\n\n    return result;\n  }\n\n  /** @private */\n  _addTogglesCategories(actor, tokenId, category) {\n    const macroType = \"toggle\";\n    const toggleActions = actor.data.data.toggles?.actions;\n\n    if (!toggleActions) return;\n\n    let subcategory = this.baseHandler.initializeEmptySubcategory();\n    subcategory.actionsClass = \"excludeFromWidthCalculation\";\n\n    toggleActions.forEach((t) => {\n      let toggleKey = this._getToggleKey(t.inputName);\n      if (!toggleKey) return;\n\n      let id = toggleKey;\n      let encodedValue = [macroType, tokenId, toggleKey].join(\n        this.baseHandler.delimiter\n      );\n      let name = t.label.startsWith(\"PF2E.\")\n        ? this.baseHandler.i18n(t.label)\n        : t.label;\n      let cssClass = t.checked ? \"active\" : \"\";\n\n      let action = {\n        id: id,\n        encodedValue: encodedValue,\n        name: name,\n        cssClass: cssClass,\n      };\n\n      subcategory.actions.push(action);\n    });\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      category,\n      this.baseHandler.i18n(\"tokenactionhud.toggles\"),\n      subcategory\n    );\n  }\n\n  /** @private */\n  _getToggleKey(inputName) {\n    const rollOptionPrefix = \"flags.pf2e.rollOptions.\";\n    if (!inputName.includes(rollOptionPrefix)) return \"\";\n\n    return inputName.substring(rollOptionPrefix.length);\n  }\n\n  /** @private */\n  _getFamiliarAttack(actor, tokenId) {\n    let macroType = \"familiarAttack\";\n    let result = this.baseHandler.initializeEmptyCategory(\"attack\");\n\n    let subcategory = this.baseHandler.initializeEmptySubcategory();\n\n    const att = actor.data.data.attack;\n    if (att) {\n      const attMod =\n        att.totalModifier < 0 ? att.totalModifier : `+${att.totalModifier}`;\n\n      let name = att.name.charAt(0).toUpperCase() + att.name.slice(1);\n\n      let encodedValue = [macroType, tokenId, att.name].join(\n        this.baseHandler.delimiter\n      );\n\n      let action = {\n        name: name,\n        encodedValue: encodedValue,\n        encodedValue,\n        info1: attMod,\n      };\n\n      subcategory.actions = [action];\n    }\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attack\"),\n      subcategory\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _getSkillsList(actor, tokenId) {\n    let result = this.baseHandler.initializeEmptyCategory(\"skills\");\n\n    let abbreviated = settings.get(\"abbreviateSkills\");\n\n    let actorSkills = Object.entries(actor.data.data.skills);\n\n    let skillMap = actorSkills\n      .filter((s) => !s[1].lore)\n      .map((s) =>\n        this.baseHandler.createSkillMap(tokenId, \"skill\", s, abbreviated)\n      );\n    let skills = this.baseHandler.initializeEmptySubcategory();\n    skills.actions = skillMap;\n\n    let loreMap = actorSkills\n      .filter((s) => s[1].lore)\n      .sort(this._foundrySort)\n      .map((s) =>\n        this.baseHandler.createSkillMap(tokenId, \"skill\", s, abbreviated)\n      );\n    let lore = this.baseHandler.initializeEmptySubcategory();\n    lore.actions = loreMap;\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      skills\n    );\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.lore\"),\n      lore\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _getAttributeList(actor, tokenId) {\n    let macroType = \"attribute\";\n    let result = this.baseHandler.initializeEmptyCategory(\"attributes\");\n    let attributes = this.baseHandler.initializeEmptySubcategory();\n\n    let rollableAttributes = Object.entries(actor.data.data.attributes).filter(\n      (a) => !!a[1]?.roll\n    );\n    let attributesMap = rollableAttributes.map((a) => {\n      let key = a[0];\n      let data = a[1];\n      let name = data.label\n        ? data.label\n        : key.charAt(0).toUpperCase() + key.slice(1);\n      return { id: a[0], name: name };\n    });\n\n    attributes.actions = this.baseHandler._produceActionMap(\n      tokenId,\n      attributesMap,\n      macroType\n    );\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n\n    return result;\n  }\n\n  /** @protected */\n  _foundrySort(a, b) {\n    if (!(a?.data?.sort || b?.data?.sort)) return 0;\n\n    return a.data.sort - b.data.sort;\n  }\n}\n",
    "import * as settings from \"../../settings.js\";\n\nexport class NpcActionHandlerPf2e {\n  i18n = (toTranslate) => game.i18n.localize(toTranslate);\n\n  constructor(actionHandlerpf2e) {\n    this.baseHandler = actionHandlerpf2e;\n  }\n\n  buildActionList(result, tokenId, actor) {\n    let strikes = this._getStrikesListNpc(actor, tokenId);\n    let actions = this.baseHandler._getActionsList(actor, tokenId);\n    let items = this.baseHandler._getItemsList(actor, tokenId);\n    let spells = this.baseHandler._getSpellsList(actor, tokenId);\n    let feats = this.baseHandler._getFeatsList(actor, tokenId);\n    let skills = this._getSkillsList(actor, tokenId);\n    let saves = this.baseHandler._getSaveList(actor, tokenId);\n    let attributes = this._getAttributeListNpc(actor, tokenId);\n    let effects = this.baseHandler._getEffectsList(actor, tokenId);\n    let utilities = this.baseHandler._getUtilityList(actor, tokenId);\n\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.strikes\"),\n      strikes\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.actions\"),\n      actions\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.effects\"),\n      effects\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.inventory\"),\n      items\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.spells\"),\n      spells\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.features\"),\n      feats\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      skills\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.saves\"),\n      saves\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n    this.baseHandler._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utilities\n    );\n  }\n\n  /** @private */\n  _getStrikesListNpc(actor, tokenId) {\n    let result = this.baseHandler.initializeEmptyCategory(\"strikes\");\n    result.cssClass = \"oneLine\";\n\n    if (!settings.get(\"separateTogglesCategory\"))\n      this._addTogglesCategories(actor, tokenId, result);\n\n    const info = this.baseHandler.i18n(\"tokenactionhud.experimental\");\n\n    this.baseHandler._addStrikesCategories(actor, tokenId, result, info);\n\n    return result;\n  }\n\n  /** @private */\n  _addTogglesCategories(actor, tokenId, category) {\n    const macroType = \"toggle\";\n    const toggleActions = actor.data.data.toggles?.actions;\n\n    if (!toggleActions) return;\n\n    let subcategory = this.baseHandler.initializeEmptySubcategory();\n    subcategory.actionsClass = \"excludeFromWidthCalculation\";\n\n    toggleActions.forEach((t) => {\n      let toggleKey = this._getToggleKey(t.inputName);\n      if (!toggleKey) return;\n\n      let id = toggleKey;\n      let encodedValue = [macroType, tokenId, toggleKey].join(\n        this.baseHandler.delimiter\n      );\n      let name = t.label.startsWith(\"PF2E.\")\n        ? this.baseHandler.i18n(t.label)\n        : t.label;\n      let cssClass = t.checked ? \"active\" : \"\";\n\n      let action = {\n        id: id,\n        encodedValue: encodedValue,\n        name: name,\n        cssClass: cssClass,\n      };\n\n      subcategory.actions.push(action);\n    });\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      category,\n      this.baseHandler.i18n(\"tokenactionhud.toggles\"),\n      subcategory\n    );\n  }\n\n  /** @private */\n  _getToggleKey(inputName) {\n    const rollOptionPrefix = \"flags.pf2e.rollOptions.\";\n    if (!inputName.includes(rollOptionPrefix)) return \"\";\n\n    return inputName.substring(rollOptionPrefix.length);\n  }\n\n  /** @private */\n  _getSkillsList(actor, tokenId) {\n    let result = this.baseHandler.initializeEmptyCategory(\"skills\");\n\n    let abbreviated = settings.get(\"abbreviateSkills\");\n\n    let actorSkills = Object.entries(actor.data.data.skills).filter(\n      (s) => !!s[1].name && s[1].name.length > 1\n    );\n\n    let skillMap = actorSkills\n      .filter((s) => !s[1].lore)\n      .map((s) =>\n        this.baseHandler.createSkillMap(tokenId, \"skill\", s, abbreviated)\n      );\n    let skills = this.baseHandler.initializeEmptySubcategory();\n    skills.actions = skillMap;\n\n    let loreMap = actorSkills\n      .filter((s) => s[1].lore)\n      .sort(this._foundrySort)\n      .map((s) =>\n        this.baseHandler.createSkillMap(tokenId, \"skill\", s, abbreviated)\n      );\n    let lore = this.baseHandler.initializeEmptySubcategory();\n    lore.actions = loreMap;\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      skills\n    );\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.lore\"),\n      lore\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _getAttributeListNpc(actor, tokenId) {\n    let macroType = \"attribute\";\n    let result = this.baseHandler.initializeEmptyCategory(\"attributes\");\n    let attributes = this.baseHandler.initializeEmptySubcategory();\n\n    let attributesMap = [\n      { id: \"perception\", name: \"Perception\" },\n      { id: \"initiative\", name: \"Initiative\" },\n    ];\n\n    attributes.actions = this.baseHandler._produceActionMap(\n      tokenId,\n      attributesMap,\n      macroType\n    );\n\n    this.baseHandler._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n\n    return result;\n  }\n\n  /** @protected */\n  _foundrySort(a, b) {\n    if (!(a?.data?.sort || b?.data?.sort)) return 0;\n\n    return a.data.sort - b.data.sort;\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\nimport { PcActionHandlerPf2e } from \"./pf2e-actions-pc.js\";\nimport { NpcActionHandlerPf2e } from \"./pf2e-actions-npc.js\";\n\nexport class ActionHandlerPf2e extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n    this.pcActionHandler = new PcActionHandlerPf2e(this);\n    this.npcActionHandler = new NpcActionHandlerPf2e(this);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n    if (!actor) return result;\n\n    let knownActors = [\"character\", \"npc\", \"familiar\"];\n    let actorType = actor.data.type;\n    if (!knownActors.includes(actorType)) return result;\n\n    result.actorId = actor.id;\n\n    if (actorType === \"character\" || actorType === \"familiar\")\n      this.pcActionHandler.buildActionList(result, tokenId, actor);\n\n    if (actorType === \"npc\")\n      this.npcActionHandler.buildActionList(result, tokenId, actor);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\", \"familiar\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId, actors);\n    this._addMultiSaves(list, tokenId, actors);\n    this._addMultiAttributes(list, tokenId, actors);\n    this._addMultiUtilities(list, tokenId, actors);\n  }\n\n  _addMultiSkills(list, tokenId, actors) {\n    const macroType = \"skill\";\n    const category = this.initializeEmptyCategory(macroType);\n    const subcategory = this.initializeEmptySubcategory(macroType);\n\n    const allSkillSets = actors.map((a) =>\n      Object.entries(a.data.data.skills).filter((s) => !!s[1].roll)\n    );\n    const minSkillSetSize = Math.min(...allSkillSets.map((s) => s.length));\n    const smallestSkillSet = allSkillSets.find(\n      (set) => set.length === minSkillSetSize\n    );\n    const finalSharedSkills = smallestSkillSet.filter((skill) =>\n      allSkillSets.every((set) =>\n        set.some((setSkill) => setSkill[0] === skill[0])\n      )\n    );\n\n    finalSharedSkills.forEach((skill) => {\n      const key = skill[0];\n      const data = skill[1];\n\n      let name = CONFIG.PF2E.skills[key];\n      if (!name) name = data.name;\n\n      const encodedValue = [macroType, tokenId, key].join(this.delimiter);\n      const action = {\n        name: game.i18n.localize(name),\n        encodedValue: encodedValue,\n        id: key,\n      };\n      subcategory.actions.push(action);\n    });\n\n    const skillsName = this.i18n(\"tokenactionhud.commonSkills\");\n    this._combineSubcategoryWithCategory(category, skillsName, subcategory);\n    this._combineCategoryWithList(list, skillsName, category);\n  }\n\n  _addMultiSaves(list, tokenId, actors) {\n    const macroType = \"save\";\n    const category = this.initializeEmptyCategory(macroType);\n    const subcategory = this.initializeEmptySubcategory(macroType);\n\n    Object.entries(CONFIG.PF2E.saves).forEach((save) => {\n      const key = save[0];\n      const name = save[1];\n      const encodedValue = [macroType, tokenId, key].join(this.delimiter);\n      const action = {\n        name: game.i18n.localize(name),\n        encodedValue: encodedValue,\n        id: key,\n      };\n      subcategory.actions.push(action);\n    });\n\n    const skillsName = this.i18n(\"tokenactionhud.saves\");\n    this._combineSubcategoryWithCategory(category, skillsName, subcategory);\n    this._combineCategoryWithList(list, skillsName, category);\n  }\n\n  _addMultiAttributes(list, tokenId, actors) {\n    let macroType = \"attribute\";\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = this.initializeEmptySubcategory();\n\n    let attributesMap = [\n      { id: \"perception\", name: \"Perception\" },\n      { id: \"initiative\", name: \"Initiative\" },\n    ];\n\n    attributes.actions = this._produceActionMap(\n      tokenId,\n      attributesMap,\n      macroType\n    );\n\n    const attributesName = this.i18n(\"tokenactionhud.attributes\");\n    this._combineSubcategoryWithCategory(result, attributesName, attributes);\n    this._combineCategoryWithList(list, attributesName, result);\n  }\n\n  _addMultiUtilities(list, tokenId, actors) {\n    if (!actors.every((actor) => actor.data.type === \"character\")) return;\n\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n\n    let restActions = [];\n    let treatWoundsValue = [\"utility\", tokenId, \"treatWounds\"].join(\n      this.delimiter\n    );\n    let treatWoundsAction = {\n      id: \"treatWounds\",\n      name: this.i18n(\"tokenactionhud.treatWounds\"),\n      encodedValue: treatWoundsValue,\n    };\n    restActions.push(treatWoundsAction);\n\n    let longRestValue = [\"utility\", tokenId, \"longRest\"].join(this.delimiter);\n    let longRestAction = {\n      id: \"longRest\",\n      name: this.i18n(\"tokenactionhud.restNight\"),\n      encodedValue: longRestValue,\n    };\n    restActions.push(longRestAction);\n\n    if (game.settings.get(\"pf2e\", \"staminaVariant\")) {\n      let takeBreatherValue = [\"utility\", tokenId, \"takeABreather\"].join(\n        this.delimiter\n      );\n      let takeBreatherAction = {\n        id: \"takeABreather\",\n        name: this.i18n(\"tokenactionhud.takeBreather\"),\n        encodedValue: takeBreatherValue,\n      };\n\n      restActions.push(takeBreatherAction);\n    }\n\n    rests.actions = restActions;\n\n    const utilityName = this.i18n(\"tokenactionhud.utility\");\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineCategoryWithList(list, utilityName, result);\n  }\n\n  /** @private */\n  _getItemsList(actor, tokenId) {\n    let macroType = \"item\";\n    let result = this.initializeEmptyCategory(\"items\");\n\n    let filter = [\"weapon\", \"equipment\", \"consumable\", \"armor\", \"backpack\"];\n    let items = (actor.items ?? [])\n      .filter(\n        (a) =>\n          a.data.data.equipped?.value && !a.data.data.containerId?.value?.length\n      )\n      .filter((i) => filter.includes(i.data.type))\n      .sort(this._foundrySort);\n\n    let weaponList = items.filter((i) => i.type === \"weapon\");\n    if (actor.data.type === \"character\")\n      weaponList = weaponList.filter((i) => i.data.data.equipped.value);\n    let weaponActions = this._buildItemActions(tokenId, macroType, weaponList);\n    let weapons = this.initializeEmptySubcategory();\n    weapons.actions = weaponActions;\n\n    let armourList = items.filter((i) => i.type === \"armor\");\n    if (actor.data.type === \"character\")\n      armourList = armourList.filter((i) => i.data.data.equipped.value);\n    let armourActions = this._buildItemActions(tokenId, macroType, armourList);\n    let armour = this.initializeEmptySubcategory();\n    armour.actions = armourActions;\n\n    let equipmentList = items.filter(\n      (i) => i.type === \"equipment\" || i.type === \"backpack\"\n    );\n    let equipmentActions = this._buildItemActions(\n      tokenId,\n      macroType,\n      equipmentList\n    );\n    let equipment = this.initializeEmptySubcategory();\n    equipment.actions = equipmentActions;\n\n    let consumablesList = items.filter((i) => i.type === \"consumable\");\n    let consumableActions = this._buildItemActions(\n      tokenId,\n      macroType,\n      consumablesList\n    );\n    let consumables = this.initializeEmptySubcategory();\n    consumables.actions = consumableActions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      weapons\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.armour\"),\n      armour\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.equipment\"),\n      equipment\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.consumables\"),\n      consumables\n    );\n    this._addContainerSubcategories(tokenId, macroType, result, actor, items);\n\n    return result;\n  }\n\n  /** @private */\n  _addContainerSubcategories(tokenId, macroType, category, actor, items) {\n    const allContainerIds = [\n      ...new Set(\n        actor.items\n          .filter((i) => i.data.data.containerId?.value)\n          .map((i) => i.data.data.containerId.value)\n      ),\n    ];\n    const containers = (items ?? []).filter((i) =>\n      allContainerIds.includes(i.id)\n    );\n\n    containers.forEach((container) => {\n      const containerId = container.id;\n      const contents = actor.items\n        .filter((i) => i.data.data.containerId?.value === containerId)\n        .sort(this._foundrySort);\n      if (contents.length === 0) return;\n\n      const containerCategory = this.initializeEmptySubcategory(containerId);\n      let containerActions = this._buildItemActions(\n        tokenId,\n        macroType,\n        contents\n      );\n      containerCategory.actions = containerActions;\n      containerCategory.info1 = container.data.data.bulkCapacity.value;\n\n      this._combineSubcategoryWithCategory(\n        category,\n        container.name,\n        containerCategory\n      );\n    });\n  }\n\n  /** @private */\n  _getEffectsList(actor, tokenId) {\n    let macroType = \"item\";\n    let result = this.initializeEmptyCategory(\"effects\");\n\n    let filter = [\"effect\"];\n    let items = (actor.items ?? [])\n      .filter((i) => filter.includes(i.data.type))\n      .sort(this._foundrySort);\n\n    let effectsList = items.filter((i) => i.type === \"effect\");\n    let effectActions = this._buildItemActions(tokenId, macroType, effectsList);\n    let effects = this.initializeEmptySubcategory();\n    effects.actions = effectActions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      effects\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addStrikesCategories(actor, tokenId, category) {\n    let macroType = \"strike\";\n    let strikes = actor.data.data.actions?.filter((a) => a.type === macroType);\n    if (actor.data.type === \"character\" && !!strikes) {\n      strikes = strikes.filter((s) => s.ready);\n    }\n\n    if (!strikes) return;\n\n    let calculateAttackPenalty = settings.get(\"calculateAttackPenalty\");\n\n    strikes.forEach((s) => {\n      let subcategory = this.initializeEmptySubcategory();\n      let glyph = s.glyph;\n      if (glyph)\n        subcategory.icon = `<span style='font-family: \"Pathfinder2eActions\"'>${glyph}</span>`;\n\n      let map = Math.abs(parseInt(s.variants[1].label.split(\" \")[1]));\n      let attackMod = s.totalModifier;\n\n      let currentMap = 0;\n      let currentBonus = attackMod;\n      let calculatePenalty = calculateAttackPenalty;\n\n      let variantsMap = s.variants.map(\n        function (v) {\n          let name;\n          if (currentBonus === attackMod || calculatePenalty) {\n            name = currentBonus >= 0 ? `+${currentBonus}` : `${currentBonus}`;\n          } else {\n            name = currentMap >= 0 ? `+${currentMap}` : `${currentMap}`;\n          }\n          currentMap -= map;\n          currentBonus -= map;\n          return {\n            id: encodeURIComponent(`${this.name}>${this.variants.indexOf(v)}`),\n            name: name,\n          };\n        }.bind(s)\n      );\n\n      variantsMap[0].img = s.imageUrl;\n      subcategory.actions = this._produceActionMap(\n        tokenId,\n        variantsMap,\n        macroType\n      );\n\n      let damageEncodedValue = [\n        macroType,\n        tokenId,\n        encodeURIComponent(s.name + \">damage\"),\n      ].join(this.delimiter);\n      let critEncodedValue = [\n        macroType,\n        tokenId,\n        encodeURIComponent(s.name + \">critical\"),\n      ].join(this.delimiter);\n      subcategory.actions.push({\n        name: this.i18n(\"tokenactionhud.damage\"),\n        encodedValue: damageEncodedValue,\n        id: encodeURIComponent(s.name + \">damage\"),\n      });\n      subcategory.actions.push({\n        name: this.i18n(\"tokenactionhud.critical\"),\n        encodedValue: critEncodedValue,\n        id: encodeURIComponent(s.name + \">critical\"),\n      });\n\n      let ammoAction = this._ammoInfo(tokenId, actor, s);\n      if (!!ammoAction) {\n        subcategory.actions.push(ammoAction);\n      }\n\n      this._combineSubcategoryWithCategory(category, s.name, subcategory);\n    });\n  }\n\n  /** @private */\n  _ammoInfo(tokenId, actor, strike) {\n    if (!strike.selectedAmmoId) return;\n\n    const item = actor.items.get(strike.selectedAmmoId);\n\n    if (!item) {\n      return {\n        name: this.i18n(\"tokenactionhud.noammo\"),\n        encodedValue: \"noammo\",\n        id: \"noammo\",\n      };\n    }\n\n    let encodedValue = [\"ammo\", tokenId, item.id].join(this.delimiter);\n    let img = this._getImage(item);\n    let action = {\n      name: item.name,\n      encodedValue: encodedValue,\n      id: item.id,\n      img: img,\n    };\n    action.info1 = item.data.data.quantity?.value;\n\n    return action;\n  }\n\n  /** @private */\n  _getActionsList(actor, tokenId) {\n    let macroType = \"action\";\n    let result = this.initializeEmptyCategory(\"actions\");\n\n    let filteredActions = (actor.items ?? [])\n      .filter((a) => a.type === macroType || a.type === \"feat\")\n      .sort(this._foundrySort);\n\n    if (settings.get(\"ignorePassiveActions\"))\n      filteredActions = filteredActions.filter(\n        (a) => a.data.data.actionType.value !== \"passive\"\n      );\n\n    let actions = this.initializeEmptySubcategory();\n    actions.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter(\n        (a) =>\n          a.data.data.actionType?.value === \"action\" && this._actionIsShort(a)\n      ),\n      macroType\n    );\n\n    let reactions = this.initializeEmptySubcategory();\n    reactions.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter(\n        (a) =>\n          a.data.data.actionType?.value === \"reaction\" && this._actionIsShort(a)\n      ),\n      macroType\n    );\n\n    let free = this.initializeEmptySubcategory();\n    free.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter(\n        (a) =>\n          a.data.data.actionType?.value === \"free\" && this._actionIsShort(a)\n      ),\n      macroType\n    );\n\n    let passive = this.initializeEmptySubcategory();\n    passive.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter(\n        (a) =>\n          a.data.data.actionType?.value === \"passive\" &&\n          this._actionIsShort(a) &&\n          a.type !== \"feat\"\n      ),\n      macroType\n    );\n\n    let exploration = this.initializeEmptySubcategory();\n    exploration.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter((a) =>\n        a.data.data.traits?.value.includes(\"exploration\")\n      ),\n      macroType\n    );\n\n    let downtime = this.initializeEmptySubcategory();\n    downtime.actions = this._produceActionMap(\n      tokenId,\n      (filteredActions ?? []).filter((a) =>\n        a.data.data.traits?.value.includes(\"downtime\")\n      ),\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.actions\"),\n      actions\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.reactions\"),\n      reactions\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.free\"),\n      free\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.passive\"),\n      passive\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.exploration\"),\n      exploration\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.downtime\"),\n      downtime\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _actionIsShort(action) {\n    return !(\n      action.data.data.traits?.value.includes(\"exploration\") ||\n      action.data.data.traits?.value.includes(\"downtime\")\n    );\n  }\n\n  /** @private */\n  _getSpellsList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"spells\");\n    \n    let filter = [\"spellcastingEntry\"];\n    let items = (actor.items ?? []).filter((a) => filter.includes(a.type));\n    const macroType = \"spell\";\n\n    let spellCategories = this.initializeEmptySubcategory();\n\n    items.forEach((spellcastingEntry) => {\n      \n      const bookName = spellcastingEntry.data.name;\n      let spellcastingEntryCategory = this.initializeEmptySubcategory(bookName);\n      spellcastingEntryCategory.name = bookName;\n      spellCategories.subcategories.push(spellcastingEntryCategory);\n\n      const spellInfo = spellcastingEntry.getSpellData();\n      const vancian = spellInfo.isPrepared && !spellInfo.isFlexible;\n      \n      spellInfo.levels.filter((level) => level.active.length > 0).forEach((level, i) => {\n        \n        console.log(`TAH: ${spellcastingEntry.data.name}, ${level.level}`);\n\n        let levelName = `${game.i18n.localize(level.label)}`\n        \n        let levelSubcategory = this.initializeEmptySubcategory();\n        \n        if (i==0) {\n          levelName = `${bookName} - ${levelName}`;\n          if (actor.data.type === \"character\")\n            this._setSpellSlotInfo(\n              actor,\n              tokenId,\n              levelSubcategory,\n              level,\n              spellInfo,\n              true\n            );\n          levelSubcategory.info2 = this._getSpellDcInfo(spellcastingEntry);\n        } else {\n          if (actor.data.type === \"character\")\n            this._setSpellSlotInfo(\n              actor,\n              tokenId,\n              levelSubcategory,\n              level,\n              spellInfo,\n              false\n            );\n        }\n\n        level.active.filter(({spell}) => spell.expended ?? false === false).forEach(({spell}) => {\n          let encodedValue = [\n            macroType,\n            tokenId,\n            `${spellInfo.id}>${level.level}>${spell.data._id}`,\n          ].join(this.delimiter);\n          let spellAction = {\n            name: spell.name,\n            encodedValue: encodedValue,\n            id: spell.data._id,\n          };\n          spellAction.img = this._getImage(spell);\n          spellAction.icon = this._getActionIcon(spell.data.data?.time?.value);\n          spellAction.spellLevel = level.level;\n  \n          this._addSpellInfo(spell, spellAction);\n          levelSubcategory.actions.push(spellAction);\n          if (spell.expended === false) {\n            let spellExpend = {\n              name: \"-\",\n              encodedValue: encodedValue + \">expend\",\n              id: spell.data.id,\n              cssClass: \"stickLeft\",\n            };\n            levelSubcategory.actions.push(spellExpend);\n          }\n        });\n\n        this._combineSubcategoryWithCategory(\n          spellcastingEntryCategory,\n          levelName,\n          levelSubcategory\n        );\n      })\n    });\n\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.spells\"),\n      spellCategories\n    );\n    return result;\n  }\n  // /** @private */\n  // _categoriseSpells(actor, tokenId, spells) {\n  //   const macroType = \"spell\";\n  //   let result = this.initializeEmptySubcategory();\n\n  //   let spellbooks = actor.items.filter(\n  //     (i) => i.data.type === \"spellcastingEntry\"\n  //   );\n\n  //   // get prepared spellbooks first, get spells from those, then turn to other spells\n  //   spellbooks.forEach((spellbook) => {\n  //     if (spellbook.data.data.prepared.value !== \"prepared\") return;\n\n  //     let bookName = spellbook.data.name;\n  //     Object.entries(spellbook.data.data.slots).forEach((slot) => {\n  //       if (slot[1].prepared.length === 0 || slot[1].prepared.max <= 0) return;\n\n  //       let levelKey = slot[0];\n  //       let level = levelKey.substr(4);\n  //       let levelName = `${this.i18n(\"tokenactionhud.level\")} ${level}`;\n\n  //       levelName =\n  //         level == 0 ? this.i18n(\"tokenactionhud.cantrips\") : levelName;\n\n  //       let items = Object.values(slot[1].prepared).map((spell) => {\n  //         if (!spell.expended)\n  //           return spells.find((sp) => sp.data._id === spell.id);\n  //       });\n  //       items = items.filter((i) => !!i);\n\n  //       if (items.length === 0) return;\n\n  //       let bookCategory;\n  //       if (!result.subcategories.some((s) => s.name === bookName)) {\n  //         bookCategory = this.initializeEmptySubcategory();\n  //         bookCategory.name = bookName;\n  //         result.subcategories.push(bookCategory);\n  //       } else {\n  //         bookCategory = result.subcategories.find((b) => b.name === bookName);\n  //       }\n\n  //       let levelSubcategory = this.initializeEmptySubcategory();\n\n  //       items.forEach((s) => {\n  //         let encodedValue = [\n  //           macroType,\n  //           tokenId,\n  //           `${spellbook.data._id}>${level}>${s.data._id}`,\n  //         ].join(this.delimiter);\n  //         let spell = {\n  //           name: s.name,\n  //           encodedValue: encodedValue,\n  //           id: s.data._id,\n  //         };\n  //         spell.img = this._getImage(s);\n  //         spell.icon = this._getActionIcon(s.data.data?.time?.value);\n  //         spell.spellLevel = level;\n\n  //         this._addSpellInfo(s, spell);\n  //         levelSubcategory.actions.push(spell);\n\n  //         if (level > 0) {\n  //           let spellExpend = {\n  //             name: \"-\",\n  //             encodedValue: encodedValue + \">expend\",\n  //             id: s.data.id,\n  //             cssClass: \"stickLeft\",\n  //           };\n  //           levelSubcategory.actions.push(spellExpend);\n  //         }\n  //       });\n\n  //       if (\n  //         result.subcategories.find((s) => s.name === bookName)?.subcategories\n  //           .length === 0\n  //       ) {\n  //         levelName = `${bookName} - ${levelName}`;\n  //         if (actor.data.type === \"character\")\n  //           this._setSpellSlotInfo(\n  //             actor,\n  //             tokenId,\n  //             levelSubcategory,\n  //             spellbook,\n  //             level,\n  //             true\n  //           );\n\n  //         levelSubcategory.info2 = this._getSpellDcInfo(spellbook);\n  //       }\n\n  //       this._combineSubcategoryWithCategory(\n  //         bookCategory,\n  //         levelName,\n  //         levelSubcategory\n  //       );\n  //     });\n  //   });\n\n  //   spells.forEach(\n  //     function (s) {\n  //       var level = this._getSpellLevel(s);\n  //       var spellbookId = s.data.data.location?.value;\n\n  //       let spellbook;\n  //       if (spellbookId)\n  //         spellbook = spellbooks.find((s) => s.data._id === spellbookId);\n\n  //       // return if 'prepared' because it should already have been handled above\n  //       if (!spellbook || spellbook.data.data.prepared.value === \"prepared\")\n  //         return;\n\n  //       let bookName = spellbook.data.name;\n\n  //       let category;\n  //       if (!result.subcategories.some((b) => b.name === bookName)) {\n  //         category = this.initializeEmptySubcategory(bookName);\n  //         category.name = bookName;\n  //         result.subcategories.push(category);\n  //       } else {\n  //         category = result.subcategories.find((b) => b.name === bookName);\n  //       }\n\n  //       let levelName =\n  //         level == 0\n  //           ? this.i18n(\"tokenactionhud.cantrips\")\n  //           : `${this.i18n(\"tokenactionhud.level\")} ${level}`;\n  //       let levelNameWithBook = `${bookName} - ${levelName}`;\n\n  //       // On first subcategory, include bookName, attack bonus, and spell DC.\n  //       let levelCategory;\n  //       if (category.subcategories.length === 0) {\n  //         levelCategory = this.initializeEmptySubcategory();\n  //         levelCategory.name = levelNameWithBook;\n  //         category.subcategories.push(levelCategory);\n\n  //         if (actor.data.type === \"character\")\n  //           this._setSpellSlotInfo(\n  //             actor,\n  //             tokenId,\n  //             levelCategory,\n  //             spellbook,\n  //             level,\n  //             true\n  //           );\n\n  //         levelCategory.info2 = this._getSpellDcInfo(spellbook);\n  //       }\n\n  //       // If there's only one subcategory, check if it's the same as the current\n  //       let stillFirstSubcategory =\n  //         category.subcategories.length === 1 &&\n  //         category.subcategories.some((s) => s.name === levelNameWithBook);\n\n  //       if (\n  //         !(\n  //           stillFirstSubcategory ||\n  //           category.subcategories.some((s) => s.name === levelName)\n  //         )\n  //       ) {\n  //         levelCategory = this.initializeEmptySubcategory(levelName);\n  //         levelCategory.name = levelName;\n  //         category.subcategories.push(levelCategory);\n\n  //         if (actor.data.type === \"character\")\n  //           this._setSpellSlotInfo(\n  //             actor,\n  //             tokenId,\n  //             levelCategory,\n  //             spellbook,\n  //             level,\n  //             false\n  //           );\n  //       }\n\n  //       let categoryName = stillFirstSubcategory\n  //         ? levelNameWithBook\n  //         : levelName;\n  //       levelCategory = category.subcategories.find(\n  //         (s) => s.name === categoryName\n  //       );\n\n  //       let encodedValue = [\n  //         macroType,\n  //         tokenId,\n  //         `${spellbook.data._id}>${level}>${s.data._id}`,\n  //       ].join(this.delimiter);\n  //       let spell = {\n  //         name: s.name,\n  //         encodedValue: encodedValue,\n  //         id: s.data._id,\n  //       };\n  //       spell.img = this._getImage(s);\n  //       spell.icon = this._getActionIcon(s.data.data?.time?.value);\n  //       spell.spellLevel = level;\n  //       this._addSpellInfo(s, spell);\n  //       levelCategory.actions.push(spell);\n  //     }.bind(this)\n  //   );\n\n  //   return result;\n  // }\n\n  /** @private */\n  _getSpellDcInfo(spellcastingEntry) {\n    let result = \"\";\n\n    let spelldc = spellcastingEntry.data.data.spelldc;\n    let attackBonus =\n      spelldc.value >= 0\n        ? `${this.i18n(\"tokenactionhud.atk\")} +${spelldc.value}`\n        : `${this.i18n(\"tokenactionhud.atk\")} -${spelldc.value}`;\n    let dcInfo = `${this.i18n(\"tokenactionhud.dc\")}${\n      spellcastingEntry.data.data.spelldc.dc\n    }`;\n\n    result = `${attackBonus} ${dcInfo}`;\n\n    return result;\n  }\n\n  /** @private */\n  _setSpellSlotInfo(\n    actor,\n    tokenId,\n    category,\n    level,\n    spellInfo,\n    firstSubcategory\n  ) {\n\n    let maxSlots, valueSlots, increaseId, decreaseId;\n    if (firstSubcategory && spellInfo.isFocusPool) {\n      let focus = actor.data.data.resources.focus;\n      maxSlots = focus.max;\n      valueSlots = focus.value;\n\n      if (maxSlots > 0) {\n        category.info1 = `${valueSlots}/${maxSlots}`;\n\n        increaseId = `${spellInfo.id}>focus>slotIncrease`;\n        let increaseEncodedValue = [\"spellSlot\", tokenId, increaseId].join(\n          this.delimiter\n        );\n        category.actions.unshift({\n          id: increaseId,\n          name: \"+\",\n          encodedValue: increaseEncodedValue,\n          cssClass: \"shrink\",\n        });\n\n        decreaseId = `${spellInfo.id}>focus>slotDecrease`;\n        let decreaseEncodedValue = [\"spellSlot\", tokenId, decreaseId].join(\n          this.delimiter\n        );\n        category.actions.unshift({\n          id: decreaseId,\n          encodedValue: decreaseEncodedValue,\n          name: \"-\",\n          cssClass: \"shrink\",\n        });\n      }\n    }\n\n    if (level.uses?.max > 0 && (spellInfo.isPrepared && !spellInfo.isFlexible)) {\n      let slots = level.uses;\n      let slotLevel = `slot${level}`;\n      maxSlots = slots.max;\n      valueSlots = slots.value;\n\n      if (maxSlots > 0) {\n        category.info1 = `${valueSlots}/${maxSlots}`;\n\n        increaseId = `${spellInfo.id}>${slotLevel}>slotIncrease`;\n        let increaseEncodedValue = [\"spellSlot\", tokenId, increaseId].join(\n          this.delimiter\n        );\n        category.actions.unshift({\n          encodedValue: increaseEncodedValue,\n          name: \"+\",\n          id: increaseId,\n          cssClass: \"shrink\",\n        });\n\n        decreaseId = `${spellInfo.id}>${slotLevel}>slotDecrease`;\n        let decreaseEncodedValue = [\"spellSlot\", tokenId, decreaseId].join(\n          this.delimiter\n        );\n        category.actions.unshift({\n          encodedValue: decreaseEncodedValue,\n          name: \"-\",\n          id: increaseId,\n          cssClass: \"shrink\",\n        });\n      }\n    }\n  }\n\n  /** @private */\n  _addSpellInfo(s, spell) {\n    this._addComponentsInfo(s, spell);\n    if (!settings.get(\"printSpellCard\")) this._addAttackDamageInfo(s, spell);\n  }\n\n  _addComponentsInfo(s, spell) {\n    let components = s.components;\n    if (components) {\n      spell.info1 = components.value;\n    } else {\n      components = s.data.data.components?.value.split(\",\");\n      spell.info1 = components\n        .map((c) => c.trim().charAt(0).toUpperCase())\n        .join(\"\");\n    }\n  }\n\n  _addAttackDamageInfo(s, spell) {\n    let info = [];\n    if (s.data.data.spellType.value === \"attack\")\n      info.push(this.i18n(\"tokenactionhud.atk\"));\n\n    if (s.data.data.damage.value) info.push(this.i18n(\"tokenactionhud.dmg\"));\n\n    spell.info2 = info.join(\", \");\n  }\n\n  /** @private */\n  _getFeatsList(actor, tokenId) {\n    let macroType = \"feat\";\n\n    let result = this.initializeEmptyCategory(\"feats\");\n\n    let filter = [macroType];\n    let items = (actor.items ?? [])\n      .filter((a) => filter.includes(a.type))\n      .sort(this._foundrySort);\n\n    let active = this.initializeEmptySubcategory();\n    active.actions = this._produceActionMap(\n      tokenId,\n      (items ?? []).filter((a) => a.data.data.actionType.value !== \"passive\"),\n      macroType\n    );\n\n    let passive = this.initializeEmptySubcategory();\n    passive.actions = this._produceActionMap(\n      tokenId,\n      (items ?? []).filter((a) => a.data.data.actionType.value === \"passive\"),\n      macroType,\n      true\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.active\"),\n      active\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.passive\"),\n      passive\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _getSaveList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"saves\");\n\n    let actorSaves = actor.data.data.saves;\n    let saveMap = Object.keys(actorSaves).map((k) => {\n      return { id: k, name: game.i18n.localize(CONFIG.PF2E.saves[k]) };\n    });\n\n    let saves = this.initializeEmptySubcategory();\n    saves.actions = this._produceActionMap(tokenId, saveMap, \"save\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.saves\"),\n      saves\n    );\n\n    return result;\n  }\n\n  /** @protected */\n  createSkillMap(tokenId, macroType, skillEntry, abbreviated) {\n    let key = skillEntry[0];\n    let data = skillEntry[1];\n\n    let name =\n      abbreviated || !data.name\n        ? key.charAt(0).toUpperCase() + key.slice(1)\n        : data.name?.charAt(0).toUpperCase() + data.name?.slice(1);\n\n    let value = data.value;\n    let info = \"\";\n    if (value != 0) {\n      if (value > 0) info = `+${value}`;\n      else info = `${value}`;\n    }\n\n    let action = this._produceActionMap(\n      tokenId,\n      [{ id: key, name: name }],\n      macroType\n    );\n    action[0].info1 = info;\n    return action[0];\n  }\n\n  /** @private */\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    if (actor.data.type === \"character\") {\n      let attributes = this.initializeEmptySubcategory();\n      let attributeActions = [];\n\n      let heroPoints = actor.data.data.attributes?.heroPoints;\n      if (heroPoints)\n        attributeActions.push(\n          this._getAttributeAction(\n            tokenId,\n            \"heroPoint\",\n            this.i18n(\"tokenactionhud.heroPoints\"),\n            heroPoints.rank,\n            heroPoints.max\n          )\n        );\n\n      let doomedPoints = actor.data.data.attributes?.doomed;\n      let dyingPoints = actor.data.data.attributes?.dying;\n      if (dyingPoints) {\n        let dyingVal = dyingPoints.value;\n        let dyingMax = dyingPoints.max;\n        if (doomedPoints) dyingMax -= doomedPoints.value;\n        attributeActions.push(\n          this._getAttributeAction(\n            tokenId,\n            \"dying\",\n            this.i18n(\"tokenactionhud.dying\"),\n            dyingVal,\n            dyingMax\n          )\n        );\n      }\n\n      let woundedPoints = actor.data.data.attributes?.wounded;\n      if (woundedPoints)\n        attributeActions.push(\n          this._getAttributeAction(\n            tokenId,\n            \"wounded\",\n            this.i18n(\"tokenactionhud.wounded\"),\n            woundedPoints.value,\n            woundedPoints.max\n          )\n        );\n\n      if (doomedPoints)\n        attributeActions.push(\n          this._getAttributeAction(\n            tokenId,\n            \"doomed\",\n            this.i18n(\"tokenactionhud.doomed\"),\n            doomedPoints.value,\n            doomedPoints.max\n          )\n        );\n\n      attributes.actions = attributeActions;\n\n      this._combineSubcategoryWithCategory(\n        result,\n        this.i18n(\"tokenactionhud.attributes\"),\n        attributes\n      );\n\n      let rests = this.initializeEmptySubcategory();\n\n      let restActions = [];\n      let treatWoundsValue = [\"utility\", tokenId, \"treatWounds\"].join(\n        this.delimiter\n      );\n      let treatWoundsAction = {\n        id: \"treatWounds\",\n        name: this.i18n(\"tokenactionhud.treatWounds\"),\n        encodedValue: treatWoundsValue,\n      };\n      restActions.push(treatWoundsAction);\n\n      let longRestValue = [\"utility\", tokenId, \"longRest\"].join(this.delimiter);\n      let longRestAction = {\n        id: \"longRest\",\n        name: this.i18n(\"tokenactionhud.restNight\"),\n        encodedValue: longRestValue,\n      };\n      restActions.push(longRestAction);\n\n      if (game.settings.get(\"pf2e\", \"staminaVariant\")) {\n        let takeBreatherValue = [\"utility\", tokenId, \"takeABreather\"].join(\n          this.delimiter\n        );\n        let takeBreatherAction = {\n          id: \"takeABreather\",\n          name: this.i18n(\"tokenactionhud.takeBreather\"),\n          encodedValue: takeBreatherValue,\n        };\n\n        restActions.push(takeBreatherAction);\n      }\n\n      rests.actions = restActions;\n\n      this._combineSubcategoryWithCategory(\n        result,\n        this.i18n(\"tokenactionhud.rests\"),\n        rests\n      );\n    }\n\n    return result;\n  }\n\n  _getAttributeAction(tokenId, macroType, attrName, attrVal, attrMax) {\n    let id = attrName.slugify({ replacement: \"_\", strict: true });\n    let labelValue = [macroType, tokenId, id].join(this.delimiter);\n    let attributeAction = { name: attrName, encodedValue: labelValue, id: id };\n    attributeAction.info1 = `${attrVal}/${attrMax}`;\n\n    return attributeAction;\n  }\n\n  /** @private */\n  _buildItemActions(tokenId, macroType, itemList, isPassive = false) {\n    let result = this._produceActionMap(\n      tokenId,\n      itemList,\n      macroType,\n      isPassive\n    );\n\n    result.forEach((i) =>\n      this._addItemInfo(\n        itemList.find((item) => item.data._id === i.id),\n        i\n      )\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addItemInfo(item, itemAction) {\n    itemAction.info1 = this._getQuantityData(item);\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    let quantity = item.data.data.quantity?.value;\n    if (quantity > 1) {\n      result = quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _produceActionMap(tokenId, itemSet, type, isPassive = false) {\n    return itemSet.map((i) => this._produceAction(tokenId, i, type, isPassive));\n  }\n\n  /** @private */\n  _produceAction(tokenId, item, type, isPassive = false) {\n    let encodedValue = [type, tokenId, item.id].join(this.delimiter);\n    let icon;\n    let actions = item.data?.data?.actions;\n    let actionType = item.data?.data?.actionType?.value;\n    if ([\"free\", \"reaction\", \"passive\"].includes(actionType)) {\n      icon = this._getActionIcon(actionType);\n    } else if (actions && !isPassive) {\n      let actionValue = parseInt((actions || {}).value, 10) || 1;\n      icon = this._getActionIcon(actionValue);\n    }\n\n    let img = this._getImage(item);\n    return {\n      name: item.name,\n      encodedValue: encodedValue,\n      id: item.id,\n      img: img,\n      icon: icon,\n    };\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      1: `<span style='font-family: \"Pathfinder2eActions\"'>A</span>`,\n      2: `<span style='font-family: \"Pathfinder2eActions\"'>D</span>`,\n      3: `<span style='font-family: \"Pathfinder2eActions\"'>T</span>`,\n      free: `<span style='font-family: \"Pathfinder2eActions\"'>F</span>`,\n      reaction: `<span style='font-family: \"Pathfinder2eActions\"'>R</span>`,\n      passive: ``,\n    };\n    return img[action];\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBasePf2e extends RollHandler {\n  BLIND_ROLL_MODE = \"blindroll\";\n\n  constructor() {\n    super();\n  }\n\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    settings.Logger.debug(encodedValue);\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let renderable = [\"item\", \"feat\", \"action\", \"lore\", \"ammo\"];\n    if (renderable.includes(macroType) && this.isRenderItem())\n      return this.doRenderItem(tokenId, actionId);\n\n    let currentRollMode;\n    if (this._isBlindRollClick(event)) {\n      currentRollMode = game.settings.get(\"core\", \"rollMode\");\n      await this._updateRollMode(this.BLIND_ROLL_MODE);\n    }\n\n    try {\n      const knownCharacters = [\"character\", \"familiar\", \"npc\"];\n      if (tokenId === \"multi\") {\n        const controlled = canvas.tokens.controlled.filter((t) =>\n          knownCharacters.includes(t.actor?.data.type)\n        );\n        for (let token of controlled) {\n          let idToken = token.data._id;\n          await this._handleMacros(event, macroType, idToken, actionId);\n        }\n      } else {\n        await this._handleMacros(event, macroType, tokenId, actionId);\n      }\n    } catch (e) {\n      throw e;\n    } finally {\n      if (this._isBlindRollClick(event)) {\n        if (currentRollMode) {\n          await this._updateRollMode(currentRollMode);\n        }\n      }\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let charType;\n    if (actor) charType = actor.data.type;\n\n    let sharedActions = [\n      \"ability\",\n      \"spell\",\n      \"item\",\n      \"skill\",\n      \"lore\",\n      \"utility\",\n      \"toggle\",\n      \"strike\",\n    ];\n    if (!sharedActions.includes(macroType)) {\n      switch (charType) {\n        case \"npc\":\n          await this._handleUniqueActionsNpc(\n            macroType,\n            event,\n            tokenId,\n            actor,\n            actionId\n          );\n          break;\n        case \"character\":\n        case \"familiar\":\n          await this._handleUniqueActionsChar(\n            macroType,\n            event,\n            tokenId,\n            actor,\n            actionId\n          );\n          break;\n      }\n    }\n\n    switch (macroType) {\n      case \"ability\":\n        this._rollAbility(event, actor, actionId);\n        break;\n      case \"skill\":\n        await this._rollSkill(event, actor, actionId);\n        break;\n      case \"action\":\n      case \"feat\":\n      case \"item\":\n        this._rollItem(event, actor, actionId);\n        break;\n      case \"spell\":\n        await this._rollSpell(event, tokenId, actor, actionId);\n        break;\n      case \"utility\":\n        this._performUtilityMacro(event, tokenId, actionId);\n        break;\n      case \"toggle\":\n        await this._performToggleMacro(event, tokenId, actionId);\n        break;\n      case \"strike\":\n        this._rollStrikeChar(event, tokenId, actor, actionId);\n        break;\n    }\n  }\n\n  /** @private */\n  _isBlindRollClick(event) {\n    return (\n      this.isCtrl(event) &&\n      !(this.isRightClick(event) || this.isAlt(event) || this.isShift(event))\n    );\n  }\n\n  /** @private */\n  async _handleUniqueActionsChar(macroType, event, tokenId, actor, actionId) {\n    switch (macroType) {\n      case \"save\":\n        this._rollSaveChar(event, actor, actionId);\n        break;\n      case \"attribute\":\n        this._rollAttributeChar(event, actor, actionId);\n        break;\n      case \"spellSlot\":\n        await this._adjustSpellSlot(event, actor, actionId);\n        break;\n      case \"heroPoint\":\n        await this._adjustAttribute(\n          event,\n          actor,\n          \"heroPoints\",\n          \"rank\",\n          actionId\n        );\n        break;\n      case \"doomed\":\n      case \"wounded\":\n      case \"dying\":\n        await this._adjustCondition(event, actor, macroType);\n        break;\n      case \"familiarAttack\":\n        this._rollFamiliarAttack(event, actor);\n        break;\n    }\n  }\n\n  /** @private */\n  async _handleUniqueActionsNpc(macroType, event, tokenId, actor, actionId) {\n    switch (macroType) {\n      case \"save\":\n        this._rollSaveNpc(event, actor, actionId);\n        break;\n      case \"npcStrike\":\n        this._rollStrikeNpc(event, tokenId, actor, actionId);\n        break;\n      case \"attribute\":\n        await this._rollAttributeNpc(event, tokenId, actor, actionId);\n        break;\n    }\n  }\n\n  /** @private */\n  _rollSkill(event, actor, actionId) {\n    let skill = actor.data.data.skills[actionId];\n\n    if (!skill || !skill.roll) {\n      actor.rollSkill(event, actionId);\n    } else {\n      var abilityBased = `${skill.ability}-based`;\n      const options = actor.getRollOptions([\n        \"all\",\n        \"skill-check\",\n        abilityBased,\n        CONFIG.PF2E.skills[actionId] ?? actionId,\n      ]);\n      skill.roll({ event, options });\n    }\n  }\n\n  /** @private */\n  _rollAbility(event, actor, actionId) {\n    actor.rollAbility(event, actionId);\n  }\n\n  /** @private */\n  _rollAttributeChar(event, actor, actionId) {\n    let attribute = actor.data.data.attributes[actionId];\n    if (!attribute) {\n      actor.rollAttribute(event, actionId);\n    } else {\n      const options = actor.getRollOptions([\"all\", attribute]);\n      attribute.roll({ event, options });\n    }\n  }\n\n  /** @private */\n  async _rollAttributeNpc(event, tokenId, actor, actionId) {\n    if (actionId === \"initiative\")\n      await actor.rollInitiative({ createCombatants: true });\n    else actor.rollAttribute(event, actionId);\n  }\n\n  /** @private */\n  _rollSaveChar(event, actor, actionId) {\n    let save = actor.data.data.saves[actionId];\n    if (!save) {\n      actor.rollSave(event, actionId);\n    } else {\n      const options = actor.getRollOptions([\"all\", \"saving-throw\", save]);\n      save.roll({ event, options });\n    }\n  }\n\n  async _adjustSpellSlot(event, actor, actionId) {\n    let actionParts = decodeURIComponent(actionId).split(\">\");\n\n    let spellbookId = actionParts[0];\n    let slot = actionParts[1];\n    let effect = actionParts[2];\n\n    let spellbook = actor.items.get(spellbookId);\n\n    let value, max;\n    if (slot === \"focus\") {\n      value = actor.data.data.resources.focus.value;\n      max = actor.data.data.resources.focus.max;\n    } else {\n      let slots = spellbook.data.data.slots;\n      value = slots[slot].value;\n      max = slots[slot].max;\n    }\n\n    switch (effect) {\n      case \"slotIncrease\":\n        if (value >= max) break;\n\n        value++;\n        break;\n      case \"slotDecrease\":\n        if (value <= 0) break;\n\n        value--;\n    }\n\n    let update;\n    if (slot === \"focus\") {\n      actor.update({ \"data.resources.focus.value\": value });\n    } else {\n      update = [\n        { _id: spellbook.id, data: { slots: { [slot]: { value: value } } } },\n      ];\n      await Item.updateDocuments(update, { parent: actor });\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  /** @private */\n  _rollSaveNpc(event, actor, actionId) {\n    actor.data.data.saves[actionId].roll({ event });\n  }\n\n  async _updateRollMode(rollMode) {\n    await game.settings.set(\"core\", \"rollMode\", rollMode);\n  }\n\n  /** @private */\n  _rollStrikeChar(event, tokenId, actor, actionId) {\n    let actionParts = decodeURIComponent(actionId).split(\">\");\n\n    let strikeName = actionParts[0];\n    let strikeType = actionParts[1];\n\n    if (this.isRenderItem()) {\n      let item = actor.items.find(\n        (i) =>\n          strikeName\n            .toUpperCase()\n            .localeCompare(i.name.toUpperCase(), undefined, {\n              sensitivity: \"base\",\n            }) === 0\n      );\n      if (item) return this.doRenderItem(tokenId, item.data.id);\n    }\n\n    let strike = actor.data.data.actions\n      .filter((a) => a.type === \"strike\")\n      .find((s) => s.name === strikeName);\n\n    let options;\n    switch (strikeType) {\n      case \"damage\":\n        options = actor.getRollOptions([\"all\", \"damage-roll\"]);\n        strike.damage({ event, options });\n        break;\n      case \"critical\":\n        options = actor.getRollOptions([\"all\", \"damage-roll\"]);\n        strike.critical({ event, options });\n        break;\n      default:\n        options = actor.getRollOptions([\"all\", \"attack-roll\"]);\n        strike.variants[strikeType]?.roll({ event, options });\n        this._consumeAmmo(actor, strike);\n        break;\n    }\n  }\n\n  /** @private */\n  _consumeAmmo(actor, strike) {\n    if (!strike.selectedAmmoId) return;\n\n    const ammo = actor.items.get(strike.selectedAmmoId);\n\n    if (ammo.quantity < 1) {\n      ui.notifications.error(\n        game.i18n.localize(\"PF2E.ErrorMessage.NotEnoughAmmo\")\n      );\n      return;\n    }\n\n    ammo.consume();\n  }\n\n  /** @private */\n  _rollStrikeNpc(event, tokenId, actor, actionId) {\n    let actionParts = decodeURIComponent(actionId).split(\">\");\n\n    let strikeId = actionParts[0];\n    let strikeType = actionParts[1];\n\n    if (strikeId === \"plus\") {\n      let item = actor.items.find(\n        (i) =>\n          strikeType\n            .toUpperCase()\n            .localeCompare(i.name.toUpperCase(), undefined, {\n              sensitivity: \"base\",\n            }) === 0\n      );\n\n      if (this.isRenderItem()) return this.doRenderItem(tokenId, item.id);\n\n      item.toChat();\n      return;\n    }\n\n    if (this.isRenderItem()) return this.doRenderItem(tokenId, strikeId);\n\n    let strike = actor.items.get(strikeId);\n\n    switch (strikeType) {\n      case \"damage\":\n        strike.rollNPCDamage(event);\n        break;\n      case \"critical\":\n        strike.rollNPCDamage(event, true);\n        break;\n      case \"0\":\n        strike.rollNPCAttack(event);\n        break;\n      case \"1\":\n        strike.rollNPCAttack(event, 2);\n        break;\n      case \"2\":\n        strike.rollNPCAttack(event, 3);\n        break;\n    }\n  }\n\n  /** @private */\n  _rollItem(event, actor, actionId) {\n    let item = actor.items.get(actionId);\n\n    item.toChat();\n  }\n\n  /** @private */\n  _rollFamiliarAttack(event, actor) {\n    const options = actor.getRollOptions([\"all\", \"attack\"]);\n    actor.data.data.attack.roll(event, options);\n  }\n\n  /** @private */\n  async _rollSpell(event, tokenId, actor, actionId) {\n    let actionParts = decodeURIComponent(actionId).split(\">\");\n\n    let spellbookId = actionParts[0];\n    let level = actionParts[1];\n    let spellId = actionParts[2];\n    let expend = actionParts[3] ?? false;\n\n    if (expend) {\n      await this._expendSpell(actor, spellbookId, level, spellId);\n      return;\n    }\n\n    let printCard = settings.get(\"printSpellCard\");\n    if (this.isRenderItem() && printCard)\n      return this.doRenderItem(tokenId, spellId);\n\n    let spell = actor.items.get(spellId);\n\n    if (printCard) {\n      this._rollHeightenedSpell(actor, spell, level);\n      return;\n    }\n\n    let damageRoll = this.rightClick;\n\n    if (damageRoll) {\n      if (spell.data.data.damage.value) spell.rollSpellDamage(event);\n      else if (this.isRenderItem()) this.doRenderItem(tokenId, spellId);\n      else if (spell.data.data.spellType.value === \"attack\") {\n        spell.rollSpellAttack(event);\n      } else {\n        this._rollHeightenedSpell(actor, spell, level);\n      }\n    } else {\n      if (spell.data.data.spellType.value === \"attack\") {\n        spell.rollSpellAttack(event);\n      } else if (spell.data.data.damage.value) {\n        spell.rollSpellDamage(event);\n      } else {\n        this._rollHeightenedSpell(actor, spell, level);\n      }\n    }\n  }\n\n  async _expendSpell(actor, spellbookId, level, spellId) {\n    let spellbook = actor.items.get(spellbookId);\n    let spellSlot = Object.entries(\n      spellbook.data.data.slots[`slot${level}`].prepared\n    ).find(\n      (s) => s[1].id === spellId && (s[1].expended === false || !s[1].expended)\n    )[0];\n\n    if (spellSlot === -1) return;\n\n    const key = `data.slots.slot${level}.prepared.${spellSlot}`;\n    const options = {\n      _id: spellbookId,\n    };\n    options[key] = {\n      expended: true,\n    };\n\n    let updates = [options];\n\n    await Item.updateDocuments(updates, { parent: actor });\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async _rollHeightenedSpell(actor, item, spellLevel) {\n    let data = item.getChatData(undefined, { spellLvl: spellLevel });\n    let token = canvas.tokens.placeables.find((p) => p.actor?.id === actor.id);\n    let castLevel = parseInt(spellLevel);\n    if (item.data.data.level.value < castLevel) {\n      data.properties.push(\n        `Heightened: +${castLevel - item.data.data.level.value}`\n      );\n      if (!item.data.hasOwnProperty(\"contextualData\"))\n        item.data.contextualData = {};\n      item.data.contextualData.spellLvl = castLevel;\n      data.spellLvl = castLevel;\n    }\n\n    const template = `systems/pf2e/templates/chat/${item.data.type}-card.html`;\n    const templateData = {\n      actor: actor,\n      tokenId: token ? `${token.scene.id}.${token.id}` : null,\n      item: item,\n      data: data,\n    };\n\n    // Basic chat message data\n    const chatData = {\n      user: game.user.id,\n      speaker: {\n        actor: actor.id,\n        token: actor.getActiveTokens()[0]?.id,\n      },\n      flags: {\n        core: {\n          canPopout: true,\n        },\n        pf2e: {\n          origin: { uuid: item.uuid, type: item.type },\n        },\n      },\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n    };\n\n    // Toggle default roll mode\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData.whisper = ChatMessage.getWhisperRecipients(\"GM\").map(\n        (u) => u.id\n      );\n    if (rollMode === \"blindroll\") chatData.blind = true;\n\n    // Render the template\n    chatData.content = await renderTemplate(template, templateData);\n\n    // Create the chat message\n    return ChatMessage.create(chatData, { renderSheet: false });\n  }\n\n  _performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"treatWounds\":\n        this._executeMacroById(\"6duZj0Ygiqv712rq\");\n        break;\n      case \"longRest\":\n        this._executeMacroById(\"0GU2sdy3r2MeC56x\");\n        break;\n      case \"takeABreather\":\n        this._executeMacroById(\"aS6F7PSUlS9JM5jr\");\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n    }\n  }\n\n  async _executeMacroById(id) {\n    let pack = game.packs.get(\"pf2e.pf2e-macros\");\n    pack.getDocument(id).then((e) => e.execute());\n  }\n\n  async _adjustAttribute(event, actor, property, valueName, actionId) {\n    let value = actor.data.data.attributes[property][valueName];\n    let max = actor.data.data.attributes[property][\"max\"];\n\n    if (this.rightClick) {\n      if (value <= 0) return;\n      value--;\n    } else {\n      if (value >= max) return;\n      value++;\n    }\n\n    let update = [\n      {\n        _id: actor.id,\n        data: { attributes: { [property]: { [valueName]: value } } },\n      },\n    ];\n\n    await Actor.updateDocuments(update);\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async _adjustCondition(event, actor, property) {\n    let max = actor.data.data.attributes[property][\"max\"];\n\n    if (this.rightClick) {\n      await actor.decreaseCondition(property);\n    } else {\n      await actor.increaseCondition(property, { max: max });\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async _performToggleMacro(event, tokenId, actionId) {\n    const actor = super.getActor(tokenId);\n\n    const input = actionId.split(\".\");\n\n    if (input?.length !== 2) return;\n\n    const rollName = input[0];\n    const optionName = input[1];\n\n    await actor.toggleRollOption(rollName, optionName);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerPf2e as ActionHandler } from \"../actions/pf2e/pf2e-actions.js\";\nimport { RollHandlerBasePf2e as Core } from \"../rollHandlers/pf2e/pf2e-base.js\";\nimport * as settings from \"../settings/pf2e-settings.js\";\n\nexport class Pf2eSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core PF2E\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"ignorePassiveActions\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.ignorePassiveActions.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.ignorePassiveActions.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"separateTogglesCategory\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.separateTogglesCategory.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.separateTogglesCategory.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"calculateAttackPenalty\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.calculateAttackPenalty.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.calculateAttackPenalty.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"printSpellCard\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.printSpellCard.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.printSpellCard.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"abbreviateSkills\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.abbreviateSkills.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.pf2e.abbreviateSkills.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerSfrpg extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let actionList = this.initializeEmptyActionList();\n\n    if (!token) return actionList;\n\n    let tokenId = token.data._id;\n\n    actionList.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return actionList;\n\n    actionList.actorId = actor.id;\n\n    if (actor.data.type !== \"starship\") {\n      this._buildItemCategory(token, actionList);\n      this._buildSpellsCategory(token, actionList);\n      this._buildFeatsCategory(token, actionList);\n      this._buildSkillCategory(token, actor, actionList);\n      this._buildAbilitiesCategory(token, actionList);\n      this._buildSavesCategory(token, actionList);\n    } else {\n      this._addStarshipWeapons(token, actor, actionList);\n      await this._addCrewActions(token, actor, actionList);\n      this._addShields(token, actor, actionList);\n    }\n\n    settings.Logger.debug(\"SFRPG ActionList:\", actionList);\n\n    if (settings.get(\"showHudTitle\")) actionList.hudTitle = token.data?.name;\n\n    return actionList;\n  }\n\n  _buildItemCategory(token, actionList) {\n    var itemList = token.actor.data.items;\n    let tokenId = token.data._id;\n\n    var itemsCategoryName = this.i18n(\"tokenactionhud.equipment\");\n    var itemsMacroType = \"item\";\n    let itemsCategory = this.initializeEmptyCategory(\"equipment\");\n\n    itemsCategory = this._addSubcategoryByType(\n      this.i18n(\"tokenactionhud.weapons\"),\n      \"weapon\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n    itemsCategory = this._addSubcategoryByType(\n      this.i18n(\"tokenactionhud.consumables\"),\n      \"consumable\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n\n    this._combineCategoryWithList(actionList, itemsCategoryName, itemsCategory);\n  }\n\n  _buildFeatsCategory(token, actionList) {\n    var itemList = token.actor.data.items.filter((item) => item.type == \"feat\");\n    let tokenId = token.data._id;\n\n    var itemsCategoryName = this.i18n(\"tokenactionhud.features\");\n    var itemsMacroType = \"feat\";\n    let itemsCategory = this.initializeEmptyCategory(itemsCategoryName);\n\n    this._addSubcategoryByActionType(\n      this.i18n(\"tokenactionhud.mwa\"),\n      \"mwak\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n    this._addSubcategoryByActionType(\n      this.i18n(\"tokenactionhud.rwa\"),\n      \"rwak\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n    this._addSubcategoryByActionType(\n      this.i18n(\"tokenactionhud.msa\"),\n      \"msak\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n    this._addSubcategoryByActionType(\n      this.i18n(\"tokenactionhud.rsa\"),\n      \"rsak\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n    this._addSubcategoryByActionType(\n      this.i18n(\"tokenactionhud.healing\"),\n      \"heal\",\n      itemsMacroType,\n      itemList,\n      tokenId,\n      itemsCategory\n    );\n\n    if (settings.get(\"showMiscFeats\")) {\n      const miscFeats = itemList.filter(\n        (i) =>\n          ![\"mwak\", \"rwak\", \"msak\", \"rsak\", \"heal\"].includes(i.data.actionType)\n      );\n      this._addSubcategoryByItemList(\n        this.i18n(\"tokenactionhud.misc\"),\n        itemsMacroType,\n        miscFeats,\n        tokenId,\n        itemsCategory\n      );\n    }\n\n    this._combineCategoryWithList(actionList, itemsCategoryName, itemsCategory);\n  }\n\n  _buildSpellsCategory(token, actionList) {\n    var itemList = token.actor.data.items.filter(\n      (item) => item.type == \"spell\"\n    );\n    let tokenId = token.data._id;\n\n    var categoryName = this.i18n(\"tokenactionhud.spellbook\");\n    var macroType = \"spell\";\n    let category = this.initializeEmptyCategory(categoryName);\n\n    var maxLevel = 6;\n\n    for (let level = 0; level < maxLevel; level++) {\n      category = this._addSubcategoryByLevel(\n        `${this.i18n(\"tokenactionhud.level\")} ` + level,\n        level,\n        macroType,\n        itemList,\n        tokenId,\n        category\n      );\n    }\n\n    this._combineCategoryWithList(actionList, categoryName, category);\n  }\n\n  /** @private */\n  _buildSkillCategory(token, actor, actionList) {\n    if (!actor.data.data.skills) return actionList;\n\n    let category = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    const actorSkills = Object.entries(actor.data.data.skills);\n    const coreSkills = CONFIG.SFRPG.skills;\n\n    let skillsActions = actorSkills\n      .map((s) => {\n        let key = s[0];\n        let data = s[1];\n        let name;\n        if (key.startsWith(\"pro\")) {\n          name = coreSkills[\"pro\"];\n          if (!!data.subname) name += ` (${data.subname})`;\n        } else {\n          name = coreSkills[key];\n        }\n\n        let encodedValue = [macroType, token.data._id, key].join(\n          this.delimiter\n        );\n        let icon = this._getClassSkillIcon(data.value);\n        return { name: name, id: key, encodedValue: encodedValue, icon: icon };\n      })\n      .sort((a, b) => {\n        return a.name\n          .toUpperCase()\n          .localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      });\n\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(category, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(actionList, skillsTitle, category);\n  }\n\n  /** @private */\n  _buildAbilitiesCategory(token, actionList) {\n    let category = this.initializeEmptyCategory(\"abilities\");\n    let macroType = \"ability\";\n\n    let abilitiesActions = Object.entries(CONFIG.SFRPG.abilities).map((e) => {\n      let name = e[1];\n      let encodedValue = [macroType, token.data._id, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilitiesCategory = this.initializeEmptySubcategory();\n    abilitiesCategory.actions = abilitiesActions;\n\n    let abilitiesTitle = this.i18n(\"tokenactionhud.abilities\");\n    this._combineSubcategoryWithCategory(\n      category,\n      abilitiesTitle,\n      abilitiesCategory\n    );\n    this._combineCategoryWithList(actionList, abilitiesTitle, category);\n  }\n\n  /** @private */\n  _buildSavesCategory(token, actionList) {\n    let category = this.initializeEmptyCategory(\"saves\");\n    let macroType = \"save\";\n\n    let saveActions = Object.entries(CONFIG.SFRPG.saves).map((e) => {\n      let name = e[1];\n      let encodedValue = [macroType, token.data._id, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let savesCategory = this.initializeEmptySubcategory();\n    savesCategory.actions = saveActions;\n\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    this._combineSubcategoryWithCategory(category, savesTitle, savesCategory);\n    this._combineCategoryWithList(actionList, savesTitle, category);\n  }\n\n  _addSubcategoryByActionType(\n    subCategoryName,\n    actionType,\n    macroType,\n    itemList,\n    tokenId,\n    category\n  ) {\n    let subCategory = this.initializeEmptySubcategory();\n\n    let itemsOfType = itemList.filter(\n      (item) => item.data.data.actionType == actionType\n    );\n    subCategory.actions = itemsOfType.map((item) =>\n      this._buildItemAction(tokenId, macroType, item)\n    );\n\n    this._combineSubcategoryWithCategory(\n      category,\n      subCategoryName,\n      subCategory\n    );\n\n    return category;\n  }\n\n  _addSubcategoryByItemList(\n    subCategoryName,\n    macroType,\n    itemList,\n    tokenId,\n    category\n  ) {\n    let subCategory = this.initializeEmptySubcategory();\n\n    subCategory.actions = itemList.map((item) =>\n      this._buildItemAction(tokenId, macroType, item)\n    );\n\n    this._combineSubcategoryWithCategory(\n      category,\n      subCategoryName,\n      subCategory\n    );\n\n    return category;\n  }\n\n  _addSubcategoryByType(\n    subCategoryName,\n    type,\n    macroType,\n    itemList,\n    tokenId,\n    category\n  ) {\n    let subCategory = this.initializeEmptySubcategory();\n\n    let itemsOfType = itemList.filter((item) => item.type == type);\n    subCategory.actions = itemsOfType.map((item) =>\n      this._buildItemAction(tokenId, macroType, item)\n    );\n\n    this._combineSubcategoryWithCategory(\n      category,\n      subCategoryName,\n      subCategory\n    );\n\n    return category;\n  }\n\n  _addSubcategoryByLevel(\n    subCategoryName,\n    level,\n    macroType,\n    itemList,\n    tokenId,\n    category\n  ) {\n    let subCategory = this.initializeEmptySubcategory();\n\n    let itemsOfType = itemList.filter((item) => item.data.data.level === level);\n    subCategory.actions = itemsOfType.map((item) => {\n      let action = this._buildItemAction(tokenId, macroType, item);\n      if (settings.get(\"showSpellInfo\")) this._addSpellInfo(item, action);\n      return action;\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      subCategoryName,\n      subCategory\n    );\n\n    return category;\n  }\n\n  /** @private */\n  _addSpellInfo(s, spell) {\n    let data = s.data;\n\n    if (data?.sr) spell.info2 += \"Sr\";\n\n    if (data?.dismissible) spell.info2 += \"D\";\n\n    if (data?.concentration) spell.info2 += \"C\";\n\n    if (data?.save?.type) {\n      let type = data.save.type;\n      spell.info3 += type?.charAt(0).toUpperCase() + type?.slice(1);\n    }\n  }\n\n  _buildItemAction(tokenId, macroType, item) {\n    let encodedValue = [macroType, tokenId, item.id].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data.data.activation?.type);\n    let result = {\n      name: item.name,\n      id: item.id,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    result.info1 = this._getQuantityData(item);\n\n    result.info2 = this._getUsesOrUsageData(item);\n\n    result.info3 = this._getCapacityData(item);\n\n    return result;\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    if (item.data.data.quantity > 1) {\n      result = item.data.data.quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getUsesOrUsageData(item) {\n    let result = \"\";\n\n    let uses = item.data.data.uses;\n    if (uses?.max || uses?.value) {\n      result = uses.value ?? \"\";\n\n      if (uses.max > 0) {\n        result += `/${uses.max}`;\n      }\n      return result;\n    }\n\n    let usage = item.data.usage;\n    if (usage?.value) {\n      result = usage.value ?? \"\";\n\n      if (usage.value > 0) {\n        result += `/${usage.per}`;\n      }\n      return result;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getCapacityData(item) {\n    let result = \"\";\n\n    let capacity = item.data.data.capacity;\n    if (!capacity) return result;\n\n    result = capacity.value ?? \"\";\n    if (!!capacity.max) result += `/${capacity.max}`;\n\n    return result;\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  _getClassSkillIcon(level) {\n    const icons = {\n      3: '<i class=\"fas fa-check\"></i>',\n    };\n\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const icon = {\n      //action: `<i class=\"fas fa-fist-raised\"></i>`,\n      move: `<i class=\"fas fa-shoe-prints\"></i>`,\n      swift: `<i class=\"fas fa-bolt\"></i>`,\n      full: `<i class=\"fas fa-circle\"></i>`,\n      other: `<i class=\"far fa-circle\"></i>`,\n      reaction: `<i class=\"fas fa-undo-alt\"></i>`,\n      special: `<i class=\"fas fa-atom\"></i>`,\n      min: `<i class=\"fas fa-hourglass-start\"></i>`,\n      hour: `<i class=\"fas fa-hourglass-half\"></i>`,\n      day: `<i class=\"fas fa-hourglass-end\"></i>`,\n    };\n    return icon[action];\n  }\n\n  /** @private */\n  _addStarshipWeapons(token, actor, actionList) {\n    const itemType = \"starshipWeapon\";\n    const weapons = actor.data.items.filter((i) => i.type === itemType); //.filter(w => w.data.mount.mounted && w.data.mount.activated);\n    if (weapons.length === 0) return;\n\n    const category = this.initializeEmptyCategory(itemType);\n\n    const groupedWeapons = weapons.reduce((grouped, w) => {\n      const groupName = w.data.data.mount.arc;\n      if (!grouped.hasOwnProperty(groupName)) grouped[groupName] = [];\n\n      grouped[groupName].push(w);\n\n      return grouped;\n    }, {});\n\n    const macroType = \"item\";\n    const order = [\"forward\", \"starboard\", \"port\", \"aft\", \"turret\"];\n    order.forEach((mount) => {\n      const groupWeapons = groupedWeapons[mount];\n      if (!groupWeapons) return;\n\n      const subcategory = this.initializeEmptySubcategory(mount);\n\n      groupWeapons.forEach((a) => {\n        const actionName = a.name;\n        const encodedValue = [macroType, token.id, a.id].join(this.delimiter);\n        const action = {\n          name: actionName,\n          encodedValue: encodedValue,\n          id: a.id,\n          img: this._getImage(a),\n        };\n        action.info1 = a.data.data.pcu ?? \"\";\n\n        subcategory.actions.push(action);\n      });\n\n      const capitalMount = mount.charAt(0).toUpperCase() + mount.slice(1);\n      const subName = this.i18n(\n        \"SFRPG.ShipSystems.StarshipArcs.\" + capitalMount\n      );\n      this._combineSubcategoryWithCategory(category, subName, subcategory);\n    });\n\n    var categoryName = this.i18n(\"tokenactionhud.weapons\");\n    this._combineCategoryWithList(actionList, categoryName, category);\n  }\n\n  /** @private */\n  async _addCrewActions(token, actor, actionList) {\n    if (!actor.useStarshipAction) return;\n\n    const macroType = \"crewAction\";\n    const category = this.initializeEmptyCategory(macroType);\n    const actions = await game.packs\n      .get(\"sfrpg.starship-actions\")\n      .getDocuments();\n\n    const groupedActions = actions.reduce((grouped, a) => {\n      const role = a.data.data.role;\n      if (!grouped.hasOwnProperty(role)) grouped[role] = [];\n\n      grouped[role].push(a);\n\n      return grouped;\n    }, {});\n\n    const order = [\n      \"captain\",\n      \"pilot\",\n      \"gunner\",\n      \"engineer\",\n      \"scienceOfficer\",\n      \"chiefMate\",\n      \"magicOfficer\",\n      \"openCrew\",\n      \"minorCrew\",\n    ];\n\n    order.forEach((role) => {\n      const crew = actor.data.data.crew;\n      const crewRole = crew[role];\n      const npcRole = crew.npcData[role];\n\n      if (!this._shouldShowCrewOptions(crew, crewRole, npcRole)) return;\n\n      const groupActions = groupedActions[role];\n      const subcategory = this.initializeEmptySubcategory(role);\n\n      groupActions.forEach((a) => {\n        const actionName = a.name;\n        const encodedValue = [macroType, token.id, a.id].join(this.delimiter);\n        const action = {\n          name: actionName,\n          encodedValue: encodedValue,\n          id: a.id,\n          img: this._getImage(a),\n        };\n        action.info1 = a.data.data.resolvePointCost ?? \"\";\n\n        subcategory.actions.push(action);\n      });\n\n      if (crewRole) {\n        if (crew.useNPCCrew) {\n          subcategory.info1 = crew.npcData[role].numberOfUses;\n        } else {\n          subcategory.info1 =\n            crewRole.limit > 0\n              ? `${crewRole.actors.length}/${crewRole.limit}`\n              : crewRole.actors.length;\n        }\n      }\n\n      const capitalRole = role.charAt(0).toUpperCase() + role.slice(1);\n      const subName = this.i18n(\"SFRPG.StarshipSheet.Role.\" + capitalRole);\n      this._combineSubcategoryWithCategory(category, subName, subcategory);\n    });\n\n    const catName = this.i18n(\"tokenactionhud.crewActions\");\n    this._combineCategoryWithList(actionList, catName, category);\n  }\n\n  _shouldShowCrewOptions(crew, crewRole, npcRole) {\n    if (!crewRole) return true;\n\n    if (crewRole.actors?.length > 0 && !crew.useNPCCrew) return true;\n\n    if (crew.useNPCCrew && npcRole?.numberOfUses > 0) return true;\n\n    return false;\n  }\n\n  /** @private */\n  _addShields(token, actor, actionList) {\n    const macroType = \"shields\";\n    const category = this.initializeEmptySubcategory(macroType);\n\n    const shields = actor.data.data.attributes?.shields;\n    if (!shields) return actionList;\n\n    category.info1 = `${shields.value}/${shields.max}`;\n\n    const sides = [\"forward\", \"starboard\", \"aft\", \"port\"];\n    const amounts = [\n      { name: \"-10\", value: \"-10\" },\n      { name: \"-5\", value: \"-5\" },\n      { name: \"-1\", value: \"-1\" },\n      { name: \"+1\", value: \"+1\" },\n      { name: \"+5\", value: \"+5\" },\n      { name: \"+10\", value: \"+10\" },\n    ];\n\n    const quadrants = actor.data.data.quadrants;\n    sides.forEach((side) => {\n      const currShields = quadrants[side][\"shields\"];\n      if (!currShields) return;\n\n      const subcategory = this.initializeEmptySubcategory(side);\n      subcategory.info1 = `${currShields.value}/${shields.limit}`;\n\n      amounts.forEach((amount) => {\n        const encodedValue = [\n          macroType,\n          token.id,\n          `${side}.${amount.value}`,\n        ].join(this.delimiter);\n        const action = {\n          name: amount.name,\n          encodedValue: encodedValue,\n          id: amount.value,\n          cssClass: \"shrink\",\n        };\n        subcategory.actions.push(action);\n      });\n\n      const capitalSide = side.charAt(0).toUpperCase() + side.slice(1);\n      const subName = this.i18n(\"SFRPG.StarshipSheet.Sides.\" + capitalSide);\n      this._combineSubcategoryWithCategory(category, subName, subcategory);\n    });\n\n    const catName = this.i18n(\"tokenactionhud.shields\");\n    this._combineCategoryWithList(actionList, catName, category);\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseSfrpg extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    switch (macroType) {\n      case \"ability\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"skill\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"save\":\n        this.rollSaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilitySave\":\n        this.rollAbilitySaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilityCheck\":\n        this.rollAbilityCheckMacro(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"spell\":\n      case \"feat\":\n      case \"starshipWeapon\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"shields\":\n        this._handleShields(event, tokenId, actionId);\n        break;\n      case \"crewAction\":\n        this._handleCrewAction(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    super.getActor(tokenId).rollAbility(checkId, { event: event });\n  }\n\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    super.getActor(tokenId).rollAbilityTest(checkId, { event: event });\n  }\n\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    super.getActor(tokenId).rollAbilitySave(checkId, { event: event });\n  }\n\n  rollSaveMacro(event, tokenId, checkId) {\n    super.getActor(tokenId).rollSave(checkId, { event: event });\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    super.getActor(tokenId).rollSkill(checkId, { event: event });\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    let item = actor.items.get(itemId);\n\n    if (this.needsRecharge(item)) {\n      item.rollRecharge();\n      return;\n    }\n\n    if (item.data.type === \"spell\") return actor.useSpell(item);\n\n    return item.roll();\n  }\n\n  needsRecharge(item) {\n    return (\n      item.data.data.recharge &&\n      !item.data.data.recharge.charged &&\n      item.data.data.recharge.value\n    );\n  }\n\n  async _handleShields(event, tokenId, actionId) {\n    const actor = super.getActor(tokenId);\n    let payload = actionId.split(\".\");\n\n    const side = payload[0];\n    let shieldChange = parseInt(payload[1]);\n    if (shieldChange === NaN) return;\n\n    const shields = actor.data.data.attributes.shields;\n    const shield = actor.data.data.quadrants[side][\"shields\"];\n\n    let newValue;\n    if (shieldChange < 0) {\n      newValue = Math.clamped(shield.value + shieldChange, 0, shields.max);\n    } else {\n      newValue = this._calcPossibleIncrease(shields, shield, shieldChange);\n    }\n\n    if (newValue === shield.value) return;\n\n    const update = { data: { quadrants: {} } };\n    update.data.quadrants[side] = { shields: { value: newValue } };\n\n    await actor.update(update);\n  }\n\n  _calcPossibleIncrease(shields, shield, change) {\n    const overallPossible =\n      shields.max - shields.value >= 0 ? shields.max - shields.value : 0;\n    const localPossible =\n      shields.limit - shield.value >= 0 ? shields.limit - shield.value : 0;\n\n    let possibleChange = change;\n\n    if (change > overallPossible) possibleChange = overallPossible;\n\n    if (change > localPossible) possibleChange = localPossible;\n\n    return shield.value + possibleChange;\n  }\n\n  _handleCrewAction(event, tokenId, actionId) {\n    const actor = super.getActor(tokenId);\n    actor.useStarshipAction(actionId);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerSfrpg as ActionHandler } from \"../actions/sfrpg/sfrpg-actions.js\";\nimport { RollHandlerBaseSfrpg as Core } from \"../rollHandlers/sfrpg/sfrpg-base.js\";\nimport * as settings from \"../settings/sfrpg-settings.js\";\n\nexport class SfrpgSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Starfinder\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"showSpellInfo\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sfrpg.showSpellInfo.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sfrpg.showSpellInfo.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"showMiscFeats\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sfrpg.showMiscFeats.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sfrpg.showMiscFeats.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerSw5e extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let items = this._getItemList(actor, tokenId);\n    let powers = this._getPowersList(actor, tokenId);\n    let feats = this._getFeatsList(actor, tokenId);\n    let classFeatures = this._getClassFeaturesList(actor, tokenId);\n    let skills = this._getSkillsList(actor.data.data.skills, tokenId);\n    let utility = this._getUtilityList(actor, tokenId);\n    let conditions;\n    if (settings.get(\"showConditionsCategory\"))\n      conditions = this._getConditionsList(actor, tokenId);\n\n    let itemsTitle = this.i18n(\"tokenactionhud.inventory\");\n    let powersTitle = this.i18n(\"tokenactionhud.powers\");\n    let featsTitle = this.i18n(\"tokenactionhud.features\");\n    let classFeaturesTitle = this.i18n(\"tokenactionhud.classFeatures\");\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    let conditionsTitle = this.i18n(\"tokenactionhud.conditions\");\n\n    this._combineCategoryWithList(result, itemsTitle, items);\n    this._combineCategoryWithList(result, powersTitle, powers);\n    this._combineCategoryWithList(result, featsTitle, feats);\n    this._combineCategoryWithList(result, classFeaturesTitle, classFeatures);\n    this._combineCategoryWithList(result, skillsTitle, skills);\n\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n    let saves = this._getAbilityList(\n      tokenId,\n      actor.data.data.abilities,\n      \"saves\",\n      savesTitle,\n      \"abilitySave\"\n    );\n    let checks = this._getAbilityList(\n      tokenId,\n      actor.data.data.abilities,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n\n    this._combineCategoryWithList(result, savesTitle, saves);\n    this._combineCategoryWithList(result, checksTitle, checks);\n    this._combineCategoryWithList(result, conditionsTitle, conditions);\n\n    let utilityTitle = this.i18n(\"tokenactionhud.utility\");\n    this._combineCategoryWithList(result, utilityTitle, utility);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId);\n\n    let savesTitle = this.i18n(\"tokenactionhud.saves\");\n    let checksTitle = this.i18n(\"tokenactionhud.checks\");\n    this._addMultiAbilities(list, tokenId, \"saves\", savesTitle, \"abilitySave\");\n    this._addMultiAbilities(\n      list,\n      tokenId,\n      \"checks\",\n      checksTitle,\n      \"abilityCheck\"\n    );\n\n    if (settings.get(\"showConditionsCategory\"))\n      this._addMultiConditions(list, tokenId);\n\n    this._addMultiUtilities(list, tokenId, actors);\n  }\n\n  /** ITEMS **/\n\n  /** @private */\n  _getItemList(actor, tokenId) {\n    let validItems = this._filterLongerActions(\n      actor.data.items.filter((i) => i.data.data.quantity > 0)\n    );\n    let sortedItems = this._sortByItemSort(validItems);\n    let macroType = \"item\";\n\n    let equipped;\n    if (actor.data.type === \"npc\") {\n      equipped = sortedItems.filter(\n        (i) =>\n          i.type !== \"consumable\" && i.type !== \"power\" && i.type !== \"feat\"\n      );\n    } else {\n      equipped = sortedItems.filter(\n        (i) => i.type !== \"consumable\" && i.data.data.equipped\n      );\n    }\n    let activeEquipped = this._getActiveEquipment(equipped);\n\n    let weapons = activeEquipped.filter((i) => i.type == \"weapon\");\n    let weaponActions = weapons.map((w) =>\n      this._buildItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = activeEquipped.filter((i) => i.type == \"equipment\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildItem(tokenId, actor, macroType, e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let other = activeEquipped.filter(\n      (i) => i.type != \"weapon\" && i.type != \"equipment\"\n    );\n    let otherActions = other.map((o) =>\n      this._buildItem(tokenId, actor, macroType, o)\n    );\n    let otherCat = this.initializeEmptySubcategory();\n    otherCat.actions = otherActions;\n\n    let allConsumables = sortedItems.filter((i) => i.type == \"consumable\");\n\n    let expendedFiltered = this._filterExpendedItems(allConsumables);\n    let consumable = expendedFiltered.filter(\n      (c) =>\n        (c.data.uses?.value && c.data.uses?.value >= 0) ||\n        (c.data.uses?.max && c.data.uses?.max >= 0)\n    );\n    let consumableActions = consumable.map((c) =>\n      this._buildItem(tokenId, actor, macroType, c)\n    );\n    let consumablesCat = this.initializeEmptySubcategory();\n    consumablesCat.actions = consumableActions;\n\n    let inconsumable = allConsumables.filter(\n      (c) =>\n        !(c.data.uses?.max || c.data.uses?.value) &&\n        c.data.consumableType != \"ammo\"\n    );\n    let incomsumableActions = inconsumable.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let inconsumablesCat = this.initializeEmptySubcategory();\n    inconsumablesCat.actions = incomsumableActions;\n\n    let tools = validItems.filter((t) => t.type === \"tool\");\n    let toolsActions = tools.map((i) =>\n      this._buildItem(tokenId, actor, macroType, i)\n    );\n    let toolsCat = this.initializeEmptySubcategory();\n    toolsCat.actions = toolsActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n    let otherTitle = this.i18n(\"tokenactionhud.other\");\n    let consumablesTitle = this.i18n(\"tokenactionhud.consumables\");\n    let incomsumablesTitle = this.i18n(\"tokenactionhud.inconsumables\");\n    let toolsTitle = this.i18n(\"tokenactionhud.tools\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n    this._combineSubcategoryWithCategory(result, otherTitle, otherCat);\n    this._combineSubcategoryWithCategory(\n      result,\n      consumablesTitle,\n      consumablesCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      incomsumablesTitle,\n      inconsumablesCat\n    );\n    this._combineSubcategoryWithCategory(result, toolsTitle, toolsCat);\n\n    return result;\n  }\n\n  /** @private */\n  _getActiveEquipment(equipment) {\n    const activationTypes = Object.keys(\n      game.sw5e.config.abilityActivationTypes\n    );\n\n    let activeEquipment = equipment.filter((e) => {\n      if (!e.data.data.activation) return false;\n\n      return activationTypes.includes(e.data.data.activation.type);\n    });\n\n    return activeEquipment;\n  }\n\n  /** SPELLS **/\n\n  /** @private */\n  _getPowersList(actor, tokenId) {\n    let validPowers = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type === \"power\")\n    );\n    validPowers = this._filterExpendedItems(validPowers);\n\n    let powersSorted = this._sortPowersByLevel(validPowers);\n    let powers = this._categorisePowers(actor, tokenId, powersSorted);\n\n    return powers;\n  }\n\n  /** @private */\n  _sortPowersByLevel(powers) {\n    let result = Object.values(powers);\n\n    result.sort((a, b) => {\n      if (a.data.level === b.data.level)\n        return a.name\n          .toUpperCase()\n          .localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      return a.data.level - b.data.level;\n    });\n\n    return result;\n  }\n\n  /** @private */\n  _categorisePowers(actor, tokenId, powers) {\n    const powerSubcategory = this.initializeEmptySubcategory();\n    const book = this.initializeEmptySubcategory();\n    const macroType = \"power\";\n\n    // Reverse sort spells by level\n    const powerSlotInfo = Object.entries(actor.data.data.powers).sort(\n      (a, b) => {\n        return b[0]\n          .toUpperCase()\n          .localeCompare(a[0].toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      }\n    );\n\n    // Go through spells and if higher available slots exist, mark spell slots available at lower levels.\n    var slotsAvailable = false;\n    powerSlotInfo.forEach((s) => {\n      if (s[0].startsWith(\"power\")) {\n        if (!slotsAvailable && s[1].max > 0 && s[1].value > 0)\n          slotsAvailable = true;\n        s[1].slotsAvailable = slotsAvailable;\n      } else {\n        if (!s[1]) s[1] = {};\n\n        s[1].slotsAvailable = !s[1].max || s[1].value > 0;\n      }\n    });\n\n    let dispose = powers.reduce(\n      function (dispose, p) {\n        let prep = p.data.data.preparation.mode;\n        const prepType = game.sw5e.config.powerPreparationModes[prep];\n\n        var level = p.data.level;\n        let alwaysPrepped =\n          prep === \"pact\" || prep === \"atwill\" || prep === \"innate\";\n\n        var max, slots, levelName, levelKey, levelInfo;\n\n        if (alwaysPrepped) {\n          levelKey = prep;\n        } else {\n          levelKey = \"power\" + level;\n          levelName = level\n            ? `${this.i18n(\"tokenactionhud.level\")} ${level}`\n            : this.i18n(\"tokenactionhud.cantrips\");\n        }\n\n        levelInfo = powerSlotInfo.find((lvl) => lvl[0] === levelKey)?.[1];\n        slots = levelInfo?.value;\n        max = levelInfo?.max;\n\n        let ignoreSlotsAvailable = settings.get(\"showEmptyItems\");\n        if (max && !(levelInfo?.slotsAvailable || ignoreSlotsAvailable)) return;\n\n        let power = this._buildItem(tokenId, actor, macroType, p);\n\n        this._addPowerInfo(p, power);\n\n        // Initialise subcategory if non-existant.\n        let subcategory;\n        if (alwaysPrepped) {\n          subcategory = powerSubcategory.subcategories.find(\n            (cat) => cat.name === prepType\n          );\n        } else {\n          subcategory = book.subcategories.find(\n            (cat) => cat.name === levelName\n          );\n        }\n\n        if (!subcategory) {\n          subcategory = this.initializeEmptySubcategory();\n          if (max > 0) {\n            subcategory.info1 = `${slots}/${max}`;\n          }\n        }\n\n        subcategory.actions.push(power);\n\n        if (\n          alwaysPrepped &&\n          powerSubcategory.subcategories.indexOf(subcategory) < 0\n        )\n          this._combineSubcategoryWithCategory(\n            powerSubcategory,\n            prepType,\n            subcategory\n          );\n        else if (!alwaysPrepped && book.subcategories.indexOf(subcategory) < 0)\n          this._combineSubcategoryWithCategory(book, levelName, subcategory);\n\n        return dispose;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"powers\");\n\n    let powersTitle = this.i18n(\"tokenactionhud.powers\");\n    let booksTitle = this.i18n(\"tokenactionhud.books\");\n\n    this._combineSubcategoryWithCategory(result, powersTitle, powerSubcategory);\n    this._combineSubcategoryWithCategory(result, booksTitle, book);\n\n    return result;\n  }\n\n  /** @private */\n  _addPowerInfo(s, power) {\n    let c = s.data.components;\n\n    if (c?.concentration)\n      power.info2 += this.i18n(\"SW5E.Concentration\").charAt(0).toUpperCase();\n  }\n\n  /** FEATS **/\n\n  /** @private */\n  _getFeatsList(actor, tokenId) {\n    let validFeats = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type == \"feat\")\n    );\n    let sortedFeats = this._sortByItemSort(validFeats);\n    let feats = this._categoriseFeats(tokenId, actor, sortedFeats);\n\n    return feats;\n  }\n\n  /** @private */\n  _getClassFeaturesList(actor, tokenId) {\n    let validClassfeature = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type == \"classfeature\")\n    );\n    let sortedClassfeature = this._sortByItemSort(validClassfeature);\n    let classfeatures = this._categoriseFeats(\n      tokenId,\n      actor,\n      sortedClassfeature\n    );\n\n    return classfeatures;\n  }\n\n  /** @private */\n  _categoriseFeats(tokenId, actor, feats) {\n    let active = this.initializeEmptySubcategory();\n    let passive = this.initializeEmptySubcategory();\n    let lair = this.initializeEmptySubcategory();\n    let legendary = this.initializeEmptySubcategory();\n\n    let dispose = feats.reduce(\n      function (dispose, f) {\n        const activationType = f.data.data.activation.type;\n        const macroType = \"feat\";\n\n        let feat = this._buildItem(tokenId, actor, macroType, f);\n\n        if (!activationType || activationType === \"\") {\n          passive.actions.push(feat);\n          return;\n        }\n\n        if (activationType == \"lair\") {\n          lair.actions.push(feat);\n          return;\n        }\n\n        if (activationType == \"legendary\") {\n          legendary.actions.push(feat);\n          return;\n        }\n\n        active.actions.push(feat);\n\n        return;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"feats\");\n\n    let activeTitle = this.i18n(\"tokenactionhud.active\");\n    let legendaryTitle = this.i18n(\"tokenactionhud.legendary\");\n    let lairTitle = this.i18n(\"tokenactionhud.lair\");\n    this._combineSubcategoryWithCategory(result, activeTitle, active);\n    this._combineSubcategoryWithCategory(result, legendaryTitle, legendary);\n    this._combineSubcategoryWithCategory(result, lairTitle, lair);\n\n    if (!settings.get(\"ignorePassiveFeats\")) {\n      let passiveTitle = this.i18n(\"tokenactionhud.passive\");\n      this._combineSubcategoryWithCategory(result, passiveTitle, passive);\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getSkillsList(skills, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(game.sw5e.config.skills).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon = this._getProficiencyIcon(skills[e[0]].value);\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n\n    return result;\n  }\n\n  _addMultiSkills(list, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let macroType = \"skill\";\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let skillsActions = Object.entries(game.sw5e.config.skills).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(list, skillsTitle, result, true);\n  }\n\n  /** @private */\n  _getAbilityList(tokenId, abilities, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(game.sw5e.config.abilities).map((e) => {\n      if (abilities[e[0]].value === 0) return;\n\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon;\n      if (categoryId === \"checks\") icon = \"\";\n      else icon = this._getProficiencyIcon(abilities[e[0]].proficient);\n\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, abilityCategory);\n\n    return result;\n  }\n\n  _addMultiAbilities(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n\n    let abbr = settings.get(\"abbreviateSkills\");\n\n    let actions = Object.entries(game.sw5e.config.abilities).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(cat, categoryName, abilityCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  /** @private */\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let rests = this.initializeEmptySubcategory();\n    let utility = this.initializeEmptySubcategory();\n\n    this._addIntiativeSubcategory(macroType, result, tokenId);\n\n    if (actor.data.type === \"character\") {\n      let shortRestValue = [macroType, tokenId, \"shortRest\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"shortRest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.shortRest\"),\n      });\n      let longRestValue = [macroType, tokenId, \"longRest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"longRest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.longRest\"),\n      });\n\n      if (actor.data.data.attributes.hp.value <= 0) {\n        let deathSaveValue = [macroType, tokenId, \"deathSave\"].join(\n          this.delimiter\n        );\n        let deathSaveAction = {\n          id: \"deathSave\",\n          encodedValue: deathSaveValue,\n          name: this.i18n(\"tokenactionhud.deathSave\"),\n        };\n        utility.actions.push(deathSaveAction);\n      }\n\n      let inspirationValue = [macroType, tokenId, \"inspiration\"].join(\n        this.delimiter\n      );\n      let inspirationAction = {\n        id: \"inspiration\",\n        encodedValue: inspirationValue,\n        name: this.i18n(\"tokenactionhud.inspiration\"),\n      };\n      inspirationAction.cssClass = actor.data.data.attributes?.inspiration\n        ? \"active\"\n        : \"\";\n      utility.actions.push(inspirationAction);\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    this._addMultiIntiativeSubcategory(macroType, tokenId, category);\n\n    let rests = this.initializeEmptySubcategory();\n    let utility = this.initializeEmptySubcategory();\n\n    if (actors.every((a) => a.data.type === \"character\")) {\n      let shortRestValue = [macroType, tokenId, \"shortRest\"].join(\n        this.delimiter\n      );\n      rests.actions.push({\n        id: \"shortRest\",\n        encodedValue: shortRestValue,\n        name: this.i18n(\"tokenactionhud.shortRest\"),\n      });\n      let longRestValue = [macroType, tokenId, \"longRest\"].join(this.delimiter);\n      rests.actions.push({\n        id: \"longRest\",\n        encodedValue: longRestValue,\n        name: this.i18n(\"tokenactionhud.longRest\"),\n      });\n\n      let inspirationValue = [macroType, tokenId, \"inspiration\"].join(\n        this.delimiter\n      );\n      let inspirationAction = {\n        id: \"inspiration\",\n        encodedValue: inspirationValue,\n        name: this.i18n(\"tokenactionhud.inspiration\"),\n      };\n      inspirationAction.cssClass = actors.every(\n        (a) => a.data.data.attributes?.inspiration\n      )\n        ? \"active\"\n        : \"\";\n      utility.actions.push(inspirationAction);\n    }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.rests\"),\n      rests\n    );\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      category\n    );\n  }\n\n  /** CONDITIONS **/\n\n  /** @private */\n  _getConditionsList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"conditions\");\n    this._addConditionsSubcategory(actor, tokenId, result);\n    return result;\n  }\n\n  /** @private */\n  _addConditionsSubcategory(actor, tokenId, category) {\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const cssClass = Object.entries(actor.effects).some(\n        (k, e) => e.data.flags.core?.statusId === c.id\n      )\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.conditions\"),\n      conditions\n    );\n  }\n\n  /** @private */\n  _addIntiativeSubcategory(macroType, category, tokenId) {\n    const combat = game.combat;\n    let combatant, currentInitiative;\n    if (combat) {\n      combatant = combat.combatants.find((c) => c.tokenId === tokenId);\n      currentInitiative = combatant?.initiative;\n    }\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    if (currentInitiative) initiativeAction.info1 = currentInitiative;\n    initiativeAction.cssClass = currentInitiative ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiIntiativeSubcategory(macroType, tokenId, category) {\n    const combat = game.combat;\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    let isActive;\n    if (combat) {\n      let tokenIds = canvas.tokens.controlled.map((t) => t.id);\n      let tokenCombatants = tokenIds.map((id) =>\n        combat.combatants.find((c) => c.tokenId === id)\n      );\n      isActive = tokenCombatants.every((c) => !!c?.initiative);\n    }\n\n    initiativeAction.cssClass = isActive ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiConditions(list, tokenId) {\n    const category = this.initializeEmptyCategory(\"conditions\");\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n    const actors = canvas.tokens.controlled\n      .filter((t) => !!t.actor)\n      .map((t) => t.actor);\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const cssClass = actors.every((actor) =>\n        Object.entries(actor.effects).some(\n          (e) => e.data.flags.core?.statusId === c.id\n        )\n      )\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    const conName = this.i18n(\"tokenactionhud.conditions\");\n    this._combineSubcategoryWithCategory(category, conName, conditions);\n    this._combineCategoryWithList(list, conName, category);\n  }\n  /** END CONDITIONS **/\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    let encodedValue = [macroType, tokenId, item._id].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data?.activation?.type);\n    let result = {\n      name: item.name,\n      id: item._id,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    if (\n      item.data.recharge &&\n      !item.data.recharge.charged &&\n      item.data.recharge.value\n    ) {\n      result.name += ` (${this.i18n(\"tokenactionhud.recharge\")})`;\n    }\n\n    result.info1 = this._getQuantityData(item);\n\n    result.info2 = this._getUsesData(item);\n\n    result.info3 = this._getConsumeData(item, actor);\n\n    return result;\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    if (item.data.quantity > 1) {\n      result = item.data.quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getUsesData(item) {\n    let result = \"\";\n\n    let uses = item.data.uses;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _getConsumeData(item, actor) {\n    let result = \"\";\n\n    let consumeType = item.data.consume?.type;\n    if (consumeType && consumeType !== \"\") {\n      let consumeId = item.data.consume.target;\n      let parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\n      if (consumeType === \"attribute\") {\n        let target = getProperty(actor, `data.data.${consumeId}`);\n\n        if (target) {\n          let parent = getProperty(actor, `data.data.${parentId}`);\n          result = target;\n          if (!!parent.max) result += `/${parent.max}`;\n        }\n      }\n\n      if (consumeType === \"charges\") {\n        let consumeId = item.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let uses = target?.data.data.uses;\n        if (uses?.value) {\n          result = uses.value;\n          if (uses.max) result += `/${uses.max}`;\n        }\n      }\n\n      if (!(consumeType === \"attribute\" || consumeType === \"charges\")) {\n        let consumeId = item.data.consume.target;\n        let target = actor.items.get(consumeId);\n        let quantity = target?.data.data.quantity;\n        if (quantity) {\n          result = quantity;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _filterLongerActions(items) {\n    var result;\n\n    if (settings.get(\"hideLongerActions\"))\n      result = items.filter(\n        (i) =>\n          !i.data.activation ||\n          !(\n            i.data.activation.type === \"minute\" ||\n            i.data.activation.type === \"hour\" ||\n            i.data.activation.type === \"day\"\n          )\n      );\n\n    return result ? result : items;\n  }\n\n  /** @private */\n  _filterNonpreparedSpells(spells) {\n    const nonpreparableSpells = Object.keys(\n      game.sw5e.config.powerPreparationModes\n    ).filter((p) => p != \"prepared\");\n    let result = spells.filter(\n      (i) =>\n        i.data.preparation.prepared ||\n        nonpreparableSpells.includes(i.data.preparation.mode) ||\n        i.data.level === 0\n    );\n\n    return result;\n  }\n\n  _filterExpendedItems(items) {\n    if (settings.get(\"showEmptyItems\")) return items;\n\n    return items.filter((i) => {\n      let uses = i.data.uses;\n      // Assume something with no uses is unlimited in its use.\n      if (!uses) return true;\n\n      // if it has a max but value is 0, don't return.\n      if (uses.max > 0 && !uses.value) return false;\n\n      return true;\n    });\n  }\n\n  /** @private */\n  _sortByItemSort(items) {\n    let result = Object.values(items);\n\n    result.sort((a, b) => a.sort - b.sort);\n\n    return result;\n  }\n\n  /** @private */\n  _getProficiencyIcon(level) {\n    const icons = {\n      0: \"\",\n      0.5: '<i class=\"fas fa-adjust\"></i>',\n      1: '<i class=\"fas fa-check\"></i>',\n      2: '<i class=\"fas fa-check-double\"></i>',\n    };\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      //action: `<i class=\"fas fa-fist-raised\"></i>`,\n      bonus: `<i class=\"fas fa-plus\"></i>`,\n      crew: `<i class=\"fas fa-users\"></i>`,\n      legendary: `<i class=\"fas fa-jedi\"></i>`,\n      reaction: `<i class=\"fas fa-bolt\"></i>`,\n      //none: `<i class=\"far fa-circle\"></i>`,\n      special: `<i class=\"fas fa-star\"></i>`,\n      lair: `<i class=\"fas fa-home\"></i>`,\n      minute: `<i class=\"fas fa-hourglass-start\"></i>`,\n      hour: `<i class=\"fas fa-hourglass-half\"></i>`,\n      day: `<i class=\"fas fa-hourglass-end\"></i>`,\n    };\n    return img[action];\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseSw5e extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      canvas.tokens.controlled.forEach((t) => {\n        let idToken = t.data._id;\n        this._handleMacros(event, macroType, idToken, actionId);\n      });\n    } else {\n      this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    switch (macroType) {\n      case \"ability\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"skill\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"abilitySave\":\n        this.rollAbilitySaveMacro(event, tokenId, actionId);\n        break;\n      case \"abilityCheck\":\n        this.rollAbilityCheckMacro(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"power\":\n      case \"feat\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"classFeatures\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      case \"utility\":\n        await this.performUtilityMacro(event, tokenId, actionId);\n        break;\n      case \"effect\":\n        await this.toggleEffect(event, tokenId, actionId);\n        break;\n      case \"condition\":\n        await this.toggleCondition(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbility(checkId, { event: event });\n  }\n\n  rollAbilityCheckMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilityTest(checkId, { event: event });\n  }\n\n  rollAbilitySaveMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAbilitySave(checkId, { event: event });\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollSkill(checkId, { event: event });\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    let item = super.getItem(actor, itemId);\n\n    if (this.needsRecharge(item)) {\n      item.rollRecharge();\n      return;\n    }\n\n    if (item.data.type === \"power\") return actor.usePower(item);\n\n    return item.roll({ event });\n  }\n\n  needsRecharge(item) {\n    return (\n      item.data.data.recharge &&\n      !item.data.data.recharge.charged &&\n      item.data.data.recharge.value\n    );\n  }\n\n  async performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"shortRest\":\n        actor.shortRest();\n        break;\n      case \"longRest\":\n        actor.longRest();\n        break;\n      case \"inspiration\":\n        let update = !actor.data.data.attributes.inspiration;\n        actor.update({ \"data.attributes.inspiration\": update });\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n      case \"deathSave\":\n        actor.rollDeathSave({ event });\n        break;\n      case \"initiative\":\n        await this.performInitiativeMacro(tokenId);\n        break;\n    }\n  }\n\n  async performInitiativeMacro(tokenId) {\n    let actor = super.getActor(tokenId);\n\n    await actor.rollInitiative({ createCombatants: true });\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleCondition(event, tokenId, effectId) {\n    const token = super.getToken(tokenId);\n    const isRightClick = this.isRightClick(event);\n    if (\n      effectId.includes(\"combat-utility-belt.\") &&\n      game.cub &&\n      !isRightClick\n    ) {\n      const cubCondition = this.findCondition(effectId)?.label;\n      if (!cubCondition) return;\n\n      game.cub.hasCondition(cubCondition, token)\n        ? await game.cub.removeCondition(cubCondition, token)\n        : await game.cub.addCondition(cubCondition, token);\n    } else {\n      const condition = this.findCondition(effectId);\n      if (!condition) return;\n\n      isRightClick\n        ? await token.toggleOverlay(condition)\n        : await token.toggleEffect(condition);\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleEffect(event, tokenId, effectId) {\n    const actor = super.getActor(tokenId);\n    const effect = actor.effects.entries.find((e) => e.id === effectId);\n\n    if (!effect) return;\n\n    const statusId = effect.data.flags.core?.statusId;\n    if (statusId) {\n      await this.toggleCondition(event, tokenId, statusId);\n      return;\n    }\n\n    await effect.update({ disabled: !effect.data.disabled });\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  findCondition(id) {\n    return CONFIG.statusEffects.find((effect) => effect.id === id);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"ignorePassiveFeats\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.ignorePassiveFeats.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.ignorePassiveFeats.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"hideLongerActions\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.hideLongerActions.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.hideLongerActions.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"abbreviateSkills\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.abbreviateSkills.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.abbreviateSkills.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"showEmptyItems\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.showEmptyItems.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.sw5e.showEmptyItems.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateSettings(value);\n    },\n  });\n\n  game.settings.register(app, \"showConditionsCategory\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showConditionsCategory.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.dnd5e.showConditionsCategory.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerSw5e as ActionHandler } from \"../actions/sw5e/sw5e-actions.js\";\nimport { RollHandlerBaseSw5e as Core } from \"../rollHandlers/sw5e/sw5e-base.js\";\nimport * as settings from \"../settings/sw5e-settings.js\";\n\nexport class Sw5eSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Star Wars 5e\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerWfrp extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n    this.filterManager.createOrGetFilter(\"skills\");\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor.id;\n\n    let weapons = this._getItemsList(actor, tokenId, \"weapon\");\n    let characteristics = this._getCharacteristics(actor, tokenId);\n    let skills = this._getSkills(actor, tokenId);\n\n    let magic = this._getSpells(actor, tokenId);\n    let prayers = this._getPrayers(actor, tokenId);\n    let talents = this._getTalents(actor, tokenId);\n    let traits = this._getTraits(actor, tokenId);\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      weapons\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.characteristics\"),\n      characteristics\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      skills\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.magic\"),\n      magic\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.religion\"),\n      prayers\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.talents\"),\n      talents\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.traits\"),\n      traits\n    );\n\n    this._setFilterSuggestions(actor);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _getItemsList(actor, tokenId, type) {\n    let types = type + \"s\";\n    let result = this.initializeEmptyCategory(\"items\");\n\n    let basicSubcategory = this._getBasicActions(actor, tokenId);\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.basic\"),\n      basicSubcategory\n    );\n\n    let subcategory = this.initializeEmptySubcategory();\n    let items = actor.getItemTypes(type);\n    let filtered =\n      actor.data.type === \"character\"\n        ? items.filter((i) => i.data.data.equipped)\n        : items;\n    subcategory.actions = this._produceMap(tokenId, filtered, type);\n\n    this._combineSubcategoryWithCategory(result, types, subcategory);\n\n    return result;\n  }\n\n  _getBasicActions(actor, tokenId) {\n    let basicActions = this.initializeEmptySubcategory();\n\n    let unarmed = [\"unarmed\", tokenId, \"unarmed\"].join(this.delimiter);\n    const unarmedAction = {\n      id: \"unarmed\",\n      name: this.i18n(\"tokenactionhud.unarmed\"),\n      encodedValue: unarmed,\n    };\n    basicActions.actions.push(unarmedAction);\n\n    let stompValue = [\"stomp\", tokenId, \"stomp\"].join(this.delimiter);\n    const stompAction = {\n      id: \"stomp\",\n      name: this.i18n(\"tokenactionhud.stomp\"),\n      encodedValue: stompValue,\n    };\n    basicActions.actions.push(stompAction);\n\n    let improvisedValue = [\"improvise\", tokenId, \"improvise\"].join(\n      this.delimiter\n    );\n    const improvisedAction = {\n      id: \"improvise\",\n      name: this.i18n(\"tokenactionhud.improvisedWeapon\"),\n      encodedValue: improvisedValue,\n    };\n    basicActions.actions.push(improvisedAction);\n\n    let dodgeValue = [\"dodge\", tokenId, \"dodge\"].join(this.delimiter);\n    const dodgeAction = {\n      id: \"dodge\",\n      name: this.i18n(\"tokenactionhud.dodge\"),\n      encodedValue: dodgeValue,\n    };\n    basicActions.actions.push(dodgeAction);\n\n    return basicActions;\n  }\n\n  _getCharacteristics(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"characteristics\");\n    let macroType = \"characteristic\";\n\n    let characteristics = Object.entries(actor.characteristics);\n    let characteristicsCategory = this.initializeEmptySubcategory();\n    characteristicsCategory.actions = characteristics.map((c) => {\n      let encodedValue = [macroType, tokenId, c[0]].join(this.delimiter);\n      return {\n        name: this.i18n(c[1].abrev),\n        encodedValue: encodedValue,\n        id: c[0],\n      };\n    });\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.characteristics\"),\n      characteristicsCategory\n    );\n\n    return result;\n  }\n\n  _getSkills(actor, tokenId) {\n    let categoryId = \"skills\";\n    let macroType = \"skill\";\n\n    let result = this.initializeEmptyCategory(categoryId);\n    let skills = actor.getItemTypes(\"skill\").filter((i) => i.id);\n\n    result.choices = skills.length;\n\n    let transMelee = game.i18n.localize(\"tokenactionhud.wfrp.meleeSkillPrefix\");\n    let transRanged = game.i18n.localize(\n      \"tokenactionhud.wfrp.rangedSkillPrefix\"\n    );\n\n    let meleeSkills = skills.filter((s) => s.data.name.startsWith(transMelee));\n    let meleeId = `${categoryId}_melee`;\n    this._setFilterSuggestions(meleeId, meleeSkills);\n    let meleeCat = this.initializeEmptySubcategory(meleeId);\n    meleeCat.canFilter = meleeSkills.length > 0 ? true : false;\n    let filteredMeleeSkills = this._filterElements(meleeId, meleeSkills);\n    meleeCat.actions = this._produceMap(\n      tokenId,\n      filteredMeleeSkills,\n      macroType\n    );\n\n    let rangedSkills = skills.filter((s) =>\n      s.data.name.startsWith(transRanged)\n    );\n    let rangedId = `${categoryId}_ranged`;\n    this._setFilterSuggestions(rangedId, rangedSkills);\n    let rangedCat = this.initializeEmptySubcategory(rangedId);\n    rangedCat.canFilter = rangedSkills.length > 0 ? true : false;\n    let filteredRangedSkills = this._filterElements(rangedId, rangedSkills);\n    rangedCat.actions = this._produceMap(\n      tokenId,\n      filteredRangedSkills,\n      macroType\n    );\n\n    let basicSkills = skills.filter(\n      (s) =>\n        !(\n          s.data.name.startsWith(transMelee) ||\n          s.data.name.startsWith(transRanged)\n        ) && s.data.data.grouped.value !== \"isSpec\"\n    );\n    let basicId = `${categoryId}_basic`;\n    this._setFilterSuggestions(basicId, basicSkills);\n    let basicSkillsCat = this.initializeEmptySubcategory(basicId);\n    let filteredBasicSkills = this._filterElements(basicId, basicSkills);\n    basicSkillsCat.canFilter = basicSkills.length > 0 ? true : false;\n    basicSkillsCat.actions = this._produceMap(\n      tokenId,\n      filteredBasicSkills,\n      macroType\n    );\n\n    let advancedSkills = skills.filter(\n      (s) =>\n        !(\n          s.data.name.startsWith(transMelee) ||\n          s.data.name.startsWith(transRanged)\n        ) && s.data.data.grouped.value === \"isSpec\"\n    );\n    let advancedId = `${categoryId}_advanced`;\n    this._setFilterSuggestions(advancedId, advancedSkills);\n    let advancedSkillsCat = this.initializeEmptySubcategory(advancedId);\n    advancedSkillsCat.canFilter = advancedSkills.length > 0 ? true : false;\n    let filteredAdvancedSkills = this._filterElements(\n      advancedId,\n      advancedSkills\n    );\n    advancedSkillsCat.actions = this._produceMap(\n      tokenId,\n      filteredAdvancedSkills,\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.melee\"),\n      meleeCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.ranged\"),\n      rangedCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.basic\"),\n      basicSkillsCat\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.advanced\"),\n      advancedSkillsCat\n    );\n\n    return result;\n  }\n\n  /** @override */\n  _setFilterSuggestions(id, items) {\n    let suggestions = items?.map((s) => {\n      return { id: s.id, value: s.name };\n    });\n    if (suggestions?.length > 0)\n      this.filterManager.setSuggestions(id, suggestions);\n  }\n\n  _filterElements(categoryId, skills) {\n    let filteredNames = this.filterManager.getFilteredNames(categoryId);\n    let result = skills.filter((s) => !!s);\n    if (filteredNames.length > 0) {\n      if (this.filterManager.isBlocklist(categoryId)) {\n        result = skills.filter((s) => !filteredNames.includes(s.name));\n      } else {\n        result = skills.filter((s) => filteredNames.includes(s.name));\n      }\n    }\n\n    return result;\n  }\n\n  _getSpells(actor, tokenId) {\n    let macroType = \"spell\";\n    let result = this.initializeEmptyCategory(\"spells\");\n\n    let spells = actor.getItemTypes(\"spell\");\n\n    let petties = spells.filter((i) => i.data.data.lore.value === \"petty\");\n    let pettyCategory = this.initializeEmptySubcategory();\n    pettyCategory.actions = this._produceMap(tokenId, petties, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.petty\"),\n      pettyCategory\n    );\n\n    let lores = spells.filter((i) => i.data.data.lore.value !== \"petty\");\n    let loresCategorised = lores.reduce((output, spell) => {\n      let loreType = spell.data.data.lore.value;\n      if (!output.hasOwnProperty(loreType)) {\n        output[loreType] = [];\n      }\n\n      output[loreType].push(spell);\n\n      return output;\n    }, {});\n\n    Object.entries(loresCategorised).forEach((loreCategory) => {\n      let subcategory = this.initializeEmptySubcategory();\n      subcategory.actions = this._produceMap(\n        tokenId,\n        loreCategory[1],\n        macroType\n      );\n      this._combineSubcategoryWithCategory(\n        result,\n        loreCategory[0],\n        subcategory\n      );\n    });\n\n    return result;\n  }\n\n  _getPrayers(actor, tokenId) {\n    let macroType = \"prayer\";\n    let result = this.initializeEmptyCategory(\"prayers\");\n\n    let prayers = actor.getItemTypes(\"prayer\");\n\n    let blessings = prayers.filter((i) => i.type.value === \"blessing\");\n    let blessingCategory = this.initializeEmptySubcategory();\n    blessingCategory.actions = this._produceMap(tokenId, blessings, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.blessing\"),\n      blessingCategory\n    );\n\n    let miracles = prayers.filter((i) => i.type.value !== \"blessing\");\n    let miraclesCategorised = miracles.reduce((output, prayer) => {\n      let miracleType = prayer.data.data.type.value;\n      if (!output.hasOwnProperty(miracleType)) {\n        output[miracleType] = [];\n      }\n\n      output[miracleType].push(prayer);\n\n      return output;\n    }, {});\n\n    Object.entries(miraclesCategorised).forEach((miracleCategory) => {\n      let subcategory = this.initializeEmptySubcategory();\n      subcategory.actions = this._produceMap(\n        tokenId,\n        miracleCategory[1],\n        macroType\n      );\n      this._combineSubcategoryWithCategory(\n        result,\n        miracleCategory[0],\n        subcategory\n      );\n    });\n\n    return result;\n  }\n\n  _getTalents(actor, tokenId) {\n    let macroType = \"talent\";\n    let result = this.initializeEmptyCategory(\"talents\");\n\n    let talents = actor.getItemTypes(\"talent\");\n\n    let rollableTalents = talents.filter((t) => t.rollable?.value);\n    let rollableCategory = this.initializeEmptySubcategory();\n    rollableCategory.actions = this._produceMap(\n      tokenId,\n      rollableTalents,\n      macroType\n    );\n\n    let unrollableTalents = talents.filter((t) => !t.rollable?.value);\n    let unrollableCategory = this.initializeEmptySubcategory();\n    unrollableCategory.actions = this._produceMap(\n      tokenId,\n      unrollableTalents,\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rollable\"),\n      rollableCategory\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.unrollable\"),\n      unrollableCategory\n    );\n\n    return result;\n  }\n\n  _getTraits(actor, tokenId) {\n    let macroType = \"trait\";\n    let result = this.initializeEmptyCategory(\"traits\");\n\n    let traits = actor.getItemTypes(\"trait\").filter((i) => i.included);\n\n    let rollableTraits = traits.filter((t) => t.rollable?.value);\n    let rollableCategory = this.initializeEmptySubcategory();\n    rollableCategory.actions = this._produceMap(\n      tokenId,\n      rollableTraits,\n      macroType\n    );\n\n    let unrollableTraits = traits.filter((t) => !t.rollable?.value);\n    let unrollableCategory = this.initializeEmptySubcategory();\n    unrollableCategory.actions = this._produceMap(\n      tokenId,\n      unrollableTraits,\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.rollable\"),\n      rollableCategory\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.unrollable\"),\n      unrollableCategory\n    );\n\n    return result;\n  }\n\n  _produceMap(tokenId, itemSet, type) {\n    return itemSet.map((i) => {\n      let encodedValue = [type, tokenId, i.id].join(this.delimiter);\n      let img = this._getImage(i);\n      return { name: i.name, encodedValue: encodedValue, id: i.id, img: img };\n    });\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return result?.includes(\"icons/svg/mystery-man.svg\") ||\n      result?.includes(\"systems/wfrp4e/icons/blank.png\")\n      ? \"\"\n      : result;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseWfrp4e extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    let bypassData = { bypass: !!event.shiftKey };\n\n    if (macroType === \"characteristic\")\n      return actor\n        .setupCharacteristic(actionId, bypassData)\n        .then((setupData) => actor.basicTest(setupData));\n\n    if (this.isRenderItem()) return this.doRenderItem(tokenId, actionId);\n\n    let item = actor.items.get(actionId);\n    let itemData;\n\n    if (this.rightClick) return item.postItem();\n\n    switch (macroType) {\n      case \"dodge\":\n        return this.dodge(actor);\n      case \"unarmed\":\n        return this.unarmed(actor);\n      case \"stomp\":\n        return this.stomp(actor);\n      case \"improvise\":\n        return this.improvise(actor);\n      case \"weapon\": {\n        let promise = actor.setupWeapon(item, bypassData);\n        if (!(item.loading && !item.loaded.value)) {\n          return promise.then((setupData) => actor.weaponTest(setupData));\n        } else {\n          break; // do nothing, setupweapon will show skill test dialog for reload.\n        }\n      }\n      case \"spell\":\n        return this.castSpell(actor, item, bypassData);\n      case \"prayer\":\n        return actor\n          .setupPrayer(item, bypassData)\n          .then((setupData) => actor.prayerTest(setupData));\n      case \"trait\":\n      case \"talent\":\n        if (item.rollable?.value)\n          return actor\n            .setupTrait(item, bypassData)\n            .then((setupData) => actor.traitTest(setupData));\n        else return item.postItem();\n      case \"skill\":\n        return actor\n          .setupSkill(item, bypassData)\n          .then((setupData) => actor.basicTest(setupData));\n    }\n  }\n\n  dodge(actor) {\n    let skill = actor\n      .getItemTypes(\"skill\")\n      .find((s) => s.name == game.i18n.localize(\"NAME.Dodge\"));\n    if (skill) {\n      actor.setupSkill(skill).then((setupData) => {\n        actor.basicTest(setupData);\n      });\n    } else {\n      actor.setupCharacteristic(\"ag\", { dodge: true }).then((setupData) => {\n        actor.basicTest(setupData);\n      });\n    }\n  }\n\n  unarmed(actor) {\n    let unarmed = game.wfrp4e.config.systemItems.unarmed;\n    actor.setupWeapon(unarmed).then((setupData) => {\n      actor.weaponTest(setupData);\n    });\n  }\n\n  stomp(actor) {\n    let stomp = game.wfrp4e.config.systemItems.stomp;\n    actor.setupTrait(stomp).then((setupData) => {\n      actor.traitTest(setupData);\n    });\n  }\n\n  improvise(actor) {\n    let improv = game.wfrp4e.config.systemItems.improv;\n    actor.setupWeapon(improv).then((setupData) => {\n      actor.weaponTest(setupData);\n    });\n  }\n\n  castSpell(actor, itemData, bypassData) {\n    if (actor.spellDialog) return actor.spellDialog(itemData, bypassData);\n    else return actor.sheet.spellDialog(itemData, bypassData);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerWfrp as ActionHandler } from \"../actions/wfrp4e/wfrp4e-actions.js\";\nimport { RollHandlerBaseWfrp4e as Core } from \"../rollHandlers/wfrp4e/wfrp-base.js\";\nimport * as settings from \"../settings/wfrp4e-settings.js\";\n\nexport class Wfrp4eSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core WFRP4e\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerLancer extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let actorId = token.actor.id;\n    result.actorId = actorId;\n    let actor = token.actor;\n    let mm = actor.data.data.derived.mm;\n\n    if (!actor) return result;\n\n    switch (actor.data.type) {\n      case \"pilot\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.pilot\"),\n          this._pilotCategory(mm, actorId)\n        );\n        break;\n      case \"mech\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.pilot\"),\n          this._pilotCategory(mm.Pilot, mm.Pilot.RegistryID)\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.mech\"),\n          this._mechCategory(mm, actorId)\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.weapons\"),\n          this._weaponsCategory(mm.Loadout.WepMounts, actorId)\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.systems\"),\n          this._systemsCategory(mm.Loadout.SysMounts, actorId)\n        );\n        break;\n      case \"npc\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.stats\"),\n          this._npcBaseCategory(actor, actorId)\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.features\"),\n          this._npcFeatureCategory(actor, actorId)\n        );\n        break;\n    }\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _makeAction(actionName, macroType, actorId, actionId, option) {\n    let action = this.initializeEmptyAction();\n    action.name = actionName;\n    action.encodedValue = [\n      macroType,\n      actorId,\n      actionId,\n      JSON.stringify(option ? option : {}),\n    ].join(this.delimiter);\n    return action;\n  }\n\n  _makeItemSubCat(name, itemType, mm, actorId) {\n    let result = this.initializeEmptySubcategory();\n    let macro = \"item\";\n\n    result.name = name;\n    result.actions = mm\n      .filter((item) => {\n        if (item != null) return item.Type === itemType;\n      })\n      .map((item) => {\n        return this._makeAction(item.Name, macro, actorId, item.RegistryID);\n      });\n\n    return result;\n  }\n\n  _makeNPCItemSubCat(name, itemType, actor, actorId) {\n    let result = this.initializeEmptySubcategory();\n    let macro = \"item\";\n\n    result.name = name;\n    result.actions = actor.data.items\n      .filter((item) => {\n        if (item != null) return item.data.type === \"npc_feature\";\n      })\n      .filter((item) => {\n        return item.data.data.type === itemType;\n      })\n      .map((item) => {\n        return this._makeAction(item.name, macro, actorId, item.id);\n      });\n    return result;\n  }\n\n  _pilotCategory(mm, actorId) {\n    let result = this.initializeEmptyCategory(\"pilot\");\n\n    [\n      this._skillsSubCategory(mm, actorId),\n      this._talentsSubCategory(mm, actorId),\n      this._pilotGearSubCategory(mm, actorId),\n      this._pilotWeaponSubCategory(mm, actorId),\n    ].forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n\n  _npcBaseCategory(actor, actorId) {\n    let result = this.initializeEmptyCategory(\"mech\");\n\n    [this._haseSubCategory(actorId)].forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n\n  _npcFeatureCategory(actor, actorId) {\n    let result = this.initializeEmptyCategory(\"feature\");\n\n    [\n      this._npcWeaponSubCat(actor, actorId),\n      this._npcTechSubCat(actor, actorId),\n      this._npcReactionSubCat(actor, actorId),\n      this._npcSystemSubCat(actor, actorId),\n      this._npcTraitSubCat(actor, actorId),\n    ].forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n\n  _npcWeaponSubCat(actor, actorId) {\n    return this._makeNPCItemSubCat(\n      this.i18n(\"tokenactionhud.weapons\"),\n      \"Weapon\",\n      actor,\n      actorId\n    );\n  }\n\n  _npcTraitSubCat(actor, actorId) {\n    return this._makeNPCItemSubCat(\n      this.i18n(\"tokenactionhud.traits\"),\n      \"Trait\",\n      actor,\n      actorId\n    );\n  }\n\n  _npcSystemSubCat(actor, actorId) {\n    return this._makeNPCItemSubCat(\n      this.i18n(\"tokenactionhud.systems\"),\n      \"System\",\n      actor,\n      actorId\n    );\n  }\n\n  _npcTechSubCat(actor, actorId) {\n    return this._makeNPCItemSubCat(\n      this.i18n(\"tokenactionhud.techs\"),\n      \"Tech\",\n      actor,\n      actorId\n    );\n  }\n\n  _npcReactionSubCat(actor, actorId) {\n    return this._makeNPCItemSubCat(\n      this.i18n(\"tokenactionhud.reactions\"),\n      \"Reaction\",\n      actor,\n      actorId\n    );\n  }\n\n  _skillsSubCategory(mm, actorId) {\n    return this._makeItemSubCat(\n      this.i18n(\"tokenactionhud.skilltriggers\"),\n      \"skill\",\n      mm._skills,\n      actorId\n    );\n  }\n\n  _talentsSubCategory(mm, actorId) {\n    let result = this.initializeEmptySubcategory();\n    let macro = \"item\";\n\n    result.id = \"talent\";\n    result.name = this.i18n(\"tokenactionhud.talents\");\n\n    let itemSubCats = mm._talents\n      .filter((item) => {\n        if (item != null) return item.Type === \"talent\";\n      })\n      .map((talent) => {\n        let subcat = this.initializeEmptySubcategory();\n        subcat.name = talent.Name;\n\n        for (let i = 0; i < talent.CurrentRank; i++) {\n          let option = { rank: `${i}` };\n          let action = this._makeAction(\n            `${this.i18n(\"tokenactionhud.rank\")} ${i + 1}`,\n            macro,\n            actorId,\n            talent.RegistryID,\n            option\n          );\n          subcat.actions.push(action);\n        }\n\n        return subcat;\n      });\n\n    this._combineSubcategoryWithCategory;\n\n    result.subcategories = itemSubCats;\n\n    return result;\n  }\n\n  _pilotWeaponSubCategory(mm, actorId) {\n    return this._makeItemSubCat(\n      this.i18n(\"tokenactionhud.weapons\"),\n      \"pilot_weapon\",\n      mm.Loadout.Weapons,\n      actorId\n    );\n  }\n\n  _pilotGearSubCategory(mm, actorId) {\n    return this._makeItemSubCat(\n      this.i18n(\"tokenactionhud.gear\"),\n      \"pilot_gear\",\n      mm.Loadout.Gear,\n      actorId\n    );\n  }\n\n  _mechCategory(mm, actorId) {\n    let result = this.initializeEmptyCategory(\"mech\");\n\n    [\n      this._haseSubCategory(actorId),\n      this._statSubCategory(actorId),\n      this._coreBonSubCategory(mm, actorId),\n      this._corePowerSubCategory(mm.Loadout.Frame, actorId),\n    ].forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n\n  _haseSubCategory(actorId) {\n    let result = this.initializeEmptySubcategory();\n    let macro = \"hase\";\n\n    result.id = \"hase\";\n    result.name = this.i18n(\"tokenactionhud.hase\");\n\n    let hull = this.i18n(\"tokenactionhud.hull\");\n    let agility = this.i18n(\"tokenactionhud.attribute.agility\");\n    let systems = this.i18n(\"tokenactionhud.systems\");\n    let engineering = this.i18n(\"tokenactionhud.engineering\");\n\n    let haseActionData = [\n      { name: hull, id: \"Hull\" },\n      { name: agility, id: \"Agi\" },\n      { name: systems, id: \"Sys\" },\n      { name: engineering, id: \"Eng\" },\n    ];\n\n    let haseActions = haseActionData.map((actionData) => {\n      return this._makeAction(actionData.name, macro, actorId, actionData.id);\n    });\n\n    result.actions = haseActions;\n\n    return result;\n  }\n\n  _statSubCategory(actorId) {\n    let result = this.initializeEmptySubcategory();\n    let macro = \"stat\";\n\n    result.id = \"stat\";\n    result.name = this.i18n(\"tokenactionhud.stat\");\n\n    let grit = this.i18n(\"tokenactionhud.grit\");\n    let techAttack = this.i18n(\"tokenactionhud.techattack\");\n\n    let statActionData = [\n      { name: grit, data: \"Pilot.Grit\" },\n      { name: techAttack, data: \"TechAttack\" },\n    ];\n\n    let statActions = statActionData.map((actionData) => {\n      return this._makeAction(actionData.name, macro, actorId, actionData.data);\n    });\n\n    result.actions = statActions;\n\n    return result;\n  }\n\n  _coreBonSubCategory(mm, actorId) {\n    let result = this.initializeEmptySubcategory();\n    let corebonus = mm.Pilot.CoreBonuses;\n    result.name = \"Core Bonuses\";\n    result.actions = corebonus.map((bonus) => {\n      let option = {};\n      option.pilot = mm.Pilot.RegistryID;\n      return this._makeAction(\n        bonus.Name,\n        \"coreBonus\",\n        actorId,\n        bonus.RegistryID,\n        option\n      );\n    });\n    return result;\n  }\n\n  _corePowerSubCategory(frame, actorId) {\n    let result = this.initializeEmptySubcategory();\n\n    let core = frame.CoreSystem;\n\n    result.name = core.Name;\n\n    if (core.PassiveName != \"Core Passive\") {\n      result.actions.push(\n        this._makeAction(core.PassiveName, \"corePassive\", actorId, \"\")\n      );\n    }\n    if (core.ActiveName) {\n      result.actions.push(\n        this._makeAction(core.ActiveName, \"coreActive\", actorId, \"\")\n      );\n    }\n\n    return result;\n  }\n\n  _weaponsCategory(WepMounts, actorId) {\n    let result = this.initializeEmptyCategory();\n    let macro = \"item\";\n\n    result.id = \"weapons\";\n    result.name = this.i18n(\"tokenactionhud.weapons\");\n\n    let itemSubCats = WepMounts.map((mount, i) => {\n      let subcat = this.initializeEmptySubcategory(\"Mount_\" + i);\n      subcat.name = mount.MountType;\n\n      subcat.actions = mount.Slots.filter((slot) => slot.Weapon !== null).map(\n        (slot) => {\n          return this._makeAction(\n            slot.Weapon.Name,\n            macro,\n            actorId,\n            slot.Weapon.RegistryID\n          );\n        }\n      );\n\n      return subcat;\n    });\n\n    itemSubCats.forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n\n  _systemsCategory(loadout, actorId) {\n    let result = this.initializeEmptyCategory();\n    let macro = \"item\";\n\n    result.id = \"systems\";\n    result.name = this.i18n(\"tokenactionhud.systems\");\n\n    let itemSubCats = loadout\n      .flatMap((mount) => mount.System)\n      .map((system) => {\n        let subcat = this.initializeEmptySubcategory(system.RegistryID);\n        subcat.name = system.Name;\n\n        let activations = system.Actions.map((action, i) => {\n          let option = {};\n          option.Type = \"Action\";\n          option.Index = i;\n          return this._makeAction(\n            action.Name,\n            \"activation\",\n            actorId,\n            system.RegistryID,\n            option\n          );\n        });\n\n        let deployables = system.Deployables.map((deployable, i) => {\n          let option = {};\n          option.Type = \"Deployable\";\n          option.Index = i;\n          return this._makeAction(\n            deployable.Name,\n            \"activation\",\n            actorId,\n            system.RegistryID,\n            option\n          );\n        });\n\n        subcat.actions = activations.concat(deployables);\n\n        return subcat;\n      });\n\n    itemSubCats.forEach((subCat) => {\n      this._combineSubcategoryWithCategory(result, subCat.name, subCat);\n    });\n\n    return result;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\n\nexport class RollHandlerBaseLancer extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  getActor(actorId){\n    return canvas.tokens.placeables.find((t) => t.data.actorId === actorId)?.actor;\n  }\n\n  /** @override */\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3 && payload.length != 4) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let actorID = payload[1];\n    let actionId = payload[2];\n    let option = JSON.parse(payload[3]);\n\n    let hasSheet = [\"item\"];\n    if (this.isRenderItem() && hasSheet.includes(macroType))\n      return this.doRenderItem(actorID, actionId);\n\n    switch (macroType) {\n      case \"hase\":\n        this._rollHaseMacro(actorID, actionId);\n        break;\n      case \"stat\":\n        this._rollStatMacro(actorID, actionId);\n        break;\n      case \"item\":\n        this._rollWeaponOrFeatureMacro(actorID, actionId, option);\n        break;\n      case \"coreBonus\":\n        this._rollCoreBonusMacro(option.pilot, actionId);\n        break;\n      case \"coreActive\":\n        this._rollCoreActiveMacro(actorID);\n        break;\n      case \"corePassive\":\n        this._rollCorePassiveMacro(actorID);\n        break;\n      case \"activation\":\n        this._rollActivationMacro(actorID, actionId, option);\n        break;\n    }\n  }\n\n  _rollHaseMacro(actorID, action) {\n    game.lancer.prepareStatMacro(actorID, `mm.${action}`);\n  }\n\n  _rollStatMacro(actorID, action) {\n    game.lancer.prepareStatMacro(actorID, `mm.${action}`);\n  }\n\n  _rollWeaponOrFeatureMacro(actorID, itemId, option) {\n    game.lancer.prepareItemMacro(actorID, itemId, option);\n  }\n\n  _rollCoreBonusMacro(pilotID, itemID) {\n    game.lancer.prepareItemMacro(pilotID, itemID);\n  }\n\n  _rollCoreActiveMacro(actorID) {\n    game.lancer.prepareCoreActiveMacro(actorID);\n  }\n\n  _rollCorePassiveMacro(actorID) {\n    game.lancer.prepareCorePassiveMacro(actorID);\n  }\n\n  _rollActivationMacro(actorID, itemId, option) {\n    game.lancer.prepareActivationMacro(\n      actorID,\n      itemId,\n      option.Type,\n      option.Index\n    );\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerLancer as ActionHandler } from \"../actions/lancer/lancer-actions.js\";\nimport { RollHandlerBaseLancer as Core } from \"../rollHandlers/lancer/lancer-base.js\";\nimport * as settings from \"../settings/lancer-settings.js\";\n\nexport class LancerSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    console.log(\"startup\");\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Lancer\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerSwade extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor.id;\n\n    this._addAttributes(result, tokenId, actor);\n    this._addSkills(result, tokenId, actor);\n    this._addStatuses(result, tokenId, actor);\n    this._addWoundsAndFatigue(result, tokenId, actor);\n    this._addBennies(result, tokenId, actor);\n    this._addPowers(result, tokenId, actor);\n    this._addInventory(result, tokenId, actor);\n    this._addEdgesAndHinderances(result, tokenId, actor);\n    this._addUtilities(result, tokenId, actor);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  /** @private */\n  _addAttributes(list, tokenId, actor) {\n    const attr = actor.data.data.attributes;\n    const macroType = \"attribute\";\n\n    const subcat = this.initializeEmptySubcategory(\"attributes\");\n    Object.entries(attr).forEach((a) => {\n      const key = a[0];\n      const data = a[1];\n\n      const nameData = CONFIG.SWADE.attributes[key];\n\n      let name;\n      if (settings.get(\"abbreviateAttributes\"))\n        name = this.i18n(nameData.short);\n      else name = this.i18n(nameData.long);\n\n      const encodedValue = [macroType, tokenId, key].join(this.delimiter);\n      const action = { name: name, encodedValue: encodedValue, id: key };\n\n      const mod = this._buildDieString(data.die, data[\"wild-die\"]);\n      action.info1 = mod;\n\n      subcat.actions.push(action);\n    });\n\n    const catName = this.i18n(\"tokenactionhud.attributes\");\n    let cat = this.initializeEmptyCategory(\"attributes\");\n    this._combineSubcategoryWithCategory(cat, catName, subcat);\n    this._combineCategoryWithList(list, catName, cat);\n  }\n\n  /** @private */\n  _addSkills(list, tokenId, actor) {\n    const cat = this.initializeEmptyCategory(\"skills\");\n    const macroType = \"skill\";\n    const skills = actor.data.items.filter((i) => i.type === macroType);\n\n    const subcat = this.initializeEmptySubcategory(\"skills\");\n    skills.forEach((s) => {\n      const encodedValue = [macroType, tokenId, s.id].join(this.delimiter);\n      const action = { name: s.name, encodedValue: encodedValue, id: s.id };\n\n      let mod = this._parseDie(s.data.die, s.data[\"wild-die\"]);\n      action.info1 = mod;\n\n      subcat.actions.push(action);\n    });\n\n    const skillName = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(cat, skillName, subcat);\n    this._combineCategoryWithList(list, skillName, cat);\n  }\n\n  /** @private */\n  _addPowers(list, tokenId, actor) {\n    const powers = actor.data.items.filter((i) => i.type === \"power\");\n    if (powers.length === 0) return;\n\n    const macroType = \"powerPoints\";\n    const cat = this.initializeEmptyCategory(macroType);\n\n    const pp = actor.data.data.powerPoints;\n    if (pp) cat.info1 = `${pp.value}/${pp.max}`;\n\n    this._addCounterSubcategory(\n      cat,\n      tokenId,\n      pp,\n      this.i18n(\"tokenactionhud.points\"),\n      macroType\n    );\n\n    const powersName = this.i18n(\"tokenactionhud.powers\");\n\n    const groupedPowers = this._groupPowers(powers);\n    Object.entries(groupedPowers).forEach((g) => {\n      const key = g[0];\n      const groupPowers = g[1];\n      this._addPowersSubcategory(tokenId, key, groupPowers, macroType, cat);\n    });\n\n    this._combineCategoryWithList(list, powersName, cat);\n  }\n\n  /** @private */\n  _groupPowers(powers) {\n    const powerTypes = [...new Set(powers.map((i) => i.data.data.rank))];\n\n    return powerTypes.reduce((grouped, p) => {\n      let powerName = p;\n      if (powerName === \"\") powerName = \"No rank\";\n\n      if (!grouped.hasOwnProperty(p)) grouped[powerName] = [];\n\n      grouped[powerName].push(...powers.filter((i) => i.data.data.rank === p));\n\n      return grouped;\n    }, {});\n  }\n\n  /** @private */\n  _addInventory(list, tokenId, actor) {\n    const cat = this.initializeEmptyCategory(\"inventory\");\n\n    let items = actor.data.items;\n\n    if (actor.data.type === \"character\")\n      items = items.filter((i) => i.data.data.equipped);\n\n    const weapons = items.filter((i) => i.type === \"weapon\");\n    const weaponsName = this.i18n(\"tokenactionhud.weapons\");\n    this._addItemSubcategory(tokenId, weaponsName, weapons, \"weapons\", cat);\n\n    const armour = items.filter((i) => i.type === \"armor\");\n    const armourName = this.i18n(\"tokenactionhud.armour\");\n    this._addItemSubcategory(tokenId, armourName, armour, \"armour\", cat);\n\n    const shields = items.filter((i) => i.type === \"shield\");\n    const shieldsName = this.i18n(\"tokenactionhud.shields\");\n    this._addItemSubcategory(tokenId, shieldsName, shields, \"shields\", cat);\n\n    const misc = items.filter((i) => i.type === \"misc\" || i.type === \"gear\");\n    const miscName = this.i18n(\"tokenactionhud.misc\");\n    this._addItemSubcategory(tokenId, miscName, misc, \"misc\", cat);\n\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.inventory\"),\n      cat\n    );\n  }\n\n  /** @private */\n  _addWoundsAndFatigue(list, tokenId, actor) {\n    let cat = this.initializeEmptyCategory(\"wounds\");\n\n    let woundsName = this.i18n(\"tokenactionhud.wounds\");\n    this._addCounterSubcategory(\n      cat,\n      tokenId,\n      actor.data.data.wounds,\n      woundsName,\n      \"wounds\"\n    );\n\n    let fatigueName = this.i18n(\"tokenactionhud.fatigue\");\n    this._addCounterSubcategory(\n      cat,\n      tokenId,\n      actor.data.data.fatigue,\n      fatigueName,\n      \"fatigue\"\n    );\n\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.woundsAndFatigue\"),\n      cat\n    );\n  }\n\n  /** @private */\n  _addCounterSubcategory(category, tokenId, countItem, name, macroType) {\n    if (!countItem || (countItem.max < 1 && countItem.value < 1)) return;\n\n    const decreaseValue = [macroType, tokenId, \"decrease\"].join(this.delimiter);\n    const decreaseAction = {\n      name: \"-\",\n      encodedValue: decreaseValue,\n      id: `${macroType}Decrease`,\n      cssClass: \"shrink\",\n    };\n\n    const increaseValue = [macroType, tokenId, \"increase\"].join(this.delimiter);\n    const increaseAction = {\n      name: \"+\",\n      encodedValue: increaseValue,\n      id: `${macroType}Increase`,\n      cssClass: \"shrink\",\n    };\n\n    const subcat = this.initializeEmptySubcategory(macroType);\n    subcat.info1 = `${countItem.value}/${countItem.max}`;\n    subcat.actions.push(decreaseAction);\n    subcat.actions.push(increaseAction);\n\n    this._combineSubcategoryWithCategory(category, name, subcat);\n  }\n\n  /** @private */\n  _addEdgesAndHinderances(list, tokenId, actor) {\n    const cat = this.initializeEmptyCategory(\"edges\");\n\n    const edges = actor.data.items.filter((i) => i.type === \"edge\");\n    const edgesName = this.i18n(\"tokenactionhud.edges\");\n    this._addItemSubcategory(tokenId, edgesName, edges, \"edges\", cat);\n\n    const hindrances = actor.data.items.filter((i) => i.type === \"hindrance\");\n    const hindName = this.i18n(\"tokenactionhud.hindrances\");\n    this._addItemSubcategory(tokenId, hindName, hindrances, \"hindrances\", cat);\n\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.edgesAndHindrances\"),\n      cat\n    );\n  }\n\n  /** @private */\n  _addPowersSubcategory(tokenId, subcatName, items, itemType, category) {\n    const macroType = \"item\";\n    const subcat = this.initializeEmptySubcategory(itemType);\n\n    items\n      .filter((i) => i.name !== \"-\")\n      .forEach((i) => {\n        const action = this._buildPowerAction(tokenId, i);\n        subcat.actions.push(action);\n      });\n\n    this._combineSubcategoryWithCategory(category, subcatName, subcat);\n  }\n\n  /** @private */\n  _addItemSubcategory(tokenId, subcatName, items, itemType, category) {\n    const macroType = \"item\";\n    const subcat = this.initializeEmptySubcategory(itemType);\n\n    items\n      .filter((i) => i.name !== \"-\")\n      .forEach((i) => {\n        const action = this._buildItemAction(tokenId, i);\n        subcat.actions.push(action);\n      });\n\n    this._combineSubcategoryWithCategory(category, subcatName, subcat);\n  }\n\n  /** @private */\n  _addStatuses(list, tokenId, actor) {\n    const cat = this.initializeEmptyCategory(\"status\");\n    const macroType = \"status\";\n    const statuses = actor.data.data.status;\n\n    const subcat = this.initializeEmptySubcategory(\"status\");\n    Object.entries(statuses).forEach((s) => {\n      const key = s[0];\n      const value = s[1];\n\n      const name = key.slice(2);\n      const id = name.toLowerCase();\n      const encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      const action = { name: name, id: name, encodedValue: encodedValue };\n      action.cssClass = value ? \"active\" : \"\";\n\n      subcat.actions.push(action);\n    });\n\n    const statusesName = this.i18n(\"tokenactionhud.status\");\n    this._combineSubcategoryWithCategory(cat, statusesName, subcat);\n    this._combineCategoryWithList(list, statusesName, cat);\n  }\n\n  /** @private */\n  _addBennies(list, tokenId, actor) {\n    const bennies = actor.data.data.bennies;\n    if (!bennies) return;\n\n    const cat = this.initializeEmptyCategory(\"bennies\");\n    const macroType = \"benny\";\n    const benniesName = this.i18n(\"tokenactionhud.bennies\");\n\n    const spendName = this.i18n(\"tokenactionhud.spend\");\n    const spendValue = [macroType, tokenId, \"spend\"].join(this.delimiter);\n    const spendAction = {\n      name: spendName,\n      encodedValue: spendValue,\n      id: `bennySpend`,\n    };\n\n    const getName = this.i18n(\"tokenactionhud.get\");\n    const getValue = [macroType, tokenId, \"get\"].join(this.delimiter);\n    const getAction = { name: getName, encodedValue: getValue, id: `bennyGet` };\n\n    const tokenSubcat = this.initializeEmptySubcategory(macroType);\n    tokenSubcat.name = benniesName;\n    tokenSubcat.info1 = bennies.value.toString();\n    cat.info1 = bennies.value.toString();\n\n    tokenSubcat.actions.push(spendAction);\n    tokenSubcat.actions.push(getAction);\n\n    this._combineSubcategoryWithCategory(cat, benniesName, tokenSubcat);\n\n    if (game.user.isGM) {\n      const gmBennies = game.user.getFlag(\"swade\", \"bennies\");\n      if (gmBennies !== null) {\n        const gmMacroType = \"gmBenny\";\n        const gmSpend = [gmMacroType, tokenId, \"spend\"].join(this.delimiter);\n        const gmSpendAction = {\n          name: spendName,\n          encodedValue: gmSpend,\n          id: `gmBennySpend`,\n        };\n\n        const gmGet = [gmMacroType, tokenId, \"get\"].join(this.delimiter);\n        const gmGetAction = {\n          name: getName,\n          encodedValue: gmGet,\n          id: `gmBennyGet`,\n        };\n\n        const gmSubcat = this.initializeEmptySubcategory(gmMacroType);\n        gmSubcat.actions.push(gmSpendAction);\n        gmSubcat.actions.push(gmGetAction);\n        const gmName = `${this.i18n(\"tokenactionhud.gm\")} ${benniesName}`;\n        gmSubcat.info2 = gmBennies.toString();\n        cat.info2 = gmBennies.toString();\n        this._combineSubcategoryWithCategory(cat, gmName, gmSubcat);\n      }\n    }\n\n    this._combineCategoryWithList(list, benniesName, cat);\n  }\n\n  /** @private */\n  _addUtilities(list, tokenId, actor) {\n    let cat = this.initializeEmptyCategory(\"utility\");\n\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      cat\n    );\n  }\n\n  /** @private */\n  _parseDie(die, wild) {\n    let dieMod = this._buildDieString(die);\n\n    if (!wild) return dieMod;\n\n    let wildMod = this._buildDieString(wild);\n    if (\n      dieMod\n        .toUpperCase()\n        .localeCompare(wildMod.toUpperCase(), undefined, {\n          sensitivity: \"base\",\n        }) === 0\n    )\n      return dieMod;\n\n    return `${dieMod}/${wildMod}`;\n  }\n\n  /** @private */\n  _buildDieString(die) {\n    if (!die) return \"\";\n\n    let result = `d${die.sides}`;\n\n    const mod = parseInt(die.modifier);\n    if (!die.modifier || mod === 0) return result;\n\n    let dieMod = mod > 0 ? `+${mod}` : `${mod}`;\n\n    result += dieMod;\n\n    return result;\n  }\n\n  /** @private */\n  _buildItemAction(tokenId, item) {\n    const macroType = \"item\";\n    const id = item.id;\n    const name = item.name;\n    const encodedValue = [macroType, tokenId, id].join(this.delimiter);\n    const action = { name: name, id: id, encodedValue: encodedValue };\n\n    action.info1 = this._getItemQuantity(item);\n    action.info2 = this._getItemShots(item);\n\n    action.img = item.img;\n\n    return action;\n  }\n\n  /** @private */\n  _getItemQuantity(item) {\n    if (item.data.data.quantity !== 1) return item.data.data.quantity;\n\n    return \"\";\n  }\n\n  /** @private */\n  _getItemShots(item) {\n    const curr = item.data.data.currentShots;\n    const shots = item.data.data.shots;\n\n    if (!curr) return;\n\n    let result = \"\";\n    if (curr != 0 || shots != 0) result += curr;\n\n    if (shots > 0) result += `/${shots}`;\n\n    return result;\n  }\n\n  /** @private */\n  _buildPowerAction(tokenId, item) {\n    const macroType = \"item\";\n    const id = item.id;\n    const name = item.name;\n    const encodedValue = [macroType, tokenId, id].join(this.delimiter);\n    const action = { name: name, id: id, encodedValue: encodedValue };\n\n    action.info1 = this._getPowerPoints(item);\n\n    action.img = item.img;\n\n    return action;\n  }\n\n  /** @private */\n  _getPowerPoints(item) {\n    const pp = item.data.data.pp;\n    if (pp.toLowerCase() === \"special\") return \"*\";\n\n    const points = parseInt(pp);\n\n    if (points === NaN) return \"\";\n\n    return points;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\n\nexport class RollHandlerBaseSwade extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n\n    let hasSheet = [\"item\"];\n    if (this.isRenderItem() && hasSheet.includes(macroType))\n      return this.doRenderItem(tokenId, actionId);\n\n    switch (macroType) {\n      case \"item\":\n        this._rollItem(event, actor, actionId);\n        break;\n      case \"status\":\n        await this._toggleStatus(event, actor, actionId);\n        break;\n      case \"benny\":\n        this._adjustBennies(event, actor, actionId);\n        break;\n      case \"gmBenny\":\n        await this._adjustGmBennies(event, actor, actionId);\n        break;\n      case \"attribute\":\n        this._rollAttribute(event, actor, actionId);\n        break;\n      case \"skill\":\n        this._rollSkill(event, actor, actionId);\n        break;\n      case \"wounds\":\n      case \"fatigue\":\n      case \"powerPoints\":\n        await this._adjustAttributes(event, actor, macroType, actionId);\n        break;\n    }\n  }\n\n  /** @private */\n  _rollItem(event, actor, actionId) {\n    const item = super.getItem(actor, actionId);\n    item.show();\n  }\n\n  /** @private */\n  async _toggleStatus(event, actor, actionId) {\n    const update = { data: { status: {} } };\n\n    const status = \"is\" + actionId.charAt(0).toUpperCase() + actionId.slice(1);\n    update.data.status[status] = !actor.data.data.status[status];\n\n    await actor.update(update);\n  }\n\n  /** @private */\n  _adjustBennies(event, actor, actionId) {\n    if (actionId === \"spend\") {\n      actor.spendBenny();\n      this._showDiceBenny();\n    }\n\n    if (actionId === \"get\") actor.getBenny();\n  }\n\n  /** @private */\n  async _adjustGmBennies(event, actor, actionId) {\n    let user = game.user;\n    if (!user.isGM) return;\n\n    const benniesValue = user.getFlag(\"swade\", \"bennies\");\n    if (actionId === \"spend\") {\n      if (benniesValue == 0) return;\n\n      if (game.settings.get(\"swade\", \"notifyBennies\")) {\n        await this._createGmSpendMessage(user);\n        this._showDiceBenny();\n      }\n\n      await user.setFlag(\"swade\", \"bennies\", benniesValue - 1);\n    }\n\n    if (actionId === \"get\") {\n      await user.setFlag(\"swade\", \"bennies\", benniesValue + 1);\n      if (game.settings.get(\"swade\", \"notifyBennies\")) {\n        await this._createGmGetMessage(user);\n      }\n      ui[\"players\"].render(true);\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async _createGmSpendMessage(user) {\n    let message = await renderTemplate(CONFIG.SWADE.bennies.templates.spend, {\n      target: user,\n      speaker: user,\n    });\n\n    let chatData = {\n      content: message,\n    };\n    ChatMessage.create(chatData);\n  }\n\n  async _createGmGetMessage(user) {\n    let message = await renderTemplate(CONFIG.SWADE.bennies.templates.gmadd, {\n      target: user,\n      speaker: user,\n    });\n\n    let chatData = {\n      content: message,\n    };\n\n    ChatMessage.create(chatData);\n  }\n\n  _showDiceBenny() {\n    if (game.dice3d) {\n      const benny = new Roll(\"1dB\").roll();\n      game.dice3d.showForRoll(benny, game.user, true, null, false);\n    }\n  }\n\n  /** @private */\n  _rollAttribute(event, actor, actionId) {\n    actor.rollAttribute(actionId, { event: event });\n  }\n\n  /** @private */\n  _rollSkill(event, actor, actionId) {\n    actor.rollSkill(actionId, { event: event });\n  }\n\n  /** @private */\n  async _adjustAttributes(event, actor, macroType, actionId) {\n    let attribute = actor.data.data[macroType];\n\n    if (!attribute) return;\n\n    const curValue = attribute.value;\n    const max = attribute.max;\n    const min = attribute.min ?? 0;\n\n    let value;\n    switch (actionId) {\n      case \"increase\":\n        value = Math.clamped(curValue + 1, min, max);\n        break;\n      case \"decrease\":\n        value = Math.clamped(curValue - 1, min, max);\n        break;\n    }\n\n    let update = { data: {} };\n\n    update.data[macroType] = { value: value };\n\n    await actor.update(update);\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\n\nexport class RollHandlerBR2SWSwade extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n\n    let hasSheet = [\"item\"];\n    if (this.isRenderItem() && hasSheet.includes(macroType))\n      return this.doRenderItem(tokenId, actionId);\n\n    switch (macroType) {\n      case \"item\":\n        this._rollItem(event, actor, actionId, tokenId);\n        break;\n      case \"status\":\n        await this._toggleStatus(event, actor, actionId, tokenId);\n        break;\n      case \"benny\":\n        this._adjustBennies(event, actor, actionId);\n        break;\n      case \"gmBenny\":\n        await this._adjustGmBennies(event, actor, actionId);\n        break;\n      case \"attribute\":\n        this._rollAttribute(event, actor, actionId, tokenId);\n        break;\n      case \"skill\":\n        this._rollSkill(event, actor, actionId, tokenId);\n        break;\n      case \"wounds\":\n      case \"fatigue\":\n      case \"powerPoints\":\n        await this._adjustAttributes(event, actor, macroType, actionId);\n        break;\n    }\n  }\n\n  /** @private */\n  _rollItem(event, actor, actionId, tokenId) {\n    //const item = super.getItem(actor, actionId);\n    //item.show();\n    let behavior;\n    if (event.ctrlKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"ctrl_click\");\n    } else if (event.altKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"alt_click\");\n    } else if (event.shiftKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"shift_click\");\n    } else {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"click\");\n    }\n    if (behavior === \"trait\") {\n      game.brsw\n        .create_item_card_from_id(tokenId, actor.id, actionId)\n        .then((message) => {\n          game.brsw.roll_item(message, \"\", false);\n        });\n    } else if (behavior === \"trait_damage\") {\n      game.brsw\n        .create_item_card_from_id(tokenId, actor.id, actionId)\n        .then((message) => {\n          game.brsw.roll_item(message, \"\", false, true);\n        });\n    } else if (behavior === \"system\") {\n      game.swade.rollItemMacro(actor.items.get(actionId).name);\n    } else {\n      game.brsw.create_item_card_from_id(tokenId, actor.id, actionId);\n    }\n  }\n\n  /** @private */\n  async _toggleStatus(event, actor, actionId, tokenId) {\n    const update = { data: { status: {} } };\n\n    const status = \"is\" + actionId.charAt(0).toUpperCase() + actionId.slice(1);\n    const existingOnSheet = actor.data.data.status[status];\n    update.data.status[status] = !actor.data.data.status[status];\n\n    await actor.update(update);\n    // SWADE system will eventually set the active effect on the token, this future-proofs it so duplicate effects don't occur\n    setTimeout(() => {\n      const existingOnToken = actor.effects.find(\n        (e) => e.getFlag(\"core\", \"statusId\") === actionId\n      );\n\n      if (!existingOnToken == !existingOnSheet) {\n        const effect = CONFIG.SWADE.statusEffects.find(\n          (e) => e.id === actionId\n        );\n        effect[\"flags.core.statusId\"] = actionId;\n        canvas.tokens.get(tokenId).toggleEffect(effect);\n      }\n    }, 10);\n  }\n\n  /** @private */\n  _adjustBennies(event, actor, actionId) {\n    if (actionId === \"spend\") {\n      actor.spendBenny();\n      this._showDiceBenny();\n    }\n\n    if (actionId === \"get\") actor.getBenny();\n  }\n\n  /** @private */\n  async _adjustGmBennies(event, actor, actionId) {\n    let user = game.user;\n    if (!user.isGM) return;\n\n    const benniesValue = user.getFlag(\"swade\", \"bennies\");\n    if (actionId === \"spend\") {\n      if (benniesValue == 0) return;\n\n      if (game.settings.get(\"swade\", \"notifyBennies\")) {\n        await this._createGmSpendMessage(user);\n        this._showDiceBenny();\n      }\n\n      await user.setFlag(\"swade\", \"bennies\", benniesValue - 1);\n    }\n\n    if (actionId === \"get\") {\n      await user.setFlag(\"swade\", \"bennies\", benniesValue + 1);\n      if (game.settings.get(\"swade\", \"notifyBennies\")) {\n        await this._createGmGetMessage(user);\n      }\n      ui[\"players\"].render(true);\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async _createGmSpendMessage(user) {\n    let message = await renderTemplate(CONFIG.SWADE.bennies.templates.spend, {\n      target: user,\n      speaker: user,\n    });\n\n    let chatData = {\n      content: message,\n    };\n    ChatMessage.create(chatData);\n  }\n\n  async _createGmGetMessage(user) {\n    let message = await renderTemplate(CONFIG.SWADE.bennies.templates.gmadd, {\n      target: user,\n      speaker: user,\n    });\n\n    let chatData = {\n      content: message,\n    };\n\n    ChatMessage.create(chatData);\n  }\n\n  _showDiceBenny() {\n    if (game.dice3d) {\n      const benny = new Roll(\"1dB\").roll();\n      game.dice3d.showForRoll(benny, game.user, true, null, false);\n    }\n  }\n\n  /** @private */\n  _rollAttribute(event, actor, actionId, tokenId) {\n    //actor.rollAttribute(actionId, {event: event});\n    let behavior;\n    if (event.ctrlKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"ctrl_click\");\n    } else if (event.altKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"alt_click\");\n    } else if (event.shiftKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"shift_click\");\n    } else {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"click\");\n    }\n    if (behavior === \"trait\" || behavior === \"trait_damage\") {\n      game.brsw\n        .create_attribute_card_from_id(tokenId, actor.id, actionId)\n        .then((message) => {\n          game.brsw.roll_attribute(message, \"\", false);\n        });\n    } else if (behavior === \"system\") {\n      actor.rollAttribute(actionId);\n    } else {\n      game.brsw.create_attribute_card_from_id(tokenId, actor.id, actionId);\n    }\n  }\n\n  /** @private */\n  _rollSkill(event, actor, actionId, tokenId) {\n    //actor.rollSkill(actionId, {event: event});\n    let behavior;\n    if (event.ctrlKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"ctrl_click\");\n    } else if (event.altKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"alt_click\");\n    } else if (event.shiftKey === true) {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"shift_click\");\n    } else {\n      behavior = game.settings.get(\"betterrolls-swade2\", \"click\");\n    }\n    if (behavior === \"trait\" || behavior === \"trait_damage\") {\n      game.brsw\n        .create_skill_card_from_id(tokenId, actor.id, actionId)\n        .then((message) => {\n          game.brsw.roll_skill(message, \"\", false);\n        });\n    } else if (behavior === \"system\") {\n      game.swade.rollItemMacro(actor.items.get(actionId).name);\n    } else {\n      game.brsw.create_skill_card_from_id(tokenId, actor.id, actionId);\n    }\n  }\n\n  /** @private */\n  async _adjustAttributes(event, actor, macroType, actionId) {\n    let attribute = actor.data.data[macroType];\n\n    if (!attribute) return;\n\n    const curValue = attribute.value;\n    const max = attribute.max;\n    const min = attribute.min ?? 0;\n\n    let value;\n    switch (actionId) {\n      case \"increase\":\n        value = Math.clamped(curValue + 1, min, max);\n        break;\n      case \"decrease\":\n        value = Math.clamped(curValue - 1, min, max);\n        break;\n    }\n\n    let update = { data: {} };\n\n    update.data[macroType] = { value: value };\n\n    await actor.update(update);\n  }\n}\n",
    "export function register(app, updateSettings) {\n  game.settings.register(app, \"abbreviateAttributes\", {\n    name: game.i18n.localize(\n      \"tokenactionhud.settings.swade.abbreviateAttributes.name\"\n    ),\n    hint: game.i18n.localize(\n      \"tokenactionhud.settings.swade.abbreviateAttributes.hint\"\n    ),\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: false,\n    onChange: (value) => {\n      updateFunc(value);\n    },\n  });\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerSwade as ActionHandler } from \"../actions/swade/swade-actions.js\";\nimport { RollHandlerBaseSwade as Core } from \"../rollHandlers/swade/swade-base.js\";\nimport { RollHandlerBR2SWSwade as BR2SW } from \"../rollHandlers/swade/swade-br2sw.js\";\nimport * as settings from \"../settings/swade-settings.js\";\n\nexport class SwadeSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    return new ActionHandler(filterManager, categoryManager);\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core SWADE\" };\n    SystemManager.addHandler(choices, \"betterrolls-swade2\");\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    switch (handlerId) {\n      case \"betterrolls-swade2\":\n        return new BR2SW();\n      default:\n        return new Core();\n    }\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerStarWarsFFG extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n    this.filterManager.createOrGetFilter(\"skills\");\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let weapons = this._getItemsList(actor, tokenId, \"weapon\");\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      weapons\n    );\n\n    let forcePowers = this._getItemsList(actor, tokenId, \"forcepower\");\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"SWFFG.ForcePower\"),\n      forcePowers\n    );\n\n    const data = actor.data.data;\n\n    data.skilltypes.forEach((type) => {\n      let skills = this._getSkills(type, data, tokenId);\n      this._combineCategoryWithList(result, type.label, skills);\n    });\n\n    if (game.user.isGM) {\n      this._combineCategoryWithList(\n        result,\n        \"utility\",\n        this._getGMList(multipleTokens)\n      );\n    }\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  /** @private */\n  _getGMList(multipleTokens) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let subcategory = this.initializeEmptySubcategory();\n    let items = [\n      {\n        name: \"Destiny Pool Init\",\n        encodedValue: \"gm|destiny|destiny\",\n        id: \"gm_destiny\",\n      },\n    ];\n    subcategory.actions = items;\n\n    this._combineSubcategoryWithCategory(result, \"GM\", subcategory);\n\n    return result;\n  }\n\n  /** @private */\n  _getItemsList(actor, tokenId, type) {\n    let result = this.initializeEmptyCategory(type);\n\n    let subcategory = this.initializeEmptySubcategory();\n\n    let items = actor.items.filter((i) => i.type === type);\n    subcategory.actions = this._produceItemMap(tokenId, items, type);\n\n    this._combineSubcategoryWithCategory(result, \"\", subcategory);\n\n    return result;\n  }\n\n  /** @private */\n  _getSkills(type, data, tokenId) {\n    let categoryId = \"skills\";\n    let macroType = \"skill\";\n\n    let result = this.initializeEmptyCategory(categoryId);\n\n    const skills = Object.keys(data.skills)\n      .filter((s) => data.skills[s].type === type.type)\n      .sort((a, b) => {\n        let comparison = 0;\n        if (a.toLowerCase() > b.toLowerCase()) {\n          comparison = 1;\n        } else if (a.toLowerCase() < b.toLowerCase()) {\n          comparison = -1;\n        }\n        return comparison;\n      });\n    settings.Logger.debug(skills);\n    let skillCat = this.initializeEmptySubcategory();\n    skillCat.actions = this._produceSkillMap(tokenId, data, skills, macroType);\n\n    this._combineSubcategoryWithCategory(result, \"\", skillCat);\n\n    return result;\n  }\n\n  /** @private */\n  _produceItemMap(tokenId, itemSet, type) {\n    return itemSet.map((i) => {\n      let encodedValue = [type, tokenId, i._id].join(this.delimiter);\n      return { name: i.name, encodedValue: encodedValue, id: i._id };\n    });\n  }\n\n  /** @private */\n  _produceSkillMap(tokenId, data, skills, type) {\n    return skills.map((i) => {\n      let encodedValue = [type, tokenId, i].join(this.delimiter);\n      return { name: data.skills[i].label, encodedValue: encodedValue, id: i };\n    });\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseStarWarsFFG extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n\n    switch (macroType) {\n      case \"gm\":\n        switch (actionId) {\n          case \"destiny\":\n            return this._rollDestiny();\n        }\n      case \"weapon\":\n        return game.ffg.DiceHelpers.rollItem(actionId, actor.id);\n      case \"skill\":\n        return this._rollSkill(actor, actionId, event);\n      case \"forcepower\":\n        return this._rollForcePower(actor, actionId);\n    }\n  }\n\n  _rollForcePower(actor, itemId) {\n    let item = actor.items.get(itemId);\n    if (!item) {\n      item = game.items.get(itemId);\n    }\n    if (!item) {\n      item = ImportHelpers.findCompendiumEntityById(\"Item\", itemId);\n    }\n    const forcedice =\n      actor.data.data.stats.forcePool.max -\n      actor.data.data.stats.forcePool.value;\n    if (forcedice > 0) {\n      let sheet = actor.sheet.getData();\n      const dicePool = new DicePoolFFG({\n        force: forcedice,\n      });\n      game.ffg.DiceHelpers.displayRollDialog(\n        sheet,\n        dicePool,\n        `${game.i18n.localize(\"SWFFG.Rolling\")} ${item.name}`,\n        item.name,\n        item\n      );\n    }\n  }\n\n  _rollDestiny() {\n    game.settings.set(\"starwarsffg\", \"dPoolLight\", 0);\n    game.settings.set(\"starwarsffg\", \"dPoolDark\", 0);\n    const messageText = `<button class=\"ffg-destiny-roll\">${game.i18n.localize(\n      \"SWFFG.DestinyPoolRoll\"\n    )}</button>`;\n\n    new Map(\n      [...game.settings.settings].filter(([k, v]) =>\n        v.key.includes(\"destinyrollers\")\n      )\n    ).forEach((i) => {\n      game.settings.set(i.module, i.key, undefined);\n    });\n\n    CONFIG.FFG.DestinyGM = game.user.id;\n\n    ChatMessage.create({\n      user: game.user._id,\n      content: messageText,\n    });\n  }\n\n  _rollSkill(actor, skillname, event) {\n    let difficulty = 2;\n    if (event.ctrlKey && !event.shiftKey) {\n      difficulty = 3;\n    } else if (!event.ctrlKey && event.shiftKey) {\n      difficulty = 1;\n    }\n    const actorSheet = actor.sheet.getData();\n    const skill = actor.data.data.skills[skillname];\n    const characteristic =\n      actorSheet.data.characteristics[skill.characteristic];\n    game.ffg.DiceHelpers.rollSkillDirect(\n      skill,\n      characteristic,\n      difficulty,\n      actorSheet\n    );\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\r\nimport { ActionHandlerStarWarsFFG as ActionHandler } from \"../actions/starwarsffg/starwarsffg-actions.js\";\r\nimport { RollHandlerBaseStarWarsFFG as Core } from \"../rollHandlers/starwarsffg/starwarsffg-base.js\";\r\nimport * as settings from \"../settings/starwarsffg-settings.js\";\r\n\r\nexport class StarWarsFFGSystemManager extends SystemManager {\r\n  constructor(appName) {\r\n    super(appName);\r\n  }\r\n\r\n  /** @override */\r\n  doGetActionHandler(filterManager, categoryManager) {\r\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\r\n    return actionHandler;\r\n  }\r\n\r\n  /** @override */\r\n  getAvailableRollHandlers() {\r\n    let choices = { core: \"Core starwarsffg\" };\r\n    return choices;\r\n  }\r\n\r\n  /** @override */\r\n  doGetRollHandler(handlerId) {\r\n    return new Core();\r\n  }\r\n\r\n  /** @override */\r\n  doRegisterSettings(appName, updateFunc) {\r\n    settings.register(appName, updateFunc);\r\n  }\r\n}\r\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\nimport { Logger } from \"../../logger.js\";\n\nexport class ActionHandlerT20 extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    let items = this._getItemList(actor, tokenId);\n    let feats = this._getFeatsList(actor, tokenId);\n    // let effects = this._getEffectsList(actor, tokenId);\n    let conditions;\n    // if (settings.get('showConditionsCategory'))\n    // conditions = this._getConditionsList(actor, tokenId);\n\n    let spells = this._getSpellsList(actor, tokenId);\n    let skills = this._getSkillsList(actor.data.data.pericias, tokenId);\n\n    let itemsTitle = this.i18n(\"tokenactionhud.inventory\");\n    let spellsTitle = this.i18n(\"tokenactionhud.spells\");\n    let featsTitle = this.i18n(\"tokenactionhud.features\");\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    // let effectsTitle = this.i18n('tokenactionhud.effects');\n    // let conditionsTitle = this.i18n('tokenactionhud.conditions');\n\n    this._combineCategoryWithList(result, itemsTitle, items);\n    this._combineCategoryWithList(result, spellsTitle, spells);\n    this._combineCategoryWithList(result, featsTitle, feats);\n    // this._combineCategoryWithList(result, skillsTitle, skills);\n\n    let abilitiesTitle = this.i18n(\"tokenactionhud.abilities\");\n    let abilities = this._getAbilityList(\n      tokenId,\n      actor.data.data.atributos,\n      \"atributos\",\n      abilitiesTitle,\n      \"atributo\"\n    );\n\n    // this._combineCategoryWithList(result, abilitiesTitle, abilities);\n\n    // this._combineCategoryWithList(result, effectsTitle, effects);\n    // this._combineCategoryWithList(result, conditionsTitle, conditions);\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"npc\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    const tokenId = list.tokenId;\n\n    this._addMultiSkills(list, tokenId);\n\n    let abilitiesTitle = this.i18n(\"tokenactionhud.abilities\");\n    this._addMultiAbilities(\n      list,\n      tokenId,\n      \"atributos\",\n      abilitiesTitle,\n      \"atributo\"\n    );\n\n    // if (settings.get('showConditionsCategory'))\n    // this._addMultiConditions(list, tokenId);\n  }\n\n  /** ITEMS **/\n\n  /** @private */\n  _getItemList(actor, tokenId) {\n    let validItems = this._filterLongerActions(\n      actor.data.items.filter((i) => i.data.qtd > 0)\n    );\n    let sortedItems = this._sortByItemSort(validItems);\n    let macroType = \"item\";\n\n    let equipped;\n    // if (actor.data.type === 'npc' && settings.get('showAllNpcItems')) {\n    // equipped = sortedItems.filter(i => i.type !== 'consumivel' && i.type !== 'magia' && i.type !== 'poder');\n    // } else {\n    // equipped = sortedItems.filter(i => i.type !== 'consumivel' && i.data.equipped);\n    // }\n    equipped = sortedItems.filter((i) => i.type !== \"consumivel\");\n    let activeEquipped = this._getActiveEquipment(equipped);\n\n    let weapons = activeEquipped.filter((i) => i.type == \"arma\");\n    let weaponActions = weapons.map((w) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = activeEquipped.filter((i) => i.type == \"equip\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let other = activeEquipped.filter(\n      (i) => i.type != \"arma\" && i.type != \"equip\"\n    );\n    let otherActions = other.map((o) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, o)\n    );\n    let otherCat = this.initializeEmptySubcategory();\n    otherCat.actions = otherActions;\n\n    let allConsumables = this._getActiveEquipment(\n      sortedItems.filter((i) => i.type == \"consumivel\")\n    );\n\n    let expendedFiltered = this._filterExpendedItems(allConsumables);\n    let consumable = expendedFiltered;\n    let consumableActions = consumable.map((c) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, c)\n    );\n    let consumablesCat = this.initializeEmptySubcategory();\n    consumablesCat.actions = consumableActions;\n\n    let tools = validItems.filter((t) => t.type === \"tool\");\n    let toolsActions = tools.map((i) =>\n      this._buildEquipmentItem(tokenId, actor, macroType, i)\n    );\n    let toolsCat = this.initializeEmptySubcategory();\n    toolsCat.actions = toolsActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n    let otherTitle = this.i18n(\"tokenactionhud.other\");\n    let consumablesTitle = this.i18n(\"tokenactionhud.consumables\");\n    let toolsTitle = this.i18n(\"tokenactionhud.tools\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n    this._combineSubcategoryWithCategory(result, otherTitle, otherCat);\n    this._combineSubcategoryWithCategory(\n      result,\n      consumablesTitle,\n      consumablesCat\n    );\n    this._combineSubcategoryWithCategory(result, toolsTitle, toolsCat);\n\n    return result;\n  }\n\n  /** @private */\n  _getActiveEquipment(equipment) {\n    const activationTypes = Object.keys(\n      game.tormenta20.config.listaAtivacao\n    ).filter((at) => at !== \"none\");\n    const includeList = [\"poder\", \"magia\", \"consumivel\"];\n\n    let activeEquipment = equipment.filter((e) => {\n      if (!includeList.includes(e.type)) return true;\n      let activation = e.data.ativacao;\n      if (!activation) return false;\n\n      return activationTypes.includes(e.data.ativacao.execucao);\n    });\n\n    return activeEquipment;\n  }\n\n  /** SPELLS **/\n\n  /** @private */\n  _getSpellsList(actor, tokenId) {\n    let validSpells = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type === \"magia\")\n    );\n    validSpells = this._filterExpendedItems(validSpells);\n\n    // if (actor.data.type === 'character' || !settings.get('showAllNpcItems'))\n    // validSpells = this._filterNonpreparedSpells(validSpells);\n\n    let spellsSorted = this._sortSpellsByLevel(validSpells);\n    let spells = this._categoriseSpells(actor, tokenId, spellsSorted);\n\n    return spells;\n  }\n\n  /** @private */\n  _sortSpellsByLevel(spells) {\n    let result = Object.values(spells);\n\n    result.sort((a, b) => {\n      if (a.data.circulo === b.data.circulo)\n        return a.name\n          .toUpperCase()\n          .localeCompare(b.name.toUpperCase(), undefined, {\n            sensitivity: \"base\",\n          });\n      return a.data.circulo - b.data.circulo;\n    });\n\n    return result;\n  }\n\n  /** @private */\n  _categoriseSpells(actor, tokenId, spells) {\n    const powers = this.initializeEmptySubcategory();\n    const book = this.initializeEmptySubcategory();\n    const macroType = \"magia\";\n\n    let dispose = spells.reduce(\n      function (dispose, s) {\n        let prep = s.data.preparada;\n        var level = s.data.circulo;\n\n        var levelName, levelKey;\n\n        if (prep) {\n          levelKey = prep;\n        } else {\n          levelKey = \"magia\" + level;\n          levelName = `${this.i18n(\"tokenactionhud.level\")} ${level}`;\n        }\n\n        let spell = this._buildItem(tokenId, actor, macroType, s);\n\n        // if (settings.get('showSpellInfo'))\n        // this._addSpellInfo(s, spell);\n\n        // Initialise subcategory if non-existant.\n        let subcategory = book.subcategories.find(\n          (cat) => cat.name === levelName\n        );\n\n        if (!subcategory) {\n          subcategory = this.initializeEmptySubcategory();\n          // subcategory.info1 = `${actor.data.data.attributes.pm.value}/${actor.data.data.attributes.pm.max}`;\n        }\n\n        subcategory.actions.push(spell);\n\n        if (book.subcategories.indexOf(subcategory) < 0)\n          this._combineSubcategoryWithCategory(book, levelName, subcategory);\n\n        return dispose;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"magias\");\n\n    let powersTitle = this.i18n(\"tokenactionhud.powers\");\n    let booksTitle = this.i18n(\"tokenactionhud.books\");\n\n    this._combineSubcategoryWithCategory(result, powersTitle, powers);\n    this._combineSubcategoryWithCategory(result, booksTitle, book);\n\n    return result;\n  }\n\n  /** @private */\n  _addSpellInfo(s, spell) {\n    let c = s.data.duracao;\n\n    spell.info1 = \"\";\n    spell.info2 = \"\";\n    spell.info3 = \"\";\n    if (c?.unidade === \"sust\") spell.info1 += \"S\";\n  }\n\n  /** FEATS **/\n\n  /** @private */\n  _getFeatsList(actor, tokenId) {\n    let validFeats = this._filterLongerActions(\n      actor.data.items.filter((i) => i.type == \"poder\")\n    );\n    let sortedFeats = this._sortByItemSort(validFeats);\n    let feats = this._categoriseFeats(tokenId, actor, sortedFeats);\n\n    return feats;\n  }\n\n  /** @private */\n  _categoriseFeats(tokenId, actor, feats) {\n    let active = this.initializeEmptySubcategory();\n    let passive = this.initializeEmptySubcategory();\n    let lair = this.initializeEmptySubcategory();\n    let legendary = this.initializeEmptySubcategory();\n\n    let dispose = feats.reduce(\n      function (dispose, f) {\n        const activationType = f.data.ativacao.execucao;\n        const macroType = \"poder\";\n\n        let feat = this._buildEquipmentItem(tokenId, actor, macroType, f);\n\n        if (\n          !activationType ||\n          activationType === \"\" ||\n          activationType === \"Livre\"\n        ) {\n          passive.actions.push(feat);\n          return;\n        }\n\n        active.actions.push(feat);\n\n        return;\n      }.bind(this),\n      {}\n    );\n\n    let result = this.initializeEmptyCategory(\"poderes\");\n\n    let activeTitle = this.i18n(\"tokenactionhud.active\");\n    this._combineSubcategoryWithCategory(result, activeTitle, active);\n\n    // if (!settings.get('ignorePassiveFeats')) {\n    let passiveTitle = this.i18n(\"tokenactionhud.passive\");\n    this._combineSubcategoryWithCategory(result, passiveTitle, passive);\n    // }\n\n    return result;\n  }\n\n  /** @private */\n  _getSkillsList(skills, tokenId) {\n    let result = this.initializeEmptyCategory(\"pericia\");\n    let macroType = \"pericia\";\n\n    let abbr = false; //settings.get('abbreviateSkills');\n\n    let skillsActions = Object.entries(skills)\n      .map((e) => {\n        try {\n          let skillId = e[0];\n          let name = abbr ? skillId : game.tormenta20.config.pericias[skillId];\n          name = name.charAt(0).toUpperCase() + name.slice(1);\n          let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n          let icon = this._getProficiencyIcon(skills[skillId].treinado);\n          return {\n            name: name,\n            id: e[0],\n            encodedValue: encodedValue,\n            icon: icon,\n          };\n        } catch (error) {\n          Logger.error(e);\n          return null;\n        }\n      })\n      .filter((s) => !!s);\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n\n    return result;\n  }\n\n  _addMultiSkills(list, tokenId) {\n    let result = this.initializeEmptyCategory(\"pericia\");\n    let macroType = \"pericia\";\n\n    let abbr = false; //settings.get('abbreviateSkills');\n\n    let skillsActions = Object.entries(game.tormenta20.config.pericias).map(\n      (e) => {\n        let name = abbr ? e[0] : e[1];\n        name = name.charAt(0).toUpperCase() + name.slice(1);\n        let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n        return { name: name, id: e[0], encodedValue: encodedValue };\n      }\n    );\n    let skillsCategory = this.initializeEmptySubcategory();\n    skillsCategory.actions = skillsActions;\n\n    let skillsTitle = this.i18n(\"tokenactionhud.skills\");\n    this._combineSubcategoryWithCategory(result, skillsTitle, skillsCategory);\n    this._combineCategoryWithList(list, skillsTitle, result, true);\n  }\n\n  /** @private */\n  _getAbilityList(tokenId, abilities, categoryId, categoryName, macroType) {\n    let result = this.initializeEmptyCategory(categoryId);\n\n    let abbr = false; //settings.get('abbreviateSkills');\n\n    let actions = Object.entries(game.tormenta20.config.atributos).map((e) => {\n      if (abilities[e[0]].value === 0) return;\n\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      let icon = \"\";\n\n      return { name: name, id: e[0], encodedValue: encodedValue, icon: icon };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions.filter((a) => !!a);\n\n    this._combineSubcategoryWithCategory(result, categoryName, abilityCategory);\n\n    return result;\n  }\n\n  _addMultiAbilities(list, tokenId, categoryId, categoryName, macroType) {\n    let cat = this.initializeEmptyCategory(categoryId);\n\n    let abbr = false; //settings.get('abbreviateSkills');\n\n    let actions = Object.entries(game.tormenta20.config.atributos).map((e) => {\n      let name = abbr ? e[0] : e[1];\n      name = name.charAt(0).toUpperCase() + name.slice(1);\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n    let abilityCategory = this.initializeEmptySubcategory();\n    abilityCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(cat, categoryName, abilityCategory);\n    this._combineCategoryWithList(list, categoryName, cat, true);\n  }\n\n  /** @private */\n  _getEffectsList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"effects\");\n\n    this._addEffectsSubcategories(actor, tokenId, result);\n\n    return result;\n  }\n\n  /** @private */\n  _getConditionsList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"conditions\");\n    this._addConditionsSubcategory(actor, tokenId, result);\n    return result;\n  }\n\n  /** @private */\n  _addEffectsSubcategories(actor, tokenId, category) {\n    const macroType = \"effect\";\n\n    const effects = actor.effects.entries;\n\n    let tempCategory = this.initializeEmptySubcategory();\n    let passiveCategory = this.initializeEmptySubcategory();\n\n    effects.forEach((e) => {\n      const name = e.data.label;\n      const encodedValue = [macroType, tokenId, e.id].join(this.delimiter);\n      const cssClass = e.data.disabled ? \"\" : \"active\";\n      const image = e.data.icon;\n      let action = {\n        name: name,\n        id: e.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      e.isTemporary\n        ? tempCategory.actions.push(action)\n        : passiveCategory.actions.push(action);\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.temporary\"),\n      tempCategory\n    );\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.passive\"),\n      passiveCategory\n    );\n  }\n\n  /** @private */\n  _addMultiConditions(list, tokenId) {\n    const category = this.initializeEmptyCategory(\"conditions\");\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n    const actors = canvas.tokens.controlled\n      .filter((t) => !!t.actor)\n      .map((t) => t.actor);\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const cssClass = actors.every((actor) =>\n        actor.effects.entries.some((e) => e.data.flags.core?.statusId === c.id)\n      )\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    const conName = this.i18n(\"tokenactionhud.conditions\");\n    this._combineSubcategoryWithCategory(category, conName, conditions);\n    this._combineCategoryWithList(list, conName, category);\n  }\n\n  /** @private */\n  _addConditionsSubcategory(actor, tokenId, category) {\n    const macroType = \"condition\";\n\n    const availableConditions = CONFIG.statusEffects.filter(\n      (condition) => condition.id !== \"\"\n    );\n\n    if (!availableConditions) return;\n\n    let conditions = this.initializeEmptySubcategory();\n\n    availableConditions.forEach((c) => {\n      const name = this.i18n(c.label);\n      const encodedValue = [macroType, tokenId, c.id].join(this.delimiter);\n      const cssClass = actor.effects.entries.some(\n        (e) => e.data.flags.core?.statusId === c.id\n      )\n        ? \"active\"\n        : \"\";\n      const image = c.icon;\n      const action = {\n        name: name,\n        id: c.id,\n        encodedValue: encodedValue,\n        img: image,\n        cssClass: cssClass,\n      };\n\n      conditions.actions.push(action);\n    });\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.conditions\"),\n      conditions\n    );\n  }\n\n  /** @private */\n  _addIntiativeSubcategory(macroType, category, tokenId) {\n    const combat = game.combat;\n    let combatant, currentInitiative;\n    if (combat) {\n      combatant = combat.combatants.find((c) => c.tokenId === tokenId);\n      currentInitiative = combatant?.initiative;\n    }\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    if (currentInitiative) initiativeAction.info1 = currentInitiative;\n    initiativeAction.cssClass = currentInitiative ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _addMultiIntiativeSubcategory(macroType, tokenId, category) {\n    const combat = game.combat;\n\n    let initiative = this.initializeEmptySubcategory();\n\n    let initiativeValue = [macroType, tokenId, \"initiative\"].join(\n      this.delimiter\n    );\n    let initiativeName = `${this.i18n(\"tokenactionhud.rollInitiative\")}`;\n\n    let initiativeAction = {\n      id: \"rollInitiative\",\n      encodedValue: initiativeValue,\n      name: initiativeName,\n    };\n\n    let isActive;\n    if (combat) {\n      let tokenIds = canvas.tokens.controlled.map((t) => t.id);\n      let tokenCombatants = tokenIds.map((id) =>\n        combat.combatants.find((c) => c.tokenId === id)\n      );\n      isActive = tokenCombatants.every((c) => !!c?.initiative);\n    }\n\n    initiativeAction.cssClass = isActive ? \"active\" : \"\";\n\n    initiative.actions.push(initiativeAction);\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.initiative\"),\n      initiative\n    );\n  }\n\n  /** @private */\n  _buildEquipmentItem(tokenId, actor, macroType, item) {\n    let action = this._buildItem(tokenId, actor, macroType, item);\n    this._addItemInfo(actor, item, action);\n    return action;\n  }\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    let encodedValue = [macroType, tokenId, item._id].join(this.delimiter);\n    let img = this._getImage(item);\n    let icon = this._getActionIcon(item.data?.ativacao?.execucao);\n    let result = {\n      name: item.name,\n      id: item._id,\n      encodedValue: encodedValue,\n      img: img,\n      icon: icon,\n    };\n\n    return result;\n  }\n\n  /** @private */\n  _addItemInfo(actor, item, action) {\n    action.info1 = this._getQuantityData(item);\n\n    action.info2 = \"\";\n\n    action.info3 = \"\";\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    let quantity = item.data.qtd;\n    if (quantity > 1) {\n      result = quantity;\n    }\n\n    return result;\n  }\n\n  /** @private */\n  _filterLongerActions(items) {\n    var result;\n\n    // if (settings.get('hideLongerActions'))\n    // result = items.filter(i => !i.data.ativacao);\n\n    return result ? result : items;\n  }\n\n  /** @private */\n  _filterNonpreparedSpells(spells) {\n    let result = spells.filter((i) => i.data.preparada);\n\n    return result;\n  }\n\n  _filterExpendedItems(items) {\n    // if (settings.get('showEmptyItems'))\n    // return items;\n\n    return items.filter((i) => {\n      let uses = i.data.uses;\n      // Assume something with no uses is unlimited in its use.\n      if (!uses) return true;\n\n      // if it has a max but value is 0, don't return.\n      if (uses.max > 0 && !uses.value) return false;\n\n      return true;\n    });\n  }\n\n  /** @private */\n  _sortByItemSort(items) {\n    let result = Object.values(items);\n\n    result.sort((a, b) => a.sort - b.sort);\n\n    return result;\n  }\n\n  /** @private */\n  _getProficiencyIcon(level) {\n    const icons = {\n      0: \"\",\n      1: '<i class=\"fas fa-check\"></i>',\n    };\n    return icons[level];\n  }\n\n  _getActionIcon(action) {\n    const img = {\n      //padrao: `<i class=\"fas fa-fist-raised\"></i>`,\n      movimento: `<i class=\"fas fa-plus\"></i>`,\n      reacao: `<i class=\"fas fa-bolt\"></i>`,\n      livre: `<i class=\"far fa-circle\"></i>`,\n      completa: `<i class=\"fas fa-star\"></i>`,\n      duasRodadas: `<i class=\"fas fa-hourglass-start\"></i>`,\n      verTexto: `<i class=\"fas fa-book\"></i>`,\n    };\n    return img[action];\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseT20 extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    if (tokenId === \"multi\") {\n      for (let t of canvas.tokens.controlled) {\n        let idToken = t.data._id;\n        await this._handleMacros(event, macroType, idToken, actionId);\n      }\n    } else {\n      await this._handleMacros(event, macroType, tokenId, actionId);\n    }\n  }\n\n  async _handleMacros(event, macroType, tokenId, actionId) {\n    switch (macroType) {\n      case \"atributo\":\n        this.rollAbilityMacro(event, tokenId, actionId);\n        break;\n      case \"pericia\":\n        this.rollSkillMacro(event, tokenId, actionId);\n        break;\n      case \"item\":\n      case \"magia\":\n      case \"poder\":\n        if (this.isRenderItem()) this.doRenderItem(tokenId, actionId);\n        else this.rollItemMacro(event, tokenId, actionId);\n        break;\n      // case 'effect':\n      // await this.toggleEffect(event, tokenId, actionId);\n      // break;\n      // case 'condition':\n      // await this.toggleCondition(event, tokenId, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollAbilityMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    actor.rollAtributo(checkId);\n  }\n\n  rollSkillMacro(event, tokenId, checkId) {\n    const actor = super.getActor(tokenId);\n    const skillData = {\n      actor: actor,\n      type: \"perícia\",\n      data: actor.data.data.pericias[checkId],\n      name: actor.data.data.pericias[checkId].label,\n      id: checkId,\n    };\n    actor.rollPericia(skillData);\n  }\n\n  rollItemMacro(event, tokenId, itemId) {\n    let actor = super.getActor(tokenId);\n    let item = super.getItem(actor, itemId);\n\n    // if (item.data.type === 'magia')\n    // return actor._onItemRoll(item);\n\n    return item.roll({ event });\n    // return actor._onItemRoll(item);\n  }\n\n  async performInitiativeMacro(tokenId) {\n    let actor = super.getActor(tokenId);\n\n    await actor.rollInitiative({ createCombatants: true });\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleEffect(event, tokenId, effectId) {\n    const actor = super.getActor(tokenId);\n    const effect = actor.effects.entries.find((e) => e.id === effectId);\n\n    if (!effect) return;\n\n    const statusId = effect.data.flags.core?.statusId;\n    if (statusId) {\n      await this.toggleCondition(event, tokenId, statusId);\n      return;\n    }\n\n    await effect.update({ disabled: !effect.data.disabled });\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  async toggleCondition(event, tokenId, effectId) {\n    const token = super.getToken(tokenId);\n    const isRightClick = this.isRightClick(event);\n    if (\n      effectId.includes(\"combat-utility-belt.\") &&\n      game.cub &&\n      !isRightClick\n    ) {\n      const cubCondition = this.findCondition(effectId)?.label;\n      if (!cubCondition) return;\n\n      game.cub.hasCondition(cubCondition, token)\n        ? await game.cub.removeCondition(cubCondition, token)\n        : await game.cub.addCondition(cubCondition, token);\n    } else {\n      const condition = this.findCondition(effectId);\n      if (!condition) return;\n\n      isRightClick\n        ? await token.toggleOverlay(condition)\n        : await token.toggleEffect(condition);\n    }\n\n    Hooks.callAll(\"forceUpdateTokenActionHUD\");\n  }\n\n  findCondition(id) {\n    return CONFIG.statusEffects.find((effect) => effect.id === id);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerT20 as ActionHandler } from \"../actions/tormenta20/tormenta20-actions.js\";\nimport { RollHandlerBaseT20 as Core } from \"../rollHandlers/tormenta20/tormenta20-base.js\";\n// import * as settings from '../settings/tormenta20-settings.js';\n\nexport class Tormenta20SystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let coreTitle = \"Tormenta20\";\n\n    let choices = { core: coreTitle };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    let rollHandler;\n    switch (handlerId) {\n      case \"core\":\n      default:\n        rollHandler = new Core();\n        break;\n    }\n\n    return rollHandler;\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    // settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerSymbaroum extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor.id;\n\n    let actorType = actor.data.type;\n\n    let mysticalPowers = this._getMysticalPowers(actor, tokenId);\n    let traits = this._getTraits(actor, tokenId);\n    let weapons = this._getWeapons(actor, tokenId);\n    let armors = this._getArmors(actor, tokenId);\n    let abilities = this._getAbilities(actor, tokenId);\n    let attributes = this._getAttributes(actor, tokenId);\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.symbaroum.mysticalPowers\"),\n      mysticalPowers\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.traits\"),\n      traits\n    );\n    if (!game.settings.get(\"symbaroum\", \"combatAutomation\")) {\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.armour\"),\n        armors\n      );\n    }\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      weapons\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.symbaroum.abilities\"),\n      abilities\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  _getMysticalPowers(actor, tokenId) {\n    let filteredItems = actor.items.filter(\n      (item) => item.data?.type === \"mysticalPower\" && item.data.data?.script\n    );\n    let result = this.initializeEmptyCategory(\"actorPowers\");\n    let powersCategory = this.initializeEmptySubcategory();\n    powersCategory.actions = this._produceMap(\n      tokenId,\n      filteredItems,\n      \"mysticalPower\"\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      powersCategory\n    );\n    return result;\n  }\n\n  _getTraits(actor, tokenId) {\n    let filteredItems = actor.items.filter(\n      (item) => item.data?.type === \"trait\" && item.data.data?.script\n    );\n    let result = this.initializeEmptyCategory(\"actorsTraits\");\n    let traitsCategory = this.initializeEmptySubcategory();\n    traitsCategory.actions = this._produceMap(tokenId, filteredItems, \"trait\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      traitsCategory\n    );\n    return result;\n  }\n\n  _getWeapons(actor, tokenId) {\n    let filteredItems = actor.items.filter(\n      (item) =>\n        item.data?.type === \"weapon\" && item.data.data?.state === \"active\"\n    );\n    let result = this.initializeEmptyCategory(\"actorWeapons\");\n    let weaponsCategory = this.initializeEmptySubcategory();\n    weaponsCategory.actions = this._produceMap(\n      tokenId,\n      filteredItems,\n      \"weapon\"\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      weaponsCategory\n    );\n    return result;\n  }\n\n  _getArmors(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"actorArmors\");\n    let armorsCategory = this.initializeEmptySubcategory();\n    let encodedValue = [\"armor\", tokenId, actor.data.data.combat.id].join(\n      this.delimiter\n    );\n    let item = {\n      name: actor.data.data.combat.armor,\n      encodedValue: encodedValue,\n      id: actor.data.data.combat.id,\n    };\n\n    armorsCategory.actions = [item];\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      armorsCategory\n    );\n    return result;\n  }\n\n  _getAbilities(actor, tokenId) {\n    let filteredItems = actor.items.filter(\n      (item) => item.data?.type === \"ability\" && item.data.data?.script\n    );\n    let result = this.initializeEmptyCategory(\"actorAbilities\");\n    let abilitiesCategory = this.initializeEmptySubcategory();\n    abilitiesCategory.actions = this._produceMap(\n      tokenId,\n      filteredItems,\n      \"ability\"\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.roll\"),\n      abilitiesCategory\n    );\n    return result;\n  }\n\n  _getAttributes(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = Object.entries(actor.data.data.attributes);\n    let attributesCategory = this.initializeEmptySubcategory();\n    attributesCategory.actions = attributes.map((c) => {\n      let encodedValue = [\"attribute\", tokenId, c[0]].join(this.delimiter);\n      return {\n        name: game.i18n.localize(c[1].label),\n        encodedValue: encodedValue,\n        id: c[0],\n      };\n    });\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributesCategory\n    );\n    return result;\n  }\n\n  _produceMap(tokenId, itemSet, type) {\n    return itemSet.map((i) => {\n      let encodedValue = [type, tokenId, i.id].join(this.delimiter);\n      let img = this._getImage(i);\n      let result = {\n        name: i.name,\n        encodedValue: encodedValue,\n        id: i.id,\n        img: img,\n      };\n      return result;\n    });\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n    return !result?.includes(\"systems/symbaroum/asset/image/trait.png\")\n      ? result\n      : \"\";\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseSymbaroum extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let itemId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    switch (macroType) {\n      case \"weapon\":\n        this._handleWeapon(macroType, event, actor, itemId);\n        break;\n      case \"armor\":\n        this._handleArmor(macroType, event, actor, itemId);\n        break;\n      case \"ability\":\n        this._handleAbility(macroType, event, actor, itemId);\n        break;\n      case \"mysticalPower\":\n        this._handleMysticalPowers(macroType, event, actor, itemId);\n        break;\n      case \"trait\":\n        this._handleTraits(macroType, event, actor, itemId);\n        break;\n      case \"attribute\":\n        this._handleAttributes(macroType, event, actor, itemId);\n        break;\n    }\n  }\n\n  _handleWeapon(macroType, event, actor, actionId) {\n    let usedItem = actor.data.data.weapons.filter(\n      (item) => item.id === actionId\n    );\n    actor.rollWeapon(usedItem[0]);\n  }\n\n  _handleArmor(macroType, event, actor, actionId) {\n    actor.rollArmor();\n  }\n\n  _handleAbility(macroType, event, actor, actionId) {\n    let usedPower = actor.items.filter((item) => item.id === actionId);\n    actor.usePower(usedPower[0]);\n  }\n\n  _handleMysticalPowers(macroType, event, actor, actionId) {\n    let usedPower = actor.items.filter((item) => item.id === actionId);\n    actor.usePower(usedPower[0]);\n  }\n\n  _handleTraits(macroType, event, actor, actionId) {\n    let usedPower = actor.items.filter((item) => item.id === actionId);\n    actor.usePower(usedPower[0]);\n  }\n\n  _handleAttributes(macroType, event, actor, actionId) {\n    actor.rollAttribute(actionId);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerSymbaroum as ActionHandler } from \"../actions/symbaroum/symbaroum-actions.js\";\nimport { RollHandlerBaseSymbaroum as Core } from \"../rollHandlers/symbaroum/symbaroum-base.js\";\nimport * as settings from \"../settings/symbaroum-settings.js\";\n\nexport class SymbaroumSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    console.log(\"startup\");\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Symbaroum\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerAlienrpg extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let attributes = {};\n    let skills = {};\n    let weapons = {};\n    let inventory = {};\n    let talents = {};\n    let agenda = {};\n    let consumables = {};\n    let power = {};\n    let conditions = {};\n    let utility = {};\n    let attack = {};\n\n    let result = this.initializeEmptyActionList();\n\n    if (multipleTokens) {\n      this._buildMultipleTokenList(result);\n      return result;\n    }\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    let legitimateActors = [\"character\", \"synthetic\", \"creature\"];\n    let actorType = actor.data.type;\n    if (!legitimateActors.includes(actorType)) return result;\n\n    result.actorId = actor._id;\n    if (actorType === \"character\" || actorType === \"synthetic\") {\n      attributes = this._getAttributes(actor, tokenId);\n      skills = this._getSkills(actor, tokenId);\n      weapons = this._getWeaponsList(actor, tokenId);\n      inventory = this._getItemsList(actor, tokenId);\n      talents = this._getTalentsList(actor, tokenId);\n      agenda = this._getAgendaList(actor, tokenId);\n      consumables = this._getConsumablesList(actor, tokenId);\n      power = this._getPowerList(actor, tokenId);\n      conditions = this._getConditionsList(actor, tokenId);\n      utility = this._getUtilityList(actor, tokenId);\n    } else {\n      attributes = this._getCreatureAttributes(actor, tokenId);\n      attack = this._getAttackList(actor, tokenId);\n      utility = this._getUtilityList(actor, tokenId);\n    }\n    // // console.log('ActionHandlerAlienRPG -> doBuildActionList -> utility', utility);\n    switch (actor.data.type) {\n      case \"character\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.attributes\"),\n          attributes\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.skills\"),\n          skills\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.weapons\"),\n          weapons\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.inventory\"),\n          inventory\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.talents\"),\n          talents\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.agenda\"),\n          agenda\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.consumables\"),\n          consumables\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.power\"),\n          power\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.conditions\"),\n          conditions\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.utility\"),\n          utility\n        );\n        this._setFilterSuggestions(actor);\n        if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n        break;\n      case \"synthetic\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.attributes\"),\n          attributes\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.skills\"),\n          skills\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.weapons\"),\n          weapons\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.inventory\"),\n          inventory\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.talents\"),\n          talents\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.agenda\"),\n          agenda\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.power\"),\n          power\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.utility\"),\n          utility\n        );\n        this._setFilterSuggestions(actor);\n        if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n        break;\n      case \"creature\":\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.attributes\"),\n          attributes\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.attack\"),\n          attack\n        );\n        this._combineCategoryWithList(\n          result,\n          this.i18n(\"tokenactionhud.utility\"),\n          utility\n        );\n        this._setFilterSuggestions(actor);\n        if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n        break;\n\n      default:\n        break;\n    }\n\n    return result;\n  }\n\n  _getWeaponsList(actor, tokenId) {\n    let macroType = \"weapon\";\n    let result = this.initializeEmptyCategory(\"items\");\n\n    let subcategory = this.initializeEmptySubcategory();\n    subcategory.actions = this._produceMap(\n      tokenId,\n      actor.items.filter((i) => i.type == macroType),\n      macroType\n    );\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.weapons\"),\n      subcategory\n    );\n\n    return result;\n  }\n\n  _getItemsList(actor, tokenId) {\n    let macroType = \"item\";\n    let result = this.initializeEmptyCategory(\"items\");\n    let filter = [\"item\", \"armor\"];\n    let items = (actor.items ?? [])\n      .filter((a) => filter.includes(a.type))\n      .sort(this._foundrySort);\n\n    let armourList = items.filter((i) => i.type === \"armor\");\n    let armourActions = this._buildItemActions(tokenId, \"armor\", armourList);\n    let armour = this.initializeEmptySubcategory();\n    armour.actions = armourActions;\n\n    let itemList = items.filter((i) => i.type === \"item\");\n    let itemActions = this._buildItemActions(tokenId, macroType, itemList);\n    let item = this.initializeEmptySubcategory();\n    item.actions = itemActions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.armour\"),\n      armour\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.equipment\"),\n      item\n    );\n\n    return result;\n  }\n  _getTalentsList(actor, tokenId) {\n    let macroType = \"item\";\n    let result = this.initializeEmptyCategory(\"items\");\n    let filter = [\"talent\"];\n    let items = (actor.items ?? [])\n      .filter((a) => filter.includes(a.type))\n      .sort(this._foundrySort);\n\n    let talentList = items.filter((i) => i.type === \"talent\");\n    let talentActions = this._buildItemActions(tokenId, macroType, talentList);\n    let talent = this.initializeEmptySubcategory();\n    talent.actions = talentActions;\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.talents\"),\n      talent\n    );\n\n    return result;\n  }\n  _getAgendaList(actor, tokenId) {\n    let macroType = \"item\";\n    let result = this.initializeEmptyCategory(\"items\");\n    let filter = [\"agenda\"];\n    let items = (actor.items ?? [])\n      .filter((a) => filter.includes(a.type))\n      .sort(this._foundrySort);\n\n    let agendaList = items.filter((i) => i.type === \"agenda\");\n    let agendaActions = this._buildItemActions(tokenId, macroType, agendaList);\n    let agenda = this.initializeEmptySubcategory();\n    agenda.actions = agendaActions;\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.settings.alienrpg.agenda\"),\n      agenda\n    );\n\n    return result;\n  }\n\n  _getConsumablesList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"consumables\");\n    let consumables = this.initializeEmptySubcategory();\n    let powConsumables = this.initializeEmptySubcategory();\n    let macroType = \"consumables\";\n\n    let rollableConsumables = Object.entries(actor.data.data.consumables);\n    // remove Power from the list\n    rollableConsumables.splice(1, 1);\n    let consumablesMap = rollableConsumables.map((c) => {\n      let name = this.i18n(\n        \"tokenactionhud.settings.alienrpg.consumables\" + c[0]\n      );\n      let id = c[0];\n      let encodedValue = [macroType, tokenId, id, name].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: id };\n    });\n    consumables.actions = this._produceMap(tokenId, consumablesMap, macroType);\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.settings.alienrpg.consumables\"),\n      consumables\n    );\n\n    return result;\n  }\n  _getPowerList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"power\");\n    let power = this.initializeEmptySubcategory();\n    let powConsumables = this.initializeEmptySubcategory();\n    let macroType = \"power\";\n    // Power consumables\n    let filter = [\"item\"];\n    let items = (actor.items ?? [])\n      .filter((a) => filter.includes(a.type))\n      .sort(this._foundrySort);\n    let powerList = items.filter((i) => i.data.totalPower > 0);\n\n    let powerMap = powerList.map((c) => {\n      let name = c.data.name;\n      let id = c.data._id;\n      let pencodedValue = [macroType, tokenId, name, id].join(this.delimiter);\n      return { name: name, encodedValue: pencodedValue, id: id };\n    });\n    powConsumables.actions = this._produceMap(tokenId, powerMap, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.settings.alienrpg.power\"),\n      powConsumables\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _buildItemActions(tokenId, macroType, itemList, isPassive = false) {\n    let result = this._produceMap(tokenId, itemList, macroType, isPassive);\n\n    result.forEach((i) =>\n      this._addItemInfo(\n        itemList.find((item) => item.data._id === i.id),\n        i\n      )\n    );\n\n    return result;\n  }\n\n  /** @private */\n  _addItemInfo(item, itemAction) {\n    itemAction.info1 = this._getQuantityData(item);\n  }\n\n  /** @private */\n  _getQuantityData(item) {\n    let result = \"\";\n    let quantity = item.data.data.quantity?.value;\n    if (quantity > 1) {\n      result = quantity;\n    }\n\n    return result;\n  }\n\n  _getAttributes(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = this.initializeEmptySubcategory();\n    let macroType = \"attribute\";\n\n    let rollableAttributes = Object.entries(actor.data.data.attributes);\n    let attributesMap = rollableAttributes.map((c) => {\n      let name = this.i18n(\"tokenactionhud.settings.alienrpg.attribute\" + c[0]);\n      let id = c[0];\n      let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: id };\n    });\n\n    attributes.actions = this._produceMap(tokenId, attributesMap, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n\n    return result;\n  }\n\n  _getCreatureAttributes(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = this.initializeEmptySubcategory();\n    let battributes = this.initializeEmptySubcategory();\n    let macroType = \"creatureattribute\";\n\n    let rollableAttributes = Object.entries(actor.data.data.attributes);\n    let attributesMap = rollableAttributes.map((c) => {\n      let name = this.i18n(\"tokenactionhud.settings.alienrpg.attribute\" + c[0]);\n      let id = c[0];\n      let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: id };\n    });\n    let rollableGeneral = Object.entries(actor.data.data.general);\n    rollableGeneral.splice(2, 3);\n\n    let generalMap = rollableGeneral.map((c) => {\n      let name = this.i18n(\"tokenactionhud.settings.alienrpg.attribute\" + c[0]);\n      let id = c[0];\n      let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: id };\n    });\n\n    attributes.actions = this._produceMap(tokenId, attributesMap, macroType);\n    battributes.actions = this._produceMap(tokenId, generalMap, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attributes\"),\n      attributes\n    );\n    this._combineSubcategoryWithCategory(result, \"\", battributes);\n\n    return result;\n  }\n\n  _getSkills(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"skills\");\n    let attributes = this.initializeEmptySubcategory();\n    let macroType = \"skill\";\n\n    let rollableSkills = Object.entries(actor.data.data.skills);\n    let skillMap = rollableSkills.map((c) => {\n      let name = this.i18n(\"tokenactionhud.settings.alienrpg.skill\" + c[0]);\n      let id = c[0];\n      let encodedValue = [macroType, tokenId, id].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: id };\n    });\n\n    attributes.actions = this._produceMap(tokenId, skillMap, macroType);\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.skills\"),\n      attributes\n    );\n\n    return result;\n  }\n\n  _buildMultipleTokenList(list) {\n    list.tokenId = \"multi\";\n    list.actorId = \"multi\";\n\n    const allowedTypes = [\"monster\", \"character\"];\n    let actors = canvas.tokens.controlled\n      .map((t) => t.actor)\n      .filter((a) => allowedTypes.includes(a.data.type));\n\n    this._addMultiUtilities(list, list.tokenId, actors);\n  }\n\n  _getAttackList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attack\");\n    let attack = this.initializeEmptySubcategory();\n    let macroType = \"attack\";\n\n    if (actor.data.type === \"creature\") {\n      let header = this.initializeEmptySubcategory();\n\n      let creatureAttack = [];\n      let cAttackValue = [\"creatureAttack\", tokenId, \"creatureAttack\", \"\"].join(\n        this.delimiter\n      );\n      creatureAttack = {\n        id: \"creatureAttack\",\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.creatureAttack\"),\n        encodedValue: cAttackValue,\n      };\n      header.actions.push(creatureAttack);\n\n      let acidSplash = [];\n      let aSplashValue = [\"acidSplash\", tokenId, \"acidSplash\", \"\"].join(\n        this.delimiter\n      );\n      acidSplash = {\n        id: \"acidSplash\",\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.attributeacidSplash\"),\n        encodedValue: aSplashValue,\n      };\n      header.actions.push(acidSplash);\n      this._combineSubcategoryWithCategory(\n        result,\n        this.i18n(\"tokenactionhud.settings.alienrpg.attributeacidSplash\"),\n        header\n      );\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.attack\"),\n      attack\n    );\n\n    return result;\n  }\n\n  _getUtilityList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"utility\");\n    let utility = this.initializeEmptySubcategory();\n    let macroType = \"utility\";\n    let header = this.initializeEmptySubcategory();\n    let headerActions = [];\n    let health = 0;\n    switch (actor.data.type) {\n      case \"character\":\n        health = actor.data.data.header?.health;\n        if (health)\n          headerActions.push(\n            this._getHeaderActions(\n              tokenId,\n              \"health\",\n              this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n              health.value,\n              \"10\"\n            )\n          );\n        header.actions = headerActions;\n\n        let stress = actor.data.data.header?.stress;\n        if (stress)\n          headerActions.push(\n            this._getHeaderActions(\n              tokenId,\n              \"stress\",\n              this.i18n(\"tokenactionhud.settings.alienrpg.stresspoints\"),\n              stress.value,\n              \"10\"\n            )\n          );\n        header.actions = headerActions;\n        let stressActions = [];\n        let stressValue = [\"rollStress\", tokenId, \"rollStress\", \"\"].join(\n          this.delimiter\n        );\n        stressActions = {\n          id: \"rollStress\",\n          name: this.i18n(\"tokenactionhud.settings.alienrpg.rollStress\"),\n          encodedValue: stressValue,\n        };\n        header.actions.push(stressActions);\n\n        let rollCritActions = [];\n        let rollCrit = [\"rollCrit\", tokenId, \"rollCrit\", \"\"].join(\n          this.delimiter\n        );\n        rollCritActions = {\n          id: \"rollCrit\",\n          name: this.i18n(\"tokenactionhud.settings.alienrpg.rollCrit\"),\n          encodedValue: rollCrit,\n        };\n        header.actions.push(rollCritActions);\n\n        this._combineSubcategoryWithCategory(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n          header\n        );\n        break;\n\n      case \"creature\":\n        health = actor.data.data.header?.health;\n        if (health)\n          headerActions.push(\n            this._getHeaderActions(\n              tokenId,\n              \"health\",\n              this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n              health.value,\n              \"10\"\n            )\n          );\n        header.actions = headerActions;\n        this._combineSubcategoryWithCategory(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n          header\n        );\n        break;\n\n      case \"synthetic\":\n        health = actor.data.data.header?.health;\n        if (health)\n          headerActions.push(\n            this._getHeaderActions(\n              tokenId,\n              \"health\",\n              this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n              health.value,\n              \"10\"\n            )\n          );\n        header.actions = headerActions;\n\n        let rollSynCritActions = [];\n        let rollSynCrit = [\"rollCrit\", tokenId, \"rollCrit\", \"\"].join(\n          this.delimiter\n        );\n        rollSynCritActions = {\n          id: \"rollCrit\",\n          name: this.i18n(\"tokenactionhud.settings.alienrpg.rollCrit\"),\n          encodedValue: rollSynCrit,\n        };\n        header.actions.push(rollSynCritActions);\n\n        this._combineSubcategoryWithCategory(\n          result,\n          this.i18n(\"tokenactionhud.settings.alienrpg.health\"),\n          header\n        );\n        if (actor.data.data.header.synthstress) {\n          let stressActions = [];\n          let stressValue = [\"rollStress\", tokenId, \"rollStress\", 0].join(\n            this.delimiter\n          );\n          stressActions = {\n            id: \"rollStress\",\n            name: this.i18n(\"tokenactionhud.settings.alienrpg.rollStress\"),\n            encodedValue: stressValue,\n          };\n          header.actions.push(stressActions);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n\n    return result;\n  }\n\n  _getConditionsList(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"conditions\");\n    let conditions = this.initializeEmptySubcategory();\n    let macroType = \"conditions\";\n\n    if (actor.data.type === \"character\") {\n      let general = this.initializeEmptySubcategory();\n      let generalActions = [];\n\n      let starvingStateValue = [macroType, tokenId, \"toggleStarving\", \"\"].join(\n        this.delimiter\n      );\n      generalActions = {\n        id: \"toggleStarving\",\n        encodedValue: starvingStateValue,\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.starving\"),\n      };\n      generalActions.cssClass = actor.data.data.general.starving.value\n        ? \"active\"\n        : \"\";\n      general.actions.push(generalActions);\n\n      let dehydratedStateValue = [\n        macroType,\n        tokenId,\n        \"toggleDehydrated\",\n        \"\",\n      ].join(this.delimiter);\n      generalActions = {\n        id: \"toggleDehydrated\",\n        encodedValue: dehydratedStateValue,\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.dehydrated\"),\n      };\n      generalActions.cssClass = actor.data.data.general.dehydrated.value\n        ? \"active\"\n        : \"\";\n      general.actions.push(generalActions);\n\n      let exhaustedStateValue = [\n        macroType,\n        tokenId,\n        \"toggleExhausted\",\n        \"\",\n      ].join(this.delimiter);\n      generalActions = {\n        id: \"toggleExhausted\",\n        encodedValue: exhaustedStateValue,\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.exhausted\"),\n      };\n      generalActions.cssClass = actor.data.data.general.exhausted.value\n        ? \"active\"\n        : \"\";\n      general.actions.push(generalActions);\n\n      let freezingStateValue = [macroType, tokenId, \"toggleFreezing\", \"\"].join(\n        this.delimiter\n      );\n      generalActions = {\n        id: \"toggleFreezing\",\n        encodedValue: freezingStateValue,\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.freezing\"),\n      };\n      generalActions.cssClass = actor.data.data.general.freezing.value\n        ? \"active\"\n        : \"\";\n      general.actions.push(generalActions);\n\n      let panicStateValue = [macroType, tokenId, \"togglePanic\", \"\"].join(\n        this.delimiter\n      );\n      generalActions = {\n        id: \"togglePanic\",\n        encodedValue: panicStateValue,\n        name: this.i18n(\"tokenactionhud.settings.alienrpg.panic\"),\n      };\n      generalActions.cssClass = actor.data.data.general.panic.value\n        ? \"active\"\n        : \"\";\n      general.actions.push(generalActions);\n\n      this._combineSubcategoryWithCategory(\n        result,\n        this.i18n(\"tokenactionhud.settings.alienrpg.conditions\"),\n        general\n      );\n    }\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.utility\"),\n      conditions\n    );\n\n    return result;\n  }\n\n  _getHeaderActions(tokenId, macroType, attrName, attrVal, attrMax) {\n    let id = attrName.slugify({ replacement: \"_\", strict: true });\n    let labelValue = [macroType, tokenId, id, attrVal].join(this.delimiter);\n    let headerActions = { name: attrName, encodedValue: labelValue, id: id };\n    headerActions.info1 = `${attrVal}/${attrMax}`;\n\n    return headerActions;\n  }\n\n  _addMultiUtilities(list, tokenId, actors) {\n    let category = this.initializeEmptyCategory(\"utility\");\n    let macroType = \"utility\";\n\n    let utility = this.initializeEmptySubcategory();\n\n    // if (actors.every((actor) => actor.data.type === 'character')) {\n    //   let shortRestValue = [macroType, tokenId, 'stress', ''].join(this.delimiter);\n    //   stress.actions.push({ id: 'stress', encodedValue: shortRestValue, name: this.i18n('tokenactionhud.settings.alienrpg.stresspoints') });\n    // }\n\n    this._combineSubcategoryWithCategory(\n      category,\n      this.i18n(\"tokenactionhud.utility\"),\n      utility\n    );\n    this._combineCategoryWithList(\n      list,\n      this.i18n(\"tokenactionhud.utility\"),\n      category\n    );\n  }\n\n  /** @override */\n  _setFilterSuggestions(id, items) {\n    let suggestions = items?.map((s) => {\n      return { id: s._id, value: s.name };\n    });\n    if (suggestions?.length > 0)\n      this.filterManager.setSuggestions(id, suggestions);\n  }\n\n  _filterElements(categoryId, skills) {\n    let filteredNames = this.filterManager.getFilteredNames(categoryId);\n    let result = skills.filter((s) => !!s);\n    if (filteredNames.length > 0) {\n      if (this.filterManager.isBlocklist(categoryId)) {\n        result = skills.filter((s) => !filteredNames.includes(s.name));\n      } else {\n        result = skills.filter((s) => filteredNames.includes(s.name));\n      }\n    }\n\n    return result;\n  }\n\n  _produceMap(tokenId, itemSet, type) {\n    return itemSet.map((i) => {\n      let encodedValue = [type, tokenId, i.id, i.name.toLowerCase()].join(\n        this.delimiter\n      );\n      let img = this._getImage(i);\n      let result = {\n        name: i.name,\n        encodedValue: encodedValue,\n        id: i.id,\n        img: img,\n      };\n\n      if (type === \"talent\") result.info2 = this._getUsesData(i);\n\n      return result;\n    });\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n\n  _getUsesData(item) {\n    let result = \"\";\n\n    let uses = item.data.data.uses;\n    if (!uses) return result;\n\n    if (!(uses.max || uses.value)) return result;\n\n    result = uses.value ?? 0;\n\n    if (uses.max > 0) {\n      result += `/${uses.max}`;\n    }\n\n    return result;\n  }\n  /** @protected */\n  _foundrySort(a, b) {\n    if (!(a?.data?.sort || b?.data?.sort)) return 0;\n\n    return a.data.sort - b.data.sort;\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseAlienrpg extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  async doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 4) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n    let attributename = payload[3];\n    let actor = super.getActor(tokenId);\n    let charType;\n    if (actor) charType = actor.data.type;\n    let item = actionId ? actor.items.get(actionId) : null;\n\n    let renderable = [\"item\", \"armor\"];\n    if (renderable.includes(macroType) && this.isRenderItem())\n      return this.doRenderItem(tokenId, actionId);\n\n    if (tokenId === \"multi\") {\n      if (macroType === \"utility\" && actionId.includes(\"toggle\")) {\n        this.performMultiToggleUtilityMacro(actionId);\n      } else {\n        canvas.tokens.controlled.forEach((t) => {\n          let idToken = t.data._id;\n          this._handleMacros(\n            event,\n            macroType,\n            idToken,\n            actionId,\n            attributename\n          );\n        });\n      }\n    } else {\n      let sharedActions = [\"utility\"];\n\n      if (!sharedActions.includes(macroType)) {\n        switch (charType) {\n          case \"character\":\n          case \"creature\":\n          case \"synthetic\":\n            await this._handleUniqueActionsChar(\n              macroType,\n              event,\n              tokenId,\n              actor,\n              actionId\n            );\n            break;\n        }\n      }\n      let rData = [];\n      switch (macroType) {\n        case \"attribute\":\n          rData = {\n            roll: actor.data.data.attributes[actionId].value,\n            label: actor.data.data.attributes[actionId].label,\n          };\n          if (event.type === \"click\") {\n            actor.rollAbility(actor, rData);\n          } else {\n            actor.rollAbilityMod(actor, rData);\n          }\n          break;\n        case \"creatureattribute\":\n          switch (actionId) {\n            case \"mobility\":\n            case \"observation\":\n              rData = {\n                roll: actor.data.data.general[actionId].value,\n                label: actor.data.data.general[actionId].label,\n              };\n              break;\n            default:\n              let clabel =\n                attributename[0].toUpperCase() + attributename.substring(1);\n              rData = {\n                roll: actor.data.data.attributes[actionId].value,\n                label: [clabel],\n              };\n              break;\n          }\n          if (event.type === \"click\") {\n            actor.rollAbility(actor, rData);\n          } else {\n            actor.rollAbilityMod(actor, rData);\n          }\n          break;\n        case \"skill\":\n          rData = {\n            roll: actor.data.data.skills[actionId].mod,\n            label: actor.data.data.skills[actionId].label,\n          };\n          if (event.type === \"click\") {\n            actor.rollAbility(actor, rData);\n          } else {\n            actor.rollAbilityMod(actor, rData);\n          }\n          break;\n        case \"weapon\":\n          if (event.type === \"click\") {\n            actor.nowRollItem(item);\n          } else {\n            actor.rollItemMod(item);\n          }\n          break;\n        case \"item\":\n          this._rollItem(actor, tokenId, actionId, macroType);\n          break;\n        case \"armor\":\n          rData = {\n            roll: actor.data.data.general.armor.value,\n            spbutt: \"armor\",\n          };\n          actor.rollAbility(actor, rData);\n          break;\n        case \"consumables\":\n          const lTemp =\n            \"ALIENRPG.\" +\n            (attributename[0].toUpperCase() + attributename.substring(1));\n          const label =\n            game.i18n.localize(lTemp) +\n            \" \" +\n            game.i18n.localize(\"ALIENRPG.Supply\");\n          actor.consumablesCheck(actor, actionId, label);\n          break;\n        case \"power\":\n          const pTemp =\n            \"ALIENRPG.\" + (macroType[0].toUpperCase() + macroType.substring(1));\n          const plabel =\n            game.i18n.localize(pTemp) +\n            \" \" +\n            game.i18n.localize(\"ALIENRPG.Supply\");\n          actor.consumablesCheck(actor, macroType, plabel, actionId);\n          break;\n        case \"conditions\":\n          this.performConditionMacro(event, tokenId, actionId);\n          break;\n\n        case \"utility\":\n          this.performUtilityMacro(event, tokenId, actionId);\n        default:\n          break;\n      }\n    }\n  }\n\n  /** @private */\n  async _handleUniqueActionsChar(macroType, event, tokenId, actor, actionId) {\n    let rData = 0;\n    switch (macroType) {\n      case \"stress\":\n        await this._adjustAttribute(event, actor, \"stress\", \"value\", actionId);\n        break;\n      case \"rollStress\":\n        if (actor.data.type === \"character\") {\n          rData = { panicroll: actor.data.data.header.stress };\n        } else {\n          rData = { panicroll: { value: 0, label: \"Stress\" } };\n        }\n        if (event.type === \"click\") {\n          actor.rollAbility(actor, rData);\n        } else {\n          actor.rollAbilityMod(actor, rData);\n        }\n        break;\n      case \"health\":\n        await this._adjustAttribute(event, actor, \"health\", \"value\", actionId);\n        break;\n      case \"creatureAttack\":\n        let rAttData = { atttype: actor.data.data.rTables };\n        actor.creatureAttackRoll(actor, rAttData);\n        break;\n      case \"acidSplash\":\n        let aSplashData = {\n          roll: actor.data.data.general.acidSplash.value,\n          label: actor.data.data.general.acidSplash.label,\n        };\n        actor.creatureAcidRoll(actor, aSplashData);\n        break;\n      case \"rollCrit\":\n        actor.rollCrit(actor.data.type);\n        break;\n    }\n  }\n\n  async _adjustAttribute(event, actor, property, valueName, actionId) {\n    let value = actor.data.data.header[property][valueName];\n    let max = \"10\";\n\n    if (this.rightClick) {\n      if (value <= 0) return;\n      value--;\n    } else {\n      if (value >= max) return;\n      value++;\n    }\n\n    let update = { data: { header: { [property]: { [valueName]: value } } } };\n\n    await actor.update(update);\n  }\n\n  async togggleConditionState(event, actor, property, valueName, actionId) {\n    let value = actor.data.data.general[property][valueName];\n    let max = \"1\";\n\n    if (this.rightClick) {\n      if (value <= 0) return;\n      value--;\n      if (property === \"panic\") {\n        actor.checkAndEndPanic(actor);\n      }\n    } else {\n      if (value >= max) return;\n      value++;\n      if (property === \"panic\") {\n        actor.checkAndEndPanic(actor);\n      }\n    }\n\n    let update = { data: { general: { [property]: { [valueName]: value } } } };\n    await actor.update(update);\n  }\n\n  performUtilityMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"toggleVisibility\":\n        token.toggleVisibility();\n        break;\n      case \"toggleCombat\":\n        token.toggleCombat();\n        Hooks.callAll(\"forceUpdateTokenActionHUD\");\n        break;\n    }\n  }\n\n  async performMultiToggleUtilityMacro(actionId) {\n    if (actionId === \"toggleVisibility\") {\n      const allVisible = canvas.tokens.controlled.every((t) => !t.data.hidden);\n      canvas.tokens.controlled.forEach((t) => {\n        if (allVisible) t.toggleVisibility();\n        else if (t.data.hidden) t.toggleVisibility();\n      });\n    }\n\n    if (actionId === \"toggleCombat\") {\n      const allInCombat = canvas.tokens.controlled.every(\n        (t) => t.data.inCombat\n      );\n      for (let t of canvas.tokens.controlled) {\n        if (allInCombat) await t.toggleCombat();\n        else if (!t.data.inCombat) await t.toggleCombat();\n      }\n      Hooks.callAll(\"forceUpdateTokenActionHUD\");\n    }\n  }\n\n  performConditionMacro(event, tokenId, actionId) {\n    let actor = super.getActor(tokenId);\n    let token = super.getToken(tokenId);\n\n    switch (actionId) {\n      case \"toggleStarving\":\n        this.togggleConditionState(event, actor, \"starving\", \"value\");\n        break;\n      case \"toggleDehydrated\":\n        this.togggleConditionState(event, actor, \"dehydrated\", \"value\");\n        break;\n      case \"toggleExhausted\":\n        this.togggleConditionState(event, actor, \"exhausted\", \"value\");\n        break;\n      case \"toggleFreezing\":\n        this.togggleConditionState(event, actor, \"freezing\", \"value\");\n        break;\n      case \"togglePanic\":\n        this.togggleConditionState(event, actor, \"panic\", \"value\");\n        break;\n    }\n  }\n\n  /** @private */\n  _rollItem(actor, tokenId, actionId, macroType) {\n    let item = actor.items.get(actionId);\n    let renderable = [\"item\"];\n    if (renderable.includes(macroType)) {\n      return this.doRenderItem(tokenId, actionId);\n    } else {\n      console.warn(\"armor roll\");\n    }\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerAlienrpg as ActionHandler } from \"../actions/alienrpg/alienrpg-actions.js\";\nimport { RollHandlerBaseAlienrpg as Core } from \"../rollHandlers/alienrpg/alienrpg-base.js\";\nimport * as settings from \"../settings/alienrpg-settings.js\";\n\nexport class AlienrpgSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core AlienRPG\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\n\nexport class ActionHandlerOD6S extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    result.actorId = actor._id;\n\n    //let inventoryCategory = this._buildInventoryCategory(actor, tokenId);\n    let combatCategory = this._buildCombatActionsCategory(actor, tokenId);\n    let attributeCategory = this._buildAttributesCategory(\n      actor,\n      tokenId,\n      \"attributes\"\n    );\n    let skillCategory = this._buildSkillsCategory(actor, tokenId, \"skills\");\n\n    //this._combineCategoryWithList(result, this.i18n('tokenactionhud.inventory'), inventoryCategory); // combines the inventory category with the list with the title given by the second argument.\n    this._combineCategoryWithList(\n      result,\n      game.i18n.localize(\"OD6S.COMBAT\"),\n      combatCategory\n    );\n    this._combineCategoryWithList(\n      result,\n      game.i18n.localize(\"OD6S.ATTRIBUTES\"),\n      attributeCategory\n    );\n    this._combineCategoryWithList(\n      result,\n      game.i18n.localize(\"OD6S.SKILLS\"),\n      skillCategory\n    );\n\n    return result;\n  }\n\n  _buildCombatActionsCategory(actor, tokenId) {\n    let macroType = \"action\";\n    let result = this.initializeEmptyCategory(\"combatactions\");\n    let items = actor.items;\n\n    const resistanceTypes = [\"pr\", \"er\"];\n    let resistances = [];\n    for (let r of resistanceTypes) {\n      let name = game.i18n.localize(actor.data.data[r].label);\n      let encodedValue = [macroType, tokenId, r].join(this.delimiter);\n      resistances.push({ name: name, id: r, encodedValue: encodedValue });\n    }\n    let resistancesSubcategory = this.initializeEmptySubcategory();\n    resistancesSubcategory.actions = resistances;\n    this._combineSubcategoryWithCategory(\n      result,\n      game.i18n.localize(\"OD6S.RESISTANCE\"),\n      resistancesSubcategory\n    );\n\n    let weapons = items\n      .filter((i) => i.data.type === \"weapon\")\n      .sort((a, b) => a.name.localeCompare(b.name));\n    let meleeWeapons = items\n      .filter(\n        (i) => i.data.type === \"weapon\" && i.data.data.subtype === \"Melee\"\n      )\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .valueOf();\n    let weaponActions = this._produceMap(tokenId, weapons, macroType);\n    let weaponsSubcategory = this.initializeEmptySubcategory();\n    weaponsSubcategory.actions = weaponActions;\n    this._combineSubcategoryWithCategory(\n      result,\n      game.i18n.localize(\"OD6S.WEAPONS\"),\n      weaponsSubcategory\n    );\n\n    let combatActions = [];\n    for (let action in game.od6s.config.actions) {\n      if (game.od6s.config.actions[action].rollable) {\n        let name = game.i18n.localize(game.od6s.config.actions[action].name);\n        let encodedValue = [\n          macroType,\n          tokenId,\n          game.od6s.config.actions[action].type,\n        ].join(this.delimiter);\n        combatActions.push({\n          name: name,\n          id: action,\n          encodedValue: encodedValue,\n        });\n        if (name === game.i18n.localize(\"OD6S.ACTION_PARRY\")) {\n          for (let weapon = 0; weapon < meleeWeapons.length; weapon++) {\n            const name =\n              game.i18n.localize(\"OD6S.ACTION_PARRY\") +\n              \" (\" +\n              meleeWeapons[weapon].data.name +\n              \")\";\n            const encodedValue = [\n              \"parry\",\n              tokenId,\n              meleeWeapons[weapon].data._id,\n            ].join(this.delimiter);\n            combatActions.push({\n              name: name,\n              encodedValue: encodedValue,\n              id: meleeWeapons[weapon].data._id,\n            });\n          }\n        }\n      }\n    }\n\n    let actionsSubcategory = this.initializeEmptySubcategory();\n    actionsSubcategory.actions = combatActions;\n    this._combineSubcategoryWithCategory(\n      result,\n      game.i18n.localize(\"OD6S.ACTIONS\"),\n      actionsSubcategory\n    );\n    return result;\n  }\n\n  _buildAttributesCategory(actor, tokenId, categoryName) {\n    let macroType = \"attribute\";\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributes = actor.data.data.attributes;\n\n    let actions = Object.entries(attributes).map((e) => {\n      if (e[1].score === 0) return;\n      let name = game.od6s.config.attributes[e[0]].name;\n      let encodedValue = [macroType, tokenId, e[0]].join(this.delimiter);\n      return { name: name, id: e[0], encodedValue: encodedValue };\n    });\n\n    let attributesCategory = this.initializeEmptySubcategory();\n    attributesCategory.actions = actions.filter((a) => !!a);\n    this._combineSubcategoryWithCategory(\n      result,\n      categoryName,\n      attributesCategory\n    );\n    return result;\n  }\n\n  _buildSkillsCategory(actor, tokenId, categoryName) {\n    let macroType = \"skill\";\n    let result = this.initializeEmptyCategory(categoryName);\n    let items = actor.items;\n    let skills = items.filter(\n      (i) => i.data.type === \"skill\" || i.data.type === \"specialization\"\n    );\n    skills.sort((a, b) => a.name.localeCompare(b.name));\n    let skillActions = this._produceMap(tokenId, skills, macroType);\n    let skillsSubcategory = this.initializeEmptySubcategory();\n    skillsSubcategory.actions = skillActions;\n    this._combineSubcategoryWithCategory(\n      result,\n      categoryName,\n      skillsSubcategory\n    );\n    return result;\n  }\n\n  /** @private */\n  _produceMap(tokenId, itemSet, macroType) {\n    return itemSet\n      .filter((i) => !!i)\n      .map((i) => {\n        let encodedValue = [macroType, tokenId, i.data._id].join(\n          this.delimiter\n        );\n        return { name: i.name, encodedValue: encodedValue, id: i.data._id };\n      });\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\n\n// Could potentially handle rolls from exampleActionHandler ('../actions/exampleActionHandler.js')\nexport class RollHandlerCoreOD6S extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  /** @override */\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    switch (macroType) {\n      case \"action\":\n        actor.rollAction(actionId);\n        break;\n      case \"item\":\n        this.rollItemMacro(event, actor, actionId);\n        break;\n      case \"parry\":\n        this.rollItemMacro(event, actor, actionId, true);\n        break;\n      case \"attribute\":\n        actor.rollAttribute(actionId);\n        break;\n      case \"skill\":\n        this.rollItemMacro(event, actor, actionId);\n      default:\n        break;\n    }\n  }\n\n  rollItemMacro(event, actor, actionId, parry = false) {\n    actor.items.find((i) => i.data._id === actionId).roll(parry);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerOD6S as ActionHandler } from \"../actions/od6s/od6s-actions.js\";\nimport { RollHandlerCoreOD6S as Core } from \"../rollHandlers/od6s/od6s-base.js\";\nimport * as settings from \"../settings/od6s-settings.js\";\n\nexport class OD6SSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core OD6S\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerCthack extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n\n    let tokenId = token.data._id;\n\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n\n    if (!actor) return result;\n\n    let actorType = actor.data.type;\n    if (actorType != \"character\") return result;\n\n    result.actorId = actor._id;\n\n    let saves = this._getSaves(actor, tokenId);\n    let attributes = this._getAttributes(actor, tokenId);\n    let items = this._getItemList(actor, tokenId);\n\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.cthack.saves\"),\n      saves\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.cthack.attributes\"),\n      attributes\n    );\n    this._combineCategoryWithList(\n      result,\n      this.i18n(\"tokenactionhud.cthack.items\"),\n      items\n    );\n\n    if (settings.get(\"showHudTitle\")) result.hudTitle = token.data?.name;\n\n    return result;\n  }\n\n  /** @private */\n  _getSaves(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"saves\");\n    let attributesCategory = this.initializeEmptySubcategory();\n\n    let saves = Object.entries(actor.data.data.saves);\n\n    attributesCategory.actions = saves.map((c) => {\n      const saveId = c[0];\n      const name = game.cthack.config.saves[saveId];\n      const macroType = \"save\";\n      let encodedValue = [macroType, tokenId, c[0]].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: c[0] };\n    });\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.cthack.saves\"),\n      attributesCategory\n    );\n    return result;\n  }\n\n  /** @private */\n  _getAttributes(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"attributes\");\n    let attributesCategory = this.initializeEmptySubcategory();\n    let attributes = actor.getAvailableAttributes();\n\n    attributesCategory.actions = attributes.map((c) => {\n      const attributeId = c[0];\n\n      // The name depends of the settings\n      let name;\n      if (\n        attributeId === \"miscellaneous\" &&\n        game.settings.get(\"cthack\", \"MiscellaneousResource\") !== \"\"\n      ) {\n        name = game.settings.get(\"cthack\", \"MiscellaneousResource\");\n      } else name = game.cthack.config.attributes[attributeId];\n\n      let macroType = \"resource\";\n\n      if (attributeId === \"armedDamage\" || attributeId === \"unarmedDamage\") {\n        macroType = \"damage\";\n      }\n      let encodedValue = [macroType, tokenId, c[0]].join(this.delimiter);\n      return { name: name, encodedValue: encodedValue, id: c[0] };\n    });\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.cthack.attributes\"),\n      attributesCategory\n    );\n    return result;\n  }\n\n  /** @private */\n  _getItemList(actor, tokenId) {\n    let weapons = actor.items.filter((item) => item.data?.type === \"weapon\");\n    let weaponActions = weapons.map((w) =>\n      this._buildEquipmentItem(tokenId, actor, \"weapon\", w)\n    );\n    let weaponsCat = this.initializeEmptySubcategory();\n    weaponsCat.actions = weaponActions;\n\n    let equipment = actor.items.filter((item) => item.data?.type === \"item\");\n    let equipmentActions = equipment.map((e) =>\n      this._buildEquipmentItem(tokenId, actor, \"item\", e)\n    );\n    let equipmentCat = this.initializeEmptySubcategory();\n    equipmentCat.actions = equipmentActions;\n\n    let weaponsTitle = this.i18n(\"tokenactionhud.weapons\");\n    let equipmentTitle = this.i18n(\"tokenactionhud.equipment\");\n\n    let result = this.initializeEmptyCategory(\"inventory\");\n\n    this._combineSubcategoryWithCategory(result, weaponsTitle, weaponsCat);\n    this._combineSubcategoryWithCategory(result, equipmentTitle, equipmentCat);\n\n    return result;\n  }\n\n  /** @private */\n  _produceMap(tokenId, itemSet, macroType) {\n    return itemSet\n      .filter((i) => !!i)\n      .map((i) => {\n        let encodedValue = [macroType, tokenId, i.data._id].join(\n          this.delimiter\n        );\n        let item = { name: i.name, encodedValue: encodedValue, id: i.data._id };\n        return item;\n      });\n  }\n\n  /** @private */\n  _buildEquipmentItem(tokenId, actor, macroType, item) {\n    let action = this._buildItem(tokenId, actor, macroType, item);\n\n    return action;\n  }\n\n  /** @private */\n  _buildItem(tokenId, actor, macroType, item) {\n    let encodedValue = [macroType, tokenId, item._id].join(this.delimiter);\n    let img = this._getImage(item);\n    let result = {\n      name: item.name,\n      id: item._id,\n      encodedValue: encodedValue,\n      img: img,\n    };\n\n    return result;\n  }\n\n  _getImage(item) {\n    let result = \"\";\n    if (settings.get(\"showIcons\")) result = item.img ?? \"\";\n\n    return !result?.includes(\"icons/svg/mystery-man.svg\") ? result : \"\";\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseCthack extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) {\n      super.throwInvalidValueErr();\n    }\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let itemId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    switch (macroType) {\n      case \"save\":\n        this._handleSaves(macroType, event, actor, itemId);\n        break;\n      case \"resource\":\n        this._handleResources(macroType, event, actor, itemId);\n        break;\n      case \"damage\":\n        this._handleDamages(macroType, event, actor, itemId);\n        break;\n      case \"weapon\":\n        this._handleWeapon(macroType, event, actor, itemId);\n        break;\n      case \"item\":\n        this._handleItem(macroType, event, actor, itemId);\n        break;\n      case \"ability\":\n        this._handleAbility(macroType, event, actor, itemId);\n        break;\n    }\n  }\n\n  _handleSaves(macroType, event, actor, actionId) {\n    actor.rollSave(actionId);\n  }\n\n  _handleResources(macroType, event, actor, actionId) {\n    actor.rollResource(actionId);\n  }\n\n  _handleDamages(macroType, event, actor, actionId) {\n    actor.rollDamageRoll(actionId);\n  }\n\n  _handleWeapon(macroType, event, actor, actionId) {\n    let item = actor.items.get(actionId);\n    actor.rollMaterial(item);\n  }\n\n  _handleItem(macroType, event, actor, actionId) {\n    let item = actor.items.get(actionId);\n    actor.rollMaterial(item);\n  }\n\n  _handleAbility(macroType, event, actor, actionId) {\n    let usedPower = actor.items.filter((item) => item.data?._id === actionId);\n    actor.usePower(usedPower[0]);\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerCthack as ActionHandler } from \"../actions/cthack/cthack-actions.js\";\nimport { RollHandlerBaseCthack as Core } from \"../rollHandlers/cthack/cthack-base.js\";\nimport * as settings from \"../settings/cthack-settings.js\";\n\nexport class CthackSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    console.log(\"startup\");\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Cthack\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class ActionHandlerKg extends ActionHandler {\n  constructor(filterManager, categoryManager) {\n    super(filterManager, categoryManager);\n  }\n\n  /** @override */\n  async doBuildActionList(token, multipleTokens) {\n    let result = this.initializeEmptyActionList();\n\n    if (!token) return result;\n    let tokenId = token.id;\n    result.tokenId = tokenId;\n\n    let actor = token.actor;\n    if (!actor) return result;\n    result.actorId = actor.id;\n\n    let actorType = actor.data.type;\n    if (actorType === \"enemy\") {\n      let attack = this._getEnemyTalents(actor, tokenId);\n\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.attack\"),\n        attack\n      );\n    } else if (actorType === \"character\") {\n      let mainStat = this._getMainStat(actor, tokenId);\n      let subStat = this._getSubStat(actor, tokenId);\n      let spiritBurn = this._getSpiritBurn(actor, tokenId);\n      let talents = this._getTalents(actor, tokenId);\n      let items = this._getItems(actor, tokenId);\n\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.kamigakari.mainStats\"),\n        mainStat\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.kamigakari.subStats\"),\n        subStat\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.kamigakari.spiritBurn\"),\n        spiritBurn\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.talents\"),\n        talents\n      );\n      this._combineCategoryWithList(\n        result,\n        this.i18n(\"tokenactionhud.kamigakari.items\"),\n        items\n      );\n    }\n\n    return result;\n  }\n\n  _getMainStat(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"mainStat\");\n\n    let mainStat = Object.entries(actor.data.data.attributes).filter(\n      (a) => a[1]?.add !== undefined && a[1]?.base === undefined\n    );\n    let mainStatMap = mainStat.map((a) => {\n      return { id: a[0], name: a[1].label };\n    });\n    let actions = this._produceMap(tokenId, mainStatMap, \"stat\");\n    let mainStatCategory = this.initializeEmptySubcategory();\n    mainStatCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.mainStats\"),\n      mainStatCategory\n    );\n\n    return result;\n  }\n\n  _getSubStat(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"subStat\");\n\n    let subStat = Object.entries(actor.data.data.attributes).filter(\n      (a) => a[1]?.add === undefined && a[1]?.label !== undefined\n    );\n    let subStatMap = subStat.map((a) => {\n      return { id: a[0], name: a[1].label };\n    });\n    let actions = this._produceMap(tokenId, subStatMap, \"stat\");\n    let subStatCategory = this.initializeEmptySubcategory();\n    subStatCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.subStats\"),\n      subStatCategory\n    );\n\n    return result;\n  }\n\n  _getSpiritBurn(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"spiritBurn\");\n\n    let burns = [\n      {\n        id: \"transcend\",\n        name: this.i18n(\"tokenactionhud.kamigakari.transcend\"),\n      },\n      {\n        id: \"vitalIgnition\",\n        name: this.i18n(\"tokenactionhud.kamigakari.vitalIgnition\"),\n      },\n      {\n        id: \"conceptDestruction\",\n        name: this.i18n(\"tokenactionhud.kamigakari.conceptDestruction\"),\n      },\n    ];\n    let actions = this._produceMap(tokenId, burns, \"burn\");\n    let burnCategory = this.initializeEmptySubcategory();\n    burnCategory.actions = actions;\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.spiritBurn\"),\n      burnCategory\n    );\n\n    return result;\n  }\n\n  _getTalents(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"talent\");\n\n    let start = this._getTalentsByTiming(actor, tokenId, \"Start\");\n    let prep = this._getTalentsByTiming(actor, tokenId, \"Prep\");\n    let attack = this._getTalentsByTiming(actor, tokenId, \"Attack\");\n    let defense = this._getTalentsByTiming(actor, tokenId, \"Defense\");\n    let end = this._getTalentsByTiming(actor, tokenId, \"End\");\n    let constant = this._getTalentsByTiming(actor, tokenId, \"Constant\");\n    let free = this._getTalentsByTiming(actor, tokenId, \"Free\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.start\"),\n      start\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.prep\"),\n      prep\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.attack\"),\n      attack\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.free\"),\n      free\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.defense\"),\n      defense\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.end\"),\n      end\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.constant\"),\n      constant\n    );\n\n    return result;\n  }\n\n  _getEnemyTalents(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"talent\");\n\n    let start = this._getTalentsByTiming(actor, tokenId, \"Start\");\n    let prep = this._getTalentsByTiming(actor, tokenId, \"Prep\");\n    let attack = this._getTalentsByManyTiming(actor, tokenId, [\n      \"Attack\",\n      \"Melee\",\n      \"Physical\",\n      \"Ranged\",\n      \"Magical\",\n    ]);\n    let defense = this._getTalentsByTiming(actor, tokenId, \"Defense\");\n    let end = this._getTalentsByTiming(actor, tokenId, \"End\");\n    let constant = this._getTalentsByTiming(actor, tokenId, \"Constant\");\n    let free = this._getTalentsByTiming(actor, tokenId, \"Free\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.start\"),\n      start\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.prep\"),\n      prep\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.attack\"),\n      attack\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.free\"),\n      free\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.defense\"),\n      defense\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.end\"),\n      end\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.constant\"),\n      constant\n    );\n\n    return result;\n  }\n\n  _getTalentsByManyTiming(actor, tokenId, timings) {\n    let talent = actor.items.filter((a) =>\n      timings.includes(a.data.data.timing)\n    );\n    let talentAction = this._produceMap(tokenId, talent, \"item\");\n\n    let talentCategory = this.initializeEmptySubcategory();\n    talentCategory.actions = talentAction;\n\n    return talentCategory;\n  }\n\n  _getTalentsByTiming(actor, tokenId, timing) {\n    let talent = actor.items.filter((a) => a.data.data.timing === timing);\n    let talentAction = this._produceMap(tokenId, talent, \"item\");\n\n    let talentCategory = this.initializeEmptySubcategory();\n    talentCategory.actions = talentAction;\n\n    return talentCategory;\n  }\n\n  _getItems(actor, tokenId) {\n    let result = this.initializeEmptyCategory(\"item\");\n\n    let equipment = this._getItemByType(actor, tokenId, \"equipment\");\n    let sacraments = this._getItemByType(actor, tokenId, \"sacraments\");\n    let consumables = this._getItemByType(actor, tokenId, \"consumables\");\n\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.equipment\"),\n      equipment\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.sacraments\"),\n      sacraments\n    );\n    this._combineSubcategoryWithCategory(\n      result,\n      this.i18n(\"tokenactionhud.kamigakari.consumables\"),\n      consumables\n    );\n\n    return result;\n  }\n\n  _getItemByType(actor, tokenId, type) {\n    let item = actor.items.filter(\n      (a) => a.data.data.class === type || a.data.type == type\n    );\n    let itemAction = this._produceMap(tokenId, item, \"item\");\n\n    let itemCategory = this.initializeEmptySubcategory();\n    itemCategory.actions = itemAction;\n\n    return itemCategory;\n  }\n\n  /** @private */\n  _produceMap(tokenId, itemSet, macroType) {\n    return itemSet\n      .filter((i) => !!i)\n      .map((i) => {\n        let encodedValue = [macroType, tokenId, i.id].join(this.delimiter);\n        let item = { name: i.name, encodedValue: encodedValue, id: i.id };\n\n        if (macroType == \"item\" && i.data.data.quantity !== undefined)\n          item.name = i.name + \" X \" + i.data.data.quantity;\n\n        return item;\n      });\n  }\n}\n",
    "import { RollHandler } from \"../rollHandler.js\";\nimport * as settings from \"../../settings.js\";\n\nexport class RollHandlerBaseKg extends RollHandler {\n  constructor() {\n    super();\n  }\n\n  doHandleActionEvent(event, encodedValue) {\n    console.log(encodedValue);\n\n    let payload = encodedValue.split(\"|\");\n    if (payload.length != 3) super.throwInvalidValueErr();\n\n    let macroType = payload[0];\n    let tokenId = payload[1];\n    let actionId = payload[2];\n\n    let actor = super.getActor(tokenId);\n    let charType = actor.data.type;\n\n    if (charType === \"character\") {\n      switch (macroType) {\n        case \"stat\":\n          actor._rollDice(actionId);\n          break;\n\n        case \"burn\":\n          if (actionId === \"transcend\") actor._transcend();\n          else if (actionId === \"vitalIgnition\") actor._vitalIgnition();\n          else if (actionId === \"conceptDestruction\")\n            actor._conceptDestruction();\n          break;\n\n        case \"talent\":\n        case \"item\":\n          actor._echoItemDescription(actionId);\n          break;\n      }\n    } else if (charType === \"enemy\") {\n      switch (macroType) {\n        case \"item\":\n          actor._echoItemDescription(actionId);\n          break;\n      }\n    }\n  }\n}\n",
    "import { SystemManager } from \"./manager.js\";\nimport { ActionHandlerKg as ActionHandler } from \"../actions/kamigakari/kg-actions.js\";\nimport { RollHandlerBaseKg as Core } from \"../rollHandlers/kamigakari/kg-base.js\";\nimport * as settings from \"../settings/kamigakari-settings.js\";\n\nexport class KamigakariSystemManager extends SystemManager {\n  constructor(appName) {\n    super(appName);\n  }\n\n  /** @override */\n  doGetActionHandler(filterManager, categoryManager) {\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\n    return actionHandler;\n  }\n\n  /** @override */\n  getAvailableRollHandlers() {\n    let choices = { core: \"Core Kamigakari\" };\n\n    return choices;\n  }\n\n  /** @override */\n  doGetRollHandler(handlerId) {\n    return new Core();\n  }\n\n  /** @override */\n  doRegisterSettings(appName, updateFunc) {\n    settings.register(appName, updateFunc);\n  }\n}\n",
    "import { ActionHandler } from \"../actionHandler.js\";\r\n\r\nexport class TagmarActionHandler extends ActionHandler {\r\n  constructor(filterManager, categoryManager) {\r\n    super(filterManager, categoryManager);\r\n  }\r\n\r\n  /** @override */\r\n  async doBuildActionList(token, multipleTokens) {\r\n    let result = this.initializeEmptyActionList();\r\n\r\n    if (!token) return result;\r\n\r\n    let tokenId = token.data._id;\r\n\r\n    result.tokenId = tokenId;\r\n\r\n    let actor = token.actor;\r\n    if (!actor) return result;\r\n\r\n    if (actor.data.type == \"Inventario\") return result;\r\n\r\n    result.actorId = actor.id;\r\n\r\n    let combateCategory = this._buildCombateCategory(actor, tokenId);\r\n    this._combineCategoryWithList(result, \"Combate\", combateCategory); // combines the inventory category with the list with the title given by the second argument.\r\n\r\n    let habilidadesCategory = this._buildHabilidadesCategory(actor, tokenId);\r\n    this._combineCategoryWithList(result, \"Habilidades\", habilidadesCategory);\r\n\r\n    let testesCategory = this._buildTestesCategory(actor, tokenId);\r\n    this._combineCategoryWithList(result, \"Testes\", testesCategory);\r\n\r\n    return result;\r\n  }\r\n\r\n  _buildTestesCategory(actor, tokenId) {\r\n    let result = this.initializeEmptyCategory(\"testes\");\r\n    result.name = \"Testes\";\r\n    let macroType = \"att\";\r\n\r\n    let testes = [\r\n      { name: \"Intelecto\", id: \"INT\" },\r\n      { name: \"Aura\", id: \"AUR\" },\r\n      { name: \"Carisma\", id: \"CAR\" },\r\n      { name: \"Força\", id: \"FOR\" },\r\n      { name: \"Físico\", id: \"FIS\" },\r\n      { name: \"Agilidade\", id: \"AGI\" },\r\n      { name: \"Percepção\", id: \"PER\" },\r\n    ];\r\n\r\n    let resistencias = [\r\n      { name: \"R. Física\", id: \"Física\" },\r\n      { name: \"R. Magía\", id: \"Magía\" },\r\n    ];\r\n\r\n    let testesAction = this._produceMap(tokenId, testes, macroType);\r\n    let testesSubCategory = this.initializeEmptySubcategory();\r\n    testesSubCategory.actions = testesAction;\r\n    this._combineSubcategoryWithCategory(\r\n      result,\r\n      \"Atributos\",\r\n      testesSubCategory\r\n    );\r\n\r\n    let resistActions = this._produceMap(tokenId, resistencias, \"resist\");\r\n    let resistSubCategory = this.initializeEmptySubcategory();\r\n    resistSubCategory.actions = resistActions;\r\n    this._combineSubcategoryWithCategory(\r\n      result,\r\n      \"Resistência\",\r\n      resistSubCategory\r\n    );\r\n\r\n    if (actor.data.type == \"NPC\") {\r\n      let moralAction = this._produceMap(\r\n        tokenId,\r\n        [{ name: \"Moral\", id: \"Moral\" }],\r\n        \"moral\"\r\n      );\r\n      let moralSubCategory = this.initializeEmptySubcategory();\r\n      moralSubCategory.actions = moralAction;\r\n      this._combineSubcategoryWithCategory(result, \"Moral\", moralSubCategory);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _buildHabilidadesCategory(actor, tokenId) {\r\n    let result = this.initializeEmptyCategory(\"habilidades\");\r\n\r\n    result.name = \"Habilidades\";\r\n    let macroType = \"item\";\r\n\r\n    let items = actor.items;\r\n\r\n    let habilidades = items.filter((i) => i.data.type === \"Habilidade\");\r\n    habilidades.sort(function (a, b) {\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    let habActions = this._produceMap(tokenId, habilidades, macroType);\r\n    let habSubcategory = this.initializeEmptySubcategory();\r\n    habSubcategory.actions = habActions;\r\n    this._combineSubcategoryWithCategory(result, \"Habilidades\", habSubcategory);\r\n\r\n    return result;\r\n  }\r\n\r\n  _buildCombateCategory(actor, tokenId) {\r\n    let result = this.initializeEmptyCategory(\"combate\"); // string given is an ID not a title.\r\n\r\n    result.name = \"Combate\";\r\n    let macroType = \"item\";\r\n\r\n    let items = actor.items;\r\n\r\n    let weapons = items.filter((i) => i.data.type === \"Combate\");\r\n    weapons.sort(function (a, b) {\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    let weaponsActions = this._produceMap(tokenId, weapons, macroType);\r\n    let weaponsSubcategory = this.initializeEmptySubcategory();\r\n    weaponsSubcategory.actions = weaponsActions;\r\n    this._combineSubcategoryWithCategory(result, \"Ataques\", weaponsSubcategory);\r\n\r\n    let tecnicas = items.filter((i) => i.data.type === \"TecnicasCombate\");\r\n    tecnicas.sort(function (a, b) {\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    let tecnicasActions = this._produceMap(tokenId, tecnicas, macroType);\r\n    let tecnicasSubCategory = this.initializeEmptySubcategory();\r\n    tecnicasSubCategory.actions = tecnicasActions;\r\n    this._combineSubcategoryWithCategory(\r\n      result,\r\n      \"Técnicas de Combate\",\r\n      tecnicasSubCategory\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  /** @private */\r\n  _produceMap(tokenId, itemSet, macroType) {\r\n    return itemSet\r\n      .filter((i) => !!i)\r\n      .map((i) => {\r\n        let encodedValue = [macroType, tokenId, i.id].join(this.delimiter);\r\n        return { name: i.name, encodedValue: encodedValue, id: i.id };\r\n      });\r\n  }\r\n}\r\n",
    "import { RollHandler } from \"../rollHandler.js\";\r\n\r\n// Could potentially handle rolls from exampleActionHandler ('../actions/exampleActionHandler.js')\r\nexport class TagmarHandler extends RollHandler {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /** @override */\r\n  doHandleActionEvent(event, encodedValue) {\r\n    let payload = encodedValue.split(\"|\");\r\n\r\n    if (payload.length != 3) {\r\n      super.throwInvalidValueErr();\r\n    }\r\n\r\n    let macroType = payload[0];\r\n    let tokenId = payload[1];\r\n    let actionId = payload[2];\r\n\r\n    let actor = super.getActor(tokenId);\r\n\r\n    switch (macroType) {\r\n      case \"item\":\r\n        this.rollItemMacro(event, actor, actionId);\r\n        break;\r\n      case \"att\":\r\n        this.rollAtt(event, actor, actionId);\r\n        break;\r\n      case \"resist\":\r\n        this._dialogResistencia(event, actor, actionId);\r\n        break;\r\n      case \"moral\":\r\n        this.rollMoral(event, actor, actionId);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  rollMoral(event, actor, actionId) {\r\n    actor._rollTeste({ name: \"Moral\" });\r\n  }\r\n\r\n  _dialogResistencia(event, actor, tipo) {\r\n    let f_ataque;\r\n    let rolar = false;\r\n    let dialogContent = `\r\n        <div class=\"mediaeval\">\r\n            <label for=\"forca-ataque\">Força de Ataque:</label>\r\n            <input type=\"number\" name=\"forca-ataque\" id=\"forca-ataque\" value=\"1\" style=\"width: 60px; text-align: center;\"/>\r\n        </div>`;\r\n    let dialog = new Dialog({\r\n      title: \"Informe a força de ataque.\",\r\n      content: dialogContent,\r\n      buttons: {\r\n        Rolar: {\r\n          icon: '<i class=\"fas fa-dice-d20\"></i>',\r\n          label: \"Rolar Teste\",\r\n          callback: (html) => {\r\n            f_ataque = html.find(\"#forca-ataque\").val();\r\n            if (f_ataque) {\r\n              f_ataque = parseInt(f_ataque);\r\n              rolar = true;\r\n            }\r\n          },\r\n        },\r\n        Cancelar: {\r\n          icon: '<i class=\"fas fa-times\"></i>',\r\n          label: \"Cancelar\",\r\n        },\r\n      },\r\n      default: \"Cancelar\",\r\n      close: (html) => {\r\n        if (rolar)\r\n          actor._rollTeste({\r\n            name: \"Resistencia\",\r\n            id: tipo,\r\n            f_ataque: f_ataque,\r\n          });\r\n      },\r\n    });\r\n    dialog.render(true);\r\n  }\r\n\r\n  rollAtt(event, actor, actionId) {\r\n    actor._rollTeste({ name: \"Atributo\", id: actionId });\r\n  }\r\n\r\n  rollItemMacro(event, actor, actionId) {\r\n    actor.items.find((i) => i.id === actionId).rollTagmarItem();\r\n  }\r\n}\r\n",
    "import { SystemManager } from \"./manager.js\";\r\nimport { TagmarActionHandler as ActionHandler } from \"../actions/tagmar/tagmar-actions.js\";\r\nimport { TagmarHandler as Core } from \"../rollHandlers/tagmar/tagmar-base.js\";\r\n\r\nexport class TagmarSystemManager extends SystemManager {\r\n  constructor(appName) {\r\n    super(appName);\r\n  }\r\n\r\n  /** @override */\r\n  doGetActionHandler(filterManager, categoryManager) {\r\n    let actionHandler = new ActionHandler(filterManager, categoryManager);\r\n\r\n    return actionHandler;\r\n  }\r\n\r\n  /** @override */\r\n  getAvailableRollHandlers() {\r\n    let coreTitle = \"Tagmar RPG\";\r\n\r\n    let choices = { core: coreTitle };\r\n\r\n    return choices;\r\n  }\r\n\r\n  /** @override */\r\n  doGetRollHandler(handlerId) {\r\n    let rollHandler;\r\n    switch (handlerId) {\r\n      case \"core\":\r\n      default:\r\n        rollHandler = new Core();\r\n        break;\r\n    }\r\n\r\n    return rollHandler;\r\n  }\r\n\r\n  /** @override */\r\n  doRegisterSettings(appName, updateFunc) {\r\n    // settings.register(appName, updateFunc);\r\n  }\r\n}\r\n",
    "import { TokenActionHUD } from \"./tokenactionhud.js\";\nimport { SystemManagerFactory } from \"./managers/systemManagerFactory.js\";\nimport { registerHandlerbars } from \"./utilities/handlebars.js\";\n\nconst appName = \"token-action-hud\";\n\nlet systemManager;\n\nHooks.on(\"init\", () => {\n  registerHandlerbars();\n\n  let system = game.data.system.id;\n\n  systemManager = SystemManagerFactory.create(system, appName);\n  systemManager.registerSettings();\n});\n\nHooks.on(\"canvasReady\", async () => {\n  let user = game.user;\n\n  if (!user) throw new Error(\"Token Action HUD | No user found.\");\n\n  if (!game.tokenActionHUD) {\n    game.tokenActionHUD = new TokenActionHUD(systemManager);\n    await game.tokenActionHUD.init(user);\n  }\n\n  game.tokenActionHUD.setTokensReference(canvas.tokens);\n\n  Hooks.on(\"controlToken\", (token, controlled) => {\n    game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"updateToken\", (scene, token, diff, options, idUser) => {\n    // If it's an X or Y change assume the token is just moving.\n    if (diff.hasOwnProperty(\"y\") || diff.hasOwnProperty(\"x\")) return;\n    if (game.tokenActionHUD.validTokenChange(token))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"deleteToken\", (scene, token, change, userId) => {\n    if (game.tokenActionHUD.validTokenChange(token))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"hoverToken\", (token, hovered) => {\n    if (game.tokenActionHUD.validTokenHover(token, hovered))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"updateActor\", (actor) => {\n    if (game.tokenActionHUD.validActorOrItemUpdate(actor))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"deleteActor\", (actor) => {\n    if (game.tokenActionHUD.validActorOrItemUpdate(actor))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"deleteItem\", (item) => {\n    let actor = item.actor;\n    if (game.tokenActionHUD.validActorOrItemUpdate(actor))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"createItem\", (item) => {\n    let actor = item.actor;\n    if (game.tokenActionHUD.validActorOrItemUpdate(actor))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"updateItem\", (item) => {\n    let actor = item.actor;\n    if (game.tokenActionHUD.validActorOrItemUpdate(actor))\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"renderTokenActionHUD\", () => {\n    game.tokenActionHUD.applySettings();\n    game.tokenActionHUD.trySetPos();\n  });\n\n  Hooks.on(\"renderCompendium\", (source, html) => {\n    let metadata = source?.metadata;\n    if (\n      game.tokenActionHUD.isLinkedCompendium(\n        `${metadata?.package}.${metadata?.name}`\n      )\n    )\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"deleteCompendium\", (source, html) => {\n    let metadata = source?.metadata;\n    if (\n      game.tokenActionHUD.isLinkedCompendium(\n        `${metadata?.package}.${metadata?.name}`\n      )\n    )\n      game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"createCombat\", (combat) => {\n    game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"deleteCombat\", (combat) => {\n    game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"updateCombat\", (combat) => {\n    game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"updateCombatant\", (combat, combatant) => {\n    game.tokenActionHUD.update();\n  });\n\n  Hooks.on(\"forceUpdateTokenActionHUD\", () => {\n    game.tokenActionHUD.update();\n  });\n\n  game.tokenActionHUD.update();\n});\n",
    "import * as settings from \"../settings.js\";\n\nexport function registerHandlerbars() {\n  Handlebars.registerHelper(\"cap\", function (string) {\n    if (!string || string.length < 1) return \"\";\n    return string[0].toUpperCase() + string.slice(1);\n  });\n\n  Handlebars.registerHelper(\"ifCond\", function (v1, operator, v2, options) {\n    switch (operator) {\n      case \"==\":\n        return v1 == v2 ? options.fn(this) : options.inverse(this);\n      case \"===\":\n        return v1 === v2 ? options.fn(this) : options.inverse(this);\n      case \"!=\":\n        return v1 != v2 ? options.fn(this) : options.inverse(this);\n      case \"!==\":\n        return v1 !== v2 ? options.fn(this) : options.inverse(this);\n      case \"<\":\n        return v1 < v2 ? options.fn(this) : options.inverse(this);\n      case \"<=\":\n        return v1 <= v2 ? options.fn(this) : options.inverse(this);\n      case \">\":\n        return v1 > v2 ? options.fn(this) : options.inverse(this);\n      case \">=\":\n        return v1 >= v2 ? options.fn(this) : options.inverse(this);\n      case \"&&\":\n        return v1 && v2 ? options.fn(this) : options.inverse(this);\n      case \"||\":\n        return v1 || v2 ? options.fn(this) : options.inverse(this);\n      default:\n        return options.inverse(this);\n    }\n  });\n\n  Handlebars.registerHelper(\"activeText\", function (block) {\n    if (settings.get(\"activeCssAsText\")) {\n      return block.fn(this);\n    }\n\n    return block.inverse(this);\n  });\n\n  loadTemplates([\n    \"modules/token-action-hud/templates/category.hbs\",\n    \"modules/token-action-hud/templates/subcategory.hbs\",\n    \"modules/token-action-hud/templates/actionSet.hbs\",\n    \"modules/token-action-hud/templates/action.hbs\",\n    \"modules/token-action-hud/templates/tagdialog.hbs\",\n  ]);\n}\n",
    "import { BitDSystemManager } from \"./bitd.js\";\nimport { Dnd5eSystemManager } from \"./dnd5e.js\";\nimport { DemonlordSystemManager } from \"./demonlord.js\";\nimport { DungeonWorldSystemManager } from \"./dungeonworld.js\";\nimport { Pf1SystemManager } from \"./pf1.js\";\nimport { D35ESystemManager } from \"./d35e.js\";\nimport { Pf2eSystemManager } from \"./pf2e.js\";\nimport { SfrpgSystemManager } from \"./sfrpg.js\";\nimport { Sw5eSystemManager } from \"./sw5e.js\";\nimport { Wfrp4eSystemManager } from \"./wfrp4e.js\";\nimport { LancerSystemManager } from \"./lancer.js\";\nimport { SwadeSystemManager } from \"./swade.js\";\nimport { StarWarsFFGSystemManager } from \"./starwarsffg.js\";\nimport { Tormenta20SystemManager } from \"./tormenta20.js\";\nimport { SymbaroumSystemManager } from \"./symbaroum.js\";\nimport { AlienrpgSystemManager } from \"./alienrpg.js\";\nimport { OD6SSystemManager } from \"./od6s.js\";\nimport { CthackSystemManager } from \"./cthack.js\";\nimport { KamigakariSystemManager } from \"./kamigakari.js\";\nimport { TagmarSystemManager } from \"./tagmar.js\";\n\nexport class SystemManagerFactory {\n  static create(system, appName) {\n    switch (system) {\n      case \"blades-in-the-dark\":\n        return new BitDSystemManager(appName);\n      case \"demonlord\":\n        return new DemonlordSystemManager(appName);\n      case \"dnd5e\":\n        return new Dnd5eSystemManager(appName);\n      case \"dungeonworld\":\n        return new DungeonWorldSystemManager(appName);\n      case \"pf1\":\n        return new Pf1SystemManager(appName);\n      case \"D35E\":\n        return new D35ESystemManager(appName);\n      case \"od6s\":\n        return new OD6SSystemManager(appName);\n      case \"pf2e\":\n        return new Pf2eSystemManager(appName);\n      case \"sfrpg\":\n        return new SfrpgSystemManager(appName);\n      case \"sw5e\":\n        return new Sw5eSystemManager(appName);\n      case \"wfrp4e\":\n        return new Wfrp4eSystemManager(appName);\n      case \"lancer\":\n        return new LancerSystemManager(appName);\n      case \"swade\":\n        return new SwadeSystemManager(appName);\n      case \"starwarsffg\":\n        return new StarWarsFFGSystemManager(appName);\n      case \"tormenta20\":\n        return new Tormenta20SystemManager(appName);\n      case \"symbaroum\":\n        return new SymbaroumSystemManager(appName);\n      case \"alienrpg\":\n        return new AlienrpgSystemManager(appName);\n      case \"cthack\":\n        return new CthackSystemManager(appName);\n      case \"kamigakari\":\n        return new KamigakariSystemManager(appName);\n      case \"tagmar\":\n        return new TagmarSystemManager(appName);\n      case \"tagmar_rpg\":\n        return new TagmarSystemManager(appName);\n    }\n  }\n}\n"
  ],
  "names": [
    "Logger",
    "info",
    "args",
    "console",
    "log",
    "error",
    "debug",
    "game",
    "settings",
    "get",
    "ItemMacroOptions",
    "updateFunc",
    "value",
    "tokenActionHUD",
    "updateSettings",
    "appName",
    "setting",
    "TagDialog",
    "Dialog",
    "i18n",
    "toTranslate",
    "localize",
    "tagify",
    "constructor",
    "dialogData",
    "options",
    "super",
    "this",
    "data",
    "showDialog",
    "suggestions",
    "selected",
    "indexChoice",
    "title",
    "hbsData",
    "submitFunc",
    "_prepareHook",
    "content",
    "Handlebars",
    "compile",
    "template",
    "buttons",
    "accept",
    "icon",
    "label",
    "callback",
    "async",
    "html",
    "indexValue",
    "selection",
    "map",
    "c",
    "id",
    "type",
    "index",
    "find",
    "length",
    "cancel",
    "default",
    "render",
    "choices",
    "Hooks",
    "once",
    "app",
    "css",
    "$index",
    "val",
    "$tagFilter",
    "delimiters",
    "maxTags",
    "dropdown",
    "maxItems",
    "classname",
    "enabled",
    "closeOnSelect",
    "whitelist",
    "Tagify",
    "$tagifyBox",
    "$",
    "document",
    "addTags",
    "clearBtn",
    "on",
    "removeAllTags",
    "bind",
    "_onKeyDown",
    "event",
    "key",
    "target",
    "className",
    "includes",
    "preventDefault",
    "stopPropagation",
    "close",
    "defaultChoice",
    "submit",
    "CompendiumHelper",
    "getCompendiumChoicesAsTagifyEntries",
    "packs",
    "entries",
    "filter",
    "p",
    "metadata",
    "entity",
    "user",
    "isGM",
    "private",
    "package",
    "name",
    "exists",
    "getEntriesForActions",
    "delimiter",
    "getCompendiumEntries",
    "macroType",
    "getCompendiumMacroType",
    "e",
    "encodedValue",
    "_id",
    "join",
    "img",
    "getImage",
    "pack",
    "getCompendiumEntriesForFilter",
    "packEntries",
    "getIndex",
    "_getPlaylistEntries",
    "getContent",
    "reduce",
    "acc",
    "playlist",
    "sounds",
    "forEach",
    "s",
    "push",
    "item",
    "result",
    "settings.get",
    "TagDialogHelper",
    "showFilterDialog",
    "filterManager",
    "subcategoryId",
    "_showFilterDialog",
    "showSubcategoryDialogue",
    "categoryManager",
    "categoryId",
    "categoryName",
    "_showSubcategoryDialogue",
    "showCategoryDialog",
    "_showCategoryDialog",
    "submitCategories",
    "callAll",
    "submitSubcategories",
    "submitFilter",
    "elements",
    "isBlocklist",
    "setFilteredElements",
    "getSuggestions",
    "getFilteredElements",
    "topLabel",
    "placeholder",
    "clearButtonText",
    "indexExplanationLabel",
    "text",
    "parseInt",
    "getCategorySubcategoriesAsTagifyEntries",
    "subcats",
    "getExistingCategories",
    "arePush",
    "CategoryResizer",
    "resizeHoveredCategory",
    "catId",
    "jq",
    "myid",
    "replace",
    "category",
    "isOneLineFit",
    "hasClass",
    "actions",
    "resizeActions",
    "bottomLimit",
    "offset",
    "top",
    "rightLimit",
    "left",
    "maxRequiredWidth",
    "calculateMaxRequiredWidth",
    "shouldIncreaseWidth",
    "boxWidth",
    "getBoundingClientRect",
    "width",
    "cssWidth",
    "newWidth",
    "shouldShrinkWidth",
    "maxWidth",
    "each",
    "action",
    "totalWidth",
    "Array",
    "from",
    "children",
    "child",
    "childWidth",
    "marginWidth",
    "contentRect",
    "actionsRect",
    "right",
    "actionArray",
    "sort",
    "a",
    "b",
    "rows",
    "calculateRows",
    "columns",
    "calculateMaxRowButtons",
    "bottom",
    "actionsMinWidth",
    "currentTopOffset",
    "Math",
    "abs",
    "rowButtons",
    "rowButtonCounter",
    "indexOf",
    "max",
    "TokenActionHUD",
    "Application",
    "refresh_timeout",
    "tokens",
    "rendering",
    "categoryHovered",
    "defaultLeftPos",
    "defaultTopPos",
    "systemManager",
    "init",
    "getActionHandler",
    "rollHandler",
    "getRollHandler",
    "getFilterManager",
    "getCategoryManager",
    "updateRollHandler",
    "update",
    "setTokensReference",
    "defaultOptions",
    "mergeObject",
    "classes",
    "height",
    "scale",
    "background",
    "popOut",
    "minimizable",
    "resizable",
    "dragDrop",
    "tabs",
    "scrollY",
    "getScale",
    "parseFloat",
    "getBackground",
    "getData",
    "targetActions",
    "hovering",
    "settings.Logger",
    "activateListeners",
    "handleClick",
    "tagName",
    "currentTarget",
    "handleActionEvent",
    "handlePossibleFilterSubtitleClick",
    "closeCategory",
    "removeClass",
    "clearHoveredCategory",
    "openCategory",
    "closeAllCategories",
    "addClass",
    "setHoveredCategory",
    "contextmenu",
    "handlePossibleFilterButtonClick",
    "categoryTitle",
    "innerText",
    "outerText",
    "isCompendiumCategory",
    "click",
    "toggleCategory",
    "boundClick",
    "parentElement",
    "hover",
    "mousedown",
    "ev",
    "window",
    "hud",
    "body",
    "marginLeft",
    "marginTop",
    "dragElement",
    "elmnt",
    "elementDrag",
    "pos1",
    "pos3",
    "clientX",
    "pos2",
    "pos4",
    "clientY",
    "style",
    "offsetTop",
    "offsetLeft",
    "position",
    "zIndex",
    "closeDragElement",
    "onmousedown",
    "onmouseup",
    "onmousemove",
    "xPos",
    "innerWidth",
    "yPos",
    "innerHeight",
    "flags",
    "hudPos",
    "dragMouseDown",
    "getElementById",
    "parents",
    "applySettings",
    "trySetPos",
    "tokenId",
    "hudTitle",
    "token",
    "canvas",
    "placeables",
    "t",
    "setHoverPos",
    "setUserPos",
    "restoreCategoryHoverState",
    "pos",
    "Promise",
    "resolve",
    "check",
    "setTimeout",
    "worldTransform",
    "tx",
    "dimensions",
    "size",
    "scene",
    "_viewPosition",
    "ty",
    "mouseenter",
    "resetHud",
    "resetFlags",
    "resetPosition",
    "reset",
    "clearTimeout",
    "updateHud",
    "_getTargetToken",
    "controlled",
    "multipleTokens",
    "buildActionList",
    "showHudEnabled",
    "validTokenChange",
    "isRelevantToken",
    "actorId",
    "character",
    "some",
    "getTokenId",
    "validTokenHover",
    "hovered",
    "validActorOrItemUpdate",
    "actor",
    "isLinkedCompendium",
    "compendiumKey",
    "ct",
    "_userHasPermission",
    "hasPerm",
    "Filter",
    "filteredElements",
    "possibleChoices",
    "isArray",
    "updateFlag",
    "getFilteredNames",
    "f",
    "getFilteredIds",
    "setSuggestions",
    "flag",
    "setFlag",
    "clearFlag",
    "FilterManager",
    "filters",
    "savedFilters",
    "getFlag",
    "Object",
    "unsetFlag",
    "createOrGetFilter",
    "filterId",
    "_getFilter",
    "clearFilter",
    "splice",
    "SubcategoryType",
    "FilterSubcategory",
    "contents",
    "getFlagContents",
    "createFilter",
    "asTagifyEntry",
    "addToCategory",
    "actionHandler",
    "subcategory",
    "initializeEmptySubcategory",
    "_getActions",
    "canFilter",
    "_combineSubcategoryWithCategory",
    "CompendiumSubcategory",
    "compendiumId",
    "slugify",
    "replacement",
    "strict",
    "submitFilterSuggestions",
    "MacroHelper",
    "macros",
    "m",
    "getMacros",
    "getMacrosForFilter",
    "permissions",
    "permission",
    "userId",
    "macro",
    "MacroSubcategory",
    "categoryKey",
    "possibleMacros",
    "FilterCategory",
    "subcategories",
    "core",
    "addToActionList",
    "actionList",
    "categories",
    "existingCat",
    "addSubcategoriesToCategory",
    "doAddToActionList",
    "initializeEmptyCategory",
    "_combineCategoryWithList",
    "selectSubcategories",
    "subcat",
    "addCompendiumSubcategory",
    "addMacroSubcategory",
    "titleMap",
    "i",
    "removeSubcategory",
    "compendium",
    "hudCompendium",
    "choice",
    "prepareForDelete",
    "clearFilters",
    "getSubcategoriesAsTagifyEntries",
    "CategoryManager",
    "savedCategories",
    "cat",
    "values",
    "addCategoriesToActionList",
    "doAddCategories",
    "selections",
    "_updateCategory",
    "_createCategory",
    "idMap",
    "deleteCategory",
    "addCoreCategories",
    "existing",
    "tagifyCategory",
    "newCategory",
    "ActionList",
    "ActionCategory",
    "cssClass",
    "ActionSubcategory",
    "info1",
    "ActionSet",
    "set",
    "Action",
    "info2",
    "info3",
    "GenericActionHandler",
    "baseHandler",
    "addGenericCategories",
    "isMultipleTokens",
    "_addConditions",
    "_addUtilities",
    "utilityCat",
    "_addMultiUtilities",
    "_getUtilityList",
    "utility",
    "combatAction",
    "inCombat",
    "visibilityAction",
    "hidden",
    "every",
    "ActionHandler",
    "linkedCompendiumsGm",
    "linkedCompendiumsPlayer",
    "furtherActionHandlers",
    "genericActionHandler",
    "registerCoreCategories",
    "doBuildActionList",
    "_addGenericCategories",
    "_doBuildFurtherActions",
    "handler",
    "extendActionList",
    "addFurtherActionHandler",
    "initializeEmptyActionList",
    "initializeEmptyActionSet",
    "initializeEmptyAction",
    "undefined",
    "unshift",
    "subcategoryName",
    "_foundrySort",
    "ActionListExtender",
    "ItemMacroActionListExtender",
    "isModuleActive",
    "module",
    "modules",
    "active",
    "itemIds",
    "items",
    "getActor",
    "hasMacro",
    "isUnsupportedByMidiQoL",
    "itemMacroSetting",
    "addSubcategoryActions",
    "macroActions",
    "macroAction",
    "createItemMacroAction",
    "addActionsToSubcategory",
    "newAction",
    "keep",
    "substr",
    "ma",
    "findIndex",
    "RollHandler",
    "preRollHandlers",
    "getItem",
    "itemId",
    "getToken",
    "throwInvalidValueErr",
    "err",
    "Error",
    "registerKeyPresses",
    "handled",
    "prehandleActionEvent",
    "_isMultiGenericAction",
    "_doMultiGenericAction",
    "doHandleActionEvent",
    "addPreRollHandler",
    "rightClick",
    "isRightClick",
    "ctrl",
    "isCtrl",
    "alt",
    "isAlt",
    "shift",
    "isShift",
    "doRenderItem",
    "sheet",
    "isRenderItem",
    "originalEvent",
    "button",
    "altKey",
    "keyboard",
    "shiftKey",
    "payload",
    "split",
    "actionId",
    "toggleVisibility",
    "toggleCombat",
    "PreRollHandler",
    "CompendiumMacroPreHandler",
    "handleCompendium",
    "handleMacroCompendium",
    "handlePlaylistCompendium",
    "handleMacro",
    "entityId",
    "getEntity",
    "then",
    "execute",
    "actionPayload",
    "playlistId",
    "soundId",
    "sound",
    "AudioHelper",
    "play",
    "src",
    "path",
    "ItemMacroPreRollHandler",
    "_tryExecuteItemMacro",
    "executeMacro",
    "SystemManager",
    "doGetActionHandler",
    "addActionExtenders",
    "rollHandlerId",
    "settings.set",
    "doGetRollHandler",
    "addPreHandlers",
    "handlerId",
    "getAvailableRollHandlers",
    "registerSettings",
    "rollHandlers",
    "register",
    "hint",
    "scope",
    "config",
    "String",
    "onChange",
    "Boolean",
    "doRegisterSettings",
    "showBoth",
    "showItemMacro",
    "showOriginal",
    "Number",
    "range",
    "min",
    "step",
    "settings.registerSettings",
    "addHandler",
    "getModuleTitle",
    "ActionHandlerBitD",
    "resistances",
    "_getResistances",
    "attribute",
    "attributes",
    "attributeCategory",
    "skill_name",
    "skills",
    "skill",
    "attributeTitle",
    "resistanceCategory",
    "resistanceTitle",
    "RollHandlerBaseBitD",
    "rollAttributePopup",
    "rollItemMacro",
    "roll",
    "BitDSystemManager",
    "Core",
    "ActionHandler5e",
    "_buildSingleTokenList",
    "_buildMultipleTokenList",
    "list",
    "_buildCategories",
    "flat",
    "_buildItemsCategory",
    "_buildSpellsCategory",
    "_buildFeaturesCategory",
    "_buildSkillsCategory",
    "_buildAbilitiesCategory",
    "_buildEffectsCategory",
    "_buildConditionsCategory",
    "_buildUtilityCategory",
    "abilities",
    "savesTitle",
    "savesCat",
    "_getAbilityList",
    "checksTitle",
    "checksCat",
    "allowedTypes",
    "actors",
    "_addMultiSkills",
    "_addMultiAbilities",
    "abilitiesTitle",
    "_addMultiConditions",
    "equipped",
    "validItems",
    "_filterLongerActions",
    "_getEntityData",
    "quantity",
    "sortedItems",
    "_sortByItemSort",
    "activeEquipped",
    "_getActiveEquipment",
    "weaponActions",
    "w",
    "_buildEquipmentItem",
    "weaponsCat",
    "equipmentActions",
    "equipmentCat",
    "otherActions",
    "o",
    "otherCat",
    "allConsumables",
    "consumableActions",
    "_filterExpendedItems",
    "consumablesCat",
    "toolsActions",
    "toolsCat",
    "weaponsTitle",
    "equipmentTitle",
    "otherTitle",
    "consumablesTitle",
    "toolsTitle",
    "equipment",
    "activationTypes",
    "keys",
    "dnd5e",
    "abilityActivationTypes",
    "at",
    "equipmentData",
    "activation",
    "validSpells",
    "_filterNonpreparedSpells",
    "spellsSorted",
    "_sortSpellsByLevel",
    "_categoriseSpells",
    "spells",
    "aData",
    "bData",
    "level",
    "toUpperCase",
    "localeCompare",
    "sensitivity",
    "powers",
    "book",
    "spellSlotInfo",
    "pactInfo",
    "slotsAvailable",
    "startsWith",
    "pactIndex",
    "pactSpellEquivalent",
    "dispose",
    "spellData",
    "prep",
    "preparation",
    "mode",
    "prepType",
    "spellPreparationModes",
    "power",
    "slots",
    "levelName",
    "levelKey",
    "levelInfo",
    "lvl",
    "ignoreSlotsAvailable",
    "spell",
    "_buildItem",
    "_addSpellInfo",
    "powersTitle",
    "booksTitle",
    "components",
    "vocal",
    "charAt",
    "somatic",
    "material",
    "concentration",
    "ritual",
    "validFeats",
    "sortedFeats",
    "_categoriseFeats",
    "feats",
    "passive",
    "lair",
    "legendary",
    "activationType",
    "feat",
    "activeTitle",
    "legendaryTitle",
    "lairTitle",
    "passiveTitle",
    "abbr",
    "skillsActions",
    "skillId",
    "slice",
    "_getProficiencyIcon",
    "skillsCategory",
    "skillsTitle",
    "proficient",
    "abilityCategory",
    "rests",
    "_addIntiativeSubcategory",
    "shortRestValue",
    "longRestValue",
    "hp",
    "deathSaveAction",
    "inspirationAction",
    "inspiration",
    "_addEffectsSubcategories",
    "_addConditionsSubcategory",
    "effects",
    "tempCategory",
    "passiveCategory",
    "effectData",
    "disabled",
    "image",
    "isTemporary",
    "availableConditions",
    "CONFIG",
    "statusEffects",
    "condition",
    "conditions",
    "statusId",
    "conName",
    "combat",
    "combatant",
    "currentInitiative",
    "combatants",
    "initiative",
    "initiativeAction",
    "_addMultiIntiativeSubcategory",
    "isActive",
    "_addItemInfo",
    "itemData",
    "_getImage",
    "_getActionIcon",
    "recharge",
    "charged",
    "_getQuantityData",
    "_getUsesData",
    "_getConsumeData",
    "uses",
    "consumeType",
    "consume",
    "consumeId",
    "parentId",
    "lastIndexOf",
    "getProperty",
    "iData",
    "nonpreparableSpells",
    "prepared",
    "bonus",
    "crew",
    "reaction",
    "special",
    "minute",
    "hour",
    "day",
    "ActionHandler5eGroupByType",
    "api",
    "actionData",
    "getActorActionsData",
    "_buildActionCategory",
    "other",
    "delete",
    "_subCategorizeEquipment",
    "subCat",
    "predicate",
    "matches",
    "Set",
    "add",
    "MagicItemsPreRollHandler",
    "_magicItemMacro",
    "actionParts",
    "magicEffectId",
    "MagicItems",
    "MagicItemActionListExtender",
    "itemCategories",
    "magicItems",
    "magicItemsCategory",
    "magicItemsIds",
    "magicItem",
    "attuned",
    "_isItemAttuned",
    "_isItemEquipped",
    "charges",
    "ownedEntries",
    "entry",
    "effect",
    "magicItemAction",
    "consumption",
    "baseLevel",
    "attunement",
    "DND5E",
    "attunementTypes",
    "ATTUNED",
    "RollHandlerBase5e",
    "idToken",
    "_handleMacros",
    "rollAbilityMacro",
    "rollSkillMacro",
    "rollAbilitySaveMacro",
    "rollAbilityCheckMacro",
    "performUtilityMacro",
    "toggleEffect",
    "toggleCondition",
    "checkId",
    "rollAbility",
    "rollAbilityTest",
    "rollAbilitySave",
    "rollSkill",
    "needsRecharge",
    "useSpell",
    "rollRecharge",
    "shortRest",
    "longRest",
    "rollDeathSave",
    "performInitiativeMacro",
    "rollInitiative",
    "createCombatants",
    "effectId",
    "cub",
    "cubCondition",
    "findCondition",
    "hasCondition",
    "removeCondition",
    "addCondition",
    "toggleOverlay",
    "RollHandlerMinorQol5e",
    "versatile",
    "rollAttack",
    "rollDamage",
    "properties",
    "ver",
    "MinorQOL",
    "doCombinedRoll",
    "RollHandlerObsidian",
    "OBSIDIAN",
    "Items",
    "abl",
    "save",
    "skl",
    "Dnd5eSystemManager",
    "coreTitle",
    "MinorQol5e",
    "Obsidian5e",
    "systemSettings.register",
    "ActionHandlerDemonlord",
    "_getAttributes",
    "weapons",
    "_getItemsList",
    "talents",
    "_getTalents",
    "_getSpells",
    "_setFilterSuggestions",
    "_produceMap",
    "attributesMap",
    "_addMultiAttributes",
    "rollableAttributes",
    "talent",
    "groupname",
    "group",
    "groupCategory",
    "levelSubcategory",
    "talentEntry",
    "addTalent",
    "_sortSpellsByRank",
    "spellCategories",
    "rank",
    "tradition",
    "traditionCategory",
    "spellEntry",
    "addSpell",
    "_getCastingsData",
    "_filterElements",
    "filteredNames",
    "itemSet",
    "castings",
    "RollHandlerBaseDemonlord",
    "rollChallenge",
    "rollWeaponAttack",
    "rollTalent",
    "rollSpell",
    "restActor",
    "DemonlordSystemManager",
    "ActionHandlerDw",
    "addGmCompendiumsToList",
    "actorType",
    "damage",
    "_getDamage",
    "tags",
    "_getTags",
    "specialQualities",
    "_getSpecialQualities",
    "moves",
    "_getMovesNpc",
    "startingMoves",
    "_getMovesByType",
    "advancedMoves",
    "basicMoves",
    "specialMoves",
    "otherMoves",
    "_getSubcategoryByType",
    "_getAbilities",
    "movesSubcategory",
    "movesName",
    "chartsSubcategory",
    "chartsName",
    "treasureSubcategory",
    "treasureName",
    "damageCategory",
    "movesType",
    "itemTypes",
    "move",
    "moveType",
    "rollCategory",
    "_getRollMoves",
    "bookCategory",
    "_getBookMoves",
    "rollMoves",
    "rollType",
    "rollActions",
    "bookMoves",
    "bookActions",
    "categoryType",
    "spellsByLevel",
    "spellLevel",
    "levelCategory",
    "l",
    "spellAction",
    "abilitiesMap",
    "abilitiesCategory",
    "biography",
    "details",
    "instinctsCategory",
    "instinctRegex",
    "RegExp",
    "instinctMap",
    "matchAll",
    "encodeURIComponent",
    "instinctActions",
    "movesCategory",
    "movesRegex",
    "movesMap",
    "movesActions",
    "tagsString",
    "tag",
    "trim",
    "tagCategory",
    "qualities",
    "quality",
    "qualityCategory",
    "RollHandlerBaseDw",
    "charType",
    "_handleDamage",
    "_handleMove",
    "_handleAbility",
    "_handleMoveNpc",
    "_handleTextNpc",
    "damageDie",
    "damageMod",
    "misc",
    "flavour",
    "piercing",
    "formula",
    "templateData",
    "flavor",
    "rollMove",
    "ability",
    "mod",
    "toLowerCase",
    "decodeURIComponent",
    "DungeonWorldSystemManager",
    "settings.register",
    "ActionHandlerPf1",
    "_addAttacksList",
    "_addBuffsList",
    "_addConditionsList",
    "_addItemsList",
    "_addSpellsList",
    "_addFeatsList",
    "_addSkillsList",
    "_addSavesList",
    "_addChecksList",
    "_addUtilityList",
    "_addMultiSaves",
    "attacks",
    "_getAttacksList",
    "attackTitle",
    "buffs",
    "_getBuffsList",
    "buffsTitle",
    "conditionsTitle",
    "conditionsCategory",
    "_getConditionsList",
    "_getItemList",
    "itemsTitle",
    "_getSpellsList",
    "spellsTitle",
    "_getFeatsList",
    "featsTitle",
    "_getSkillsList",
    "saves",
    "_getSavesList",
    "checks",
    "utilityTitle",
    "validAttacks",
    "sortedAttacks",
    "cmbMacro",
    "cmbAction",
    "babMacro",
    "babAction",
    "bonusCat",
    "of",
    "meleeMacro",
    "meleeAction",
    "rangedMacro",
    "rangedAction",
    "validBuff",
    "sortedBuffs",
    "buffActions",
    "buffCat",
    "buffTitle",
    "incomsumableActions",
    "consumableType",
    "inconsumablesCat",
    "incomsumablesTitle",
    "concentrationSubcategory",
    "spellbook",
    "sb",
    "isSpontaneous",
    "spellbooks",
    "spontaneous",
    "spellbookName",
    "_createConcentrationAction",
    "arr",
    "hasOwnProperty",
    "firstLevelOfBook",
    "spellInfo",
    "categoryInfo",
    "_isSpellCastable",
    "maxAmount",
    "preparedAmount",
    "verbal",
    "focus",
    "atWill",
    "spontaneousPrepared",
    "school",
    "concentrationMacro",
    "disabledTitle",
    "allSkills",
    "isCustomSkill",
    "subSkills",
    "ss",
    "mainSkill",
    "rt",
    "PF1",
    "_getSkillRankInfo",
    "savingThrows",
    "savesCategory",
    "defensesCat",
    "defensesMacro",
    "defensesAction",
    "conditionTextures",
    "_getItemName",
    "identified",
    "identifiedName",
    "unidentified",
    "parent",
    "immediate",
    "free",
    "swift",
    "full",
    "round",
    "RollHandlerBasePf1",
    "rollConcentrationMacro",
    "rollCmbMacro",
    "rollMeleeAttackMacro",
    "rollRangedAttackMacro",
    "rollBAB",
    "adjustBuff",
    "adjustCondition",
    "rollDefenses",
    "rollCMB",
    "melee",
    "rollConcentration",
    "rollSavingThrow",
    "use",
    "skipDialog",
    "buffId",
    "buff",
    "conditionKey",
    "_onRest",
    "Pf1SystemManager",
    "ActionHandlerD35E",
    "cmbCat",
    "validFullAttacks",
    "fullAttackActions",
    "attackCat",
    "_s",
    "duplicate",
    "D35E",
    "acp",
    "RollHandlerBaseD35E",
    "D35ESystemManager",
    "PcActionHandlerPf2e",
    "actionHandlerpf2e",
    "_forFamiliar",
    "_forCharacter",
    "_getSaveList",
    "_getAttributeList",
    "utilities",
    "attack",
    "_getFamiliarAttack",
    "_getEffectsList",
    "toggles",
    "_getTogglesCategory",
    "strikes",
    "_getStrikesList",
    "_getActionsList",
    "_addTogglesCategories",
    "_addStrikesCategories",
    "toggleActions",
    "actionsClass",
    "toggleKey",
    "_getToggleKey",
    "inputName",
    "checked",
    "rollOptionPrefix",
    "substring",
    "att",
    "attMod",
    "totalModifier",
    "abbreviated",
    "actorSkills",
    "skillMap",
    "lore",
    "createSkillMap",
    "loreMap",
    "_produceActionMap",
    "NpcActionHandlerPf2e",
    "_getStrikesListNpc",
    "_getAttributeListNpc",
    "ActionHandlerPf2e",
    "pcActionHandler",
    "npcActionHandler",
    "allSkillSets",
    "minSkillSetSize",
    "setSkill",
    "PF2E",
    "skillsName",
    "attributesName",
    "restActions",
    "treatWoundsValue",
    "treatWoundsAction",
    "longRestAction",
    "takeBreatherValue",
    "takeBreatherAction",
    "utilityName",
    "containerId",
    "weaponList",
    "_buildItemActions",
    "armourList",
    "armourActions",
    "armour",
    "equipmentList",
    "consumablesList",
    "consumables",
    "_addContainerSubcategories",
    "allContainerIds",
    "container",
    "containerCategory",
    "containerActions",
    "bulkCapacity",
    "effectsList",
    "effectActions",
    "ready",
    "calculateAttackPenalty",
    "glyph",
    "variants",
    "attackMod",
    "currentMap",
    "currentBonus",
    "calculatePenalty",
    "variantsMap",
    "v",
    "imageUrl",
    "damageEncodedValue",
    "critEncodedValue",
    "ammoAction",
    "_ammoInfo",
    "strike",
    "selectedAmmoId",
    "filteredActions",
    "actionType",
    "_actionIsShort",
    "reactions",
    "exploration",
    "traits",
    "downtime",
    "spellcastingEntry",
    "bookName",
    "spellcastingEntryCategory",
    "getSpellData",
    "isPrepared",
    "isFlexible",
    "levels",
    "_setSpellSlotInfo",
    "_getSpellDcInfo",
    "expended",
    "time",
    "spellExpend",
    "spelldc",
    "dc",
    "firstSubcategory",
    "maxSlots",
    "valueSlots",
    "increaseId",
    "decreaseId",
    "isFocusPool",
    "resources",
    "increaseEncodedValue",
    "decreaseEncodedValue",
    "slotLevel",
    "_addComponentsInfo",
    "_addAttackDamageInfo",
    "spellType",
    "actorSaves",
    "saveMap",
    "k",
    "skillEntry",
    "attributeActions",
    "heroPoints",
    "_getAttributeAction",
    "doomedPoints",
    "doomed",
    "dyingPoints",
    "dying",
    "dyingVal",
    "dyingMax",
    "woundedPoints",
    "wounded",
    "attrName",
    "attrVal",
    "attrMax",
    "attributeAction",
    "itemList",
    "isPassive",
    "itemAction",
    "_produceAction",
    "actionValue",
    "RollHandlerBasePf2e",
    "BLIND_ROLL_MODE",
    "currentRollMode",
    "_isBlindRollClick",
    "_updateRollMode",
    "knownCharacters",
    "_handleUniqueActionsNpc",
    "_handleUniqueActionsChar",
    "_rollAbility",
    "_rollSkill",
    "_rollItem",
    "_rollSpell",
    "_performUtilityMacro",
    "_performToggleMacro",
    "_rollStrikeChar",
    "_rollSaveChar",
    "_rollAttributeChar",
    "_adjustSpellSlot",
    "_adjustAttribute",
    "_adjustCondition",
    "_rollFamiliarAttack",
    "_rollSaveNpc",
    "_rollStrikeNpc",
    "_rollAttributeNpc",
    "abilityBased",
    "getRollOptions",
    "rollAttribute",
    "rollSave",
    "spellbookId",
    "slot",
    "Item",
    "updateDocuments",
    "rollMode",
    "strikeName",
    "strikeType",
    "critical",
    "_consumeAmmo",
    "ammo",
    "ui",
    "notifications",
    "strikeId",
    "toChat",
    "rollNPCDamage",
    "rollNPCAttack",
    "spellId",
    "_expendSpell",
    "printCard",
    "_rollHeightenedSpell",
    "rollSpellDamage",
    "rollSpellAttack",
    "spellSlot",
    "updates",
    "getChatData",
    "spellLvl",
    "castLevel",
    "contextualData",
    "chatData",
    "speaker",
    "getActiveTokens",
    "canPopout",
    "pf2e",
    "origin",
    "uuid",
    "CONST",
    "CHAT_MESSAGE_TYPES",
    "OTHER",
    "whisper",
    "ChatMessage",
    "getWhisperRecipients",
    "u",
    "blind",
    "renderTemplate",
    "create",
    "renderSheet",
    "_executeMacroById",
    "getDocument",
    "property",
    "valueName",
    "Actor",
    "decreaseCondition",
    "increaseCondition",
    "input",
    "rollName",
    "optionName",
    "toggleRollOption",
    "Pf2eSystemManager",
    "ActionHandlerSfrpg",
    "_buildItemCategory",
    "_buildFeatsCategory",
    "_buildSkillCategory",
    "_buildSavesCategory",
    "_addStarshipWeapons",
    "_addCrewActions",
    "_addShields",
    "itemsCategoryName",
    "itemsMacroType",
    "itemsCategory",
    "_addSubcategoryByType",
    "_addSubcategoryByActionType",
    "miscFeats",
    "_addSubcategoryByItemList",
    "_addSubcategoryByLevel",
    "coreSkills",
    "SFRPG",
    "subname",
    "_getClassSkillIcon",
    "abilitiesActions",
    "saveActions",
    "subCategoryName",
    "subCategory",
    "itemsOfType",
    "_buildItemAction",
    "sr",
    "dismissible",
    "_getUsesOrUsageData",
    "_getCapacityData",
    "usage",
    "per",
    "capacity",
    "itemType",
    "groupedWeapons",
    "grouped",
    "groupName",
    "mount",
    "arc",
    "groupWeapons",
    "pcu",
    "capitalMount",
    "subName",
    "useStarshipAction",
    "groupedActions",
    "getDocuments",
    "role",
    "crewRole",
    "npcRole",
    "npcData",
    "_shouldShowCrewOptions",
    "groupActions",
    "resolvePointCost",
    "useNPCCrew",
    "numberOfUses",
    "limit",
    "capitalRole",
    "catName",
    "shields",
    "amounts",
    "quadrants",
    "side",
    "currShields",
    "amount",
    "capitalSide",
    "RollHandlerBaseSfrpg",
    "rollSaveMacro",
    "_handleShields",
    "_handleCrewAction",
    "shieldChange",
    "NaN",
    "shield",
    "newValue",
    "clamped",
    "_calcPossibleIncrease",
    "change",
    "overallPossible",
    "localPossible",
    "possibleChange",
    "SfrpgSystemManager",
    "ActionHandlerSw5e",
    "_getPowersList",
    "classFeatures",
    "_getClassFeaturesList",
    "classFeaturesTitle",
    "sw5e",
    "validPowers",
    "powersSorted",
    "_sortPowersByLevel",
    "_categorisePowers",
    "powerSubcategory",
    "powerSlotInfo",
    "powerPreparationModes",
    "alwaysPrepped",
    "_addPowerInfo",
    "validClassfeature",
    "sortedClassfeature",
    "RollHandlerBaseSw5e",
    "usePower",
    "Sw5eSystemManager",
    "ActionHandlerWfrp",
    "characteristics",
    "_getCharacteristics",
    "_getSkills",
    "magic",
    "prayers",
    "_getPrayers",
    "_getTraits",
    "types",
    "basicSubcategory",
    "_getBasicActions",
    "getItemTypes",
    "filtered",
    "basicActions",
    "unarmed",
    "unarmedAction",
    "stompValue",
    "stompAction",
    "improvisedValue",
    "improvisedAction",
    "dodgeValue",
    "dodgeAction",
    "characteristicsCategory",
    "abrev",
    "transMelee",
    "transRanged",
    "meleeSkills",
    "meleeId",
    "meleeCat",
    "filteredMeleeSkills",
    "rangedSkills",
    "rangedId",
    "rangedCat",
    "filteredRangedSkills",
    "basicSkills",
    "basicId",
    "basicSkillsCat",
    "filteredBasicSkills",
    "advancedSkills",
    "advancedId",
    "advancedSkillsCat",
    "filteredAdvancedSkills",
    "petties",
    "pettyCategory",
    "loresCategorised",
    "output",
    "loreType",
    "loreCategory",
    "blessings",
    "blessingCategory",
    "miraclesCategorised",
    "prayer",
    "miracleType",
    "miracleCategory",
    "rollableTalents",
    "rollable",
    "rollableCategory",
    "unrollableTalents",
    "unrollableCategory",
    "included",
    "rollableTraits",
    "unrollableTraits",
    "RollHandlerBaseWfrp4e",
    "bypassData",
    "bypass",
    "setupCharacteristic",
    "setupData",
    "basicTest",
    "postItem",
    "dodge",
    "stomp",
    "improvise",
    "promise",
    "setupWeapon",
    "loading",
    "loaded",
    "weaponTest",
    "castSpell",
    "setupPrayer",
    "prayerTest",
    "setupTrait",
    "traitTest",
    "setupSkill",
    "wfrp4e",
    "systemItems",
    "improv",
    "spellDialog",
    "Wfrp4eSystemManager",
    "ActionHandlerLancer",
    "mm",
    "derived",
    "_pilotCategory",
    "Pilot",
    "RegistryID",
    "_mechCategory",
    "_weaponsCategory",
    "Loadout",
    "WepMounts",
    "_systemsCategory",
    "SysMounts",
    "_npcBaseCategory",
    "_npcFeatureCategory",
    "_makeAction",
    "actionName",
    "option",
    "JSON",
    "stringify",
    "_makeItemSubCat",
    "Type",
    "Name",
    "_makeNPCItemSubCat",
    "_skillsSubCategory",
    "_talentsSubCategory",
    "_pilotGearSubCategory",
    "_pilotWeaponSubCategory",
    "_haseSubCategory",
    "_npcWeaponSubCat",
    "_npcTechSubCat",
    "_npcReactionSubCat",
    "_npcSystemSubCat",
    "_npcTraitSubCat",
    "_skills",
    "itemSubCats",
    "_talents",
    "CurrentRank",
    "Weapons",
    "Gear",
    "_statSubCategory",
    "_coreBonSubCategory",
    "_corePowerSubCategory",
    "Frame",
    "haseActions",
    "statActions",
    "corebonus",
    "CoreBonuses",
    "pilot",
    "frame",
    "CoreSystem",
    "PassiveName",
    "ActiveName",
    "MountType",
    "Slots",
    "Weapon",
    "loadout",
    "flatMap",
    "System",
    "system",
    "activations",
    "Actions",
    "Index",
    "deployables",
    "Deployables",
    "deployable",
    "concat",
    "RollHandlerBaseLancer",
    "actorID",
    "parse",
    "_rollHaseMacro",
    "_rollStatMacro",
    "_rollWeaponOrFeatureMacro",
    "_rollCoreBonusMacro",
    "_rollCoreActiveMacro",
    "_rollCorePassiveMacro",
    "_rollActivationMacro",
    "lancer",
    "prepareStatMacro",
    "prepareItemMacro",
    "pilotID",
    "itemID",
    "prepareCoreActiveMacro",
    "prepareCorePassiveMacro",
    "prepareActivationMacro",
    "LancerSystemManager",
    "ActionHandlerSwade",
    "_addAttributes",
    "_addSkills",
    "_addStatuses",
    "_addWoundsAndFatigue",
    "_addBennies",
    "_addPowers",
    "_addInventory",
    "_addEdgesAndHinderances",
    "attr",
    "nameData",
    "SWADE",
    "short",
    "long",
    "_buildDieString",
    "die",
    "_parseDie",
    "skillName",
    "pp",
    "powerPoints",
    "_addCounterSubcategory",
    "powersName",
    "groupedPowers",
    "_groupPowers",
    "g",
    "groupPowers",
    "_addPowersSubcategory",
    "powerName",
    "weaponsName",
    "_addItemSubcategory",
    "armourName",
    "shieldsName",
    "miscName",
    "woundsName",
    "wounds",
    "fatigueName",
    "fatigue",
    "countItem",
    "decreaseAction",
    "increaseAction",
    "edges",
    "edgesName",
    "hindrances",
    "hindName",
    "subcatName",
    "_buildPowerAction",
    "statuses",
    "status",
    "statusesName",
    "bennies",
    "benniesName",
    "spendName",
    "spendAction",
    "getName",
    "getAction",
    "tokenSubcat",
    "toString",
    "gmBennies",
    "gmMacroType",
    "gmSpendAction",
    "gmGetAction",
    "gmSubcat",
    "gmName",
    "wild",
    "dieMod",
    "wildMod",
    "sides",
    "modifier",
    "_getItemQuantity",
    "_getItemShots",
    "curr",
    "currentShots",
    "shots",
    "_getPowerPoints",
    "points",
    "RollHandlerBaseSwade",
    "_toggleStatus",
    "_adjustBennies",
    "_adjustGmBennies",
    "_rollAttribute",
    "_adjustAttributes",
    "show",
    "spendBenny",
    "_showDiceBenny",
    "getBenny",
    "benniesValue",
    "_createGmSpendMessage",
    "_createGmGetMessage",
    "templates",
    "spend",
    "gmadd",
    "dice3d",
    "benny",
    "Roll",
    "showForRoll",
    "curValue",
    "RollHandlerBR2SWSwade",
    "behavior",
    "ctrlKey",
    "brsw",
    "create_item_card_from_id",
    "message",
    "roll_item",
    "swade",
    "existingOnSheet",
    "create_attribute_card_from_id",
    "roll_attribute",
    "create_skill_card_from_id",
    "roll_skill",
    "SwadeSystemManager",
    "BR2SW",
    "ActionHandlerStarWarsFFG",
    "forcePowers",
    "skilltypes",
    "_getGMList",
    "_produceItemMap",
    "comparison",
    "skillCat",
    "_produceSkillMap",
    "RollHandlerBaseStarWarsFFG",
    "_rollDestiny",
    "ffg",
    "DiceHelpers",
    "rollItem",
    "_rollForcePower",
    "ImportHelpers",
    "findCompendiumEntityById",
    "forcedice",
    "stats",
    "forcePool",
    "dicePool",
    "DicePoolFFG",
    "force",
    "displayRollDialog",
    "messageText",
    "Map",
    "FFG",
    "DestinyGM",
    "skillname",
    "difficulty",
    "actorSheet",
    "characteristic",
    "rollSkillDirect",
    "StarWarsFFGSystemManager",
    "ActionHandlerT20",
    "pericias",
    "atributos",
    "qtd",
    "tormenta20",
    "listaAtivacao",
    "includeList",
    "ativacao",
    "execucao",
    "circulo",
    "preparada",
    "duracao",
    "unidade",
    "treinado",
    "movimento",
    "reacao",
    "livre",
    "completa",
    "duasRodadas",
    "verTexto",
    "RollHandlerBaseT20",
    "rollAtributo",
    "skillData",
    "rollPericia",
    "Tormenta20SystemManager",
    "ActionHandlerSymbaroum",
    "mysticalPowers",
    "_getMysticalPowers",
    "_getWeapons",
    "armors",
    "_getArmors",
    "filteredItems",
    "script",
    "powersCategory",
    "traitsCategory",
    "state",
    "weaponsCategory",
    "armorsCategory",
    "armor",
    "attributesCategory",
    "RollHandlerBaseSymbaroum",
    "_handleWeapon",
    "_handleArmor",
    "_handleMysticalPowers",
    "_handleTraits",
    "_handleAttributes",
    "usedItem",
    "rollWeapon",
    "rollArmor",
    "usedPower",
    "SymbaroumSystemManager",
    "ActionHandlerAlienrpg",
    "inventory",
    "agenda",
    "_getWeaponsList",
    "_getTalentsList",
    "_getAgendaList",
    "_getConsumablesList",
    "_getPowerList",
    "_getCreatureAttributes",
    "_getAttackList",
    "itemActions",
    "talentList",
    "talentActions",
    "agendaList",
    "agendaActions",
    "rollableConsumables",
    "consumablesMap",
    "powConsumables",
    "powerMap",
    "totalPower",
    "pencodedValue",
    "battributes",
    "rollableGeneral",
    "general",
    "generalMap",
    "header",
    "creatureAttack",
    "cAttackValue",
    "acidSplash",
    "aSplashValue",
    "headerActions",
    "health",
    "_getHeaderActions",
    "stress",
    "stressActions",
    "stressValue",
    "rollCritActions",
    "rollCrit",
    "rollSynCritActions",
    "rollSynCrit",
    "synthstress",
    "generalActions",
    "starving",
    "dehydrated",
    "exhausted",
    "freezing",
    "panic",
    "RollHandlerBaseAlienrpg",
    "attributename",
    "performMultiToggleUtilityMacro",
    "rData",
    "rollAbilityMod",
    "clabel",
    "nowRollItem",
    "rollItemMod",
    "spbutt",
    "lTemp",
    "consumablesCheck",
    "pTemp",
    "plabel",
    "performConditionMacro",
    "panicroll",
    "rAttData",
    "atttype",
    "rTables",
    "creatureAttackRoll",
    "aSplashData",
    "creatureAcidRoll",
    "togggleConditionState",
    "checkAndEndPanic",
    "allVisible",
    "allInCombat",
    "warn",
    "AlienrpgSystemManager",
    "ActionHandlerOD6S",
    "combatCategory",
    "_buildCombatActionsCategory",
    "_buildAttributesCategory",
    "skillCategory",
    "resistanceTypes",
    "r",
    "resistancesSubcategory",
    "meleeWeapons",
    "subtype",
    "valueOf",
    "weaponsSubcategory",
    "combatActions",
    "od6s",
    "weapon",
    "actionsSubcategory",
    "score",
    "skillActions",
    "skillsSubcategory",
    "RollHandlerCoreOD6S",
    "rollAction",
    "parry",
    "OD6SSystemManager",
    "ActionHandlerCthack",
    "_getSaves",
    "saveId",
    "cthack",
    "getAvailableAttributes",
    "attributeId",
    "RollHandlerBaseCthack",
    "_handleSaves",
    "_handleResources",
    "_handleDamages",
    "_handleItem",
    "rollResource",
    "rollDamageRoll",
    "rollMaterial",
    "CthackSystemManager",
    "ActionHandlerKg",
    "_getEnemyTalents",
    "mainStat",
    "_getMainStat",
    "subStat",
    "_getSubStat",
    "spiritBurn",
    "_getSpiritBurn",
    "_getItems",
    "mainStatMap",
    "base",
    "mainStatCategory",
    "subStatMap",
    "subStatCategory",
    "burns",
    "burnCategory",
    "start",
    "_getTalentsByTiming",
    "defense",
    "end",
    "constant",
    "_getTalentsByManyTiming",
    "timings",
    "timing",
    "talentAction",
    "talentCategory",
    "_getItemByType",
    "sacraments",
    "class",
    "itemCategory",
    "RollHandlerBaseKg",
    "_rollDice",
    "_transcend",
    "_vitalIgnition",
    "_conceptDestruction",
    "_echoItemDescription",
    "KamigakariSystemManager",
    "TagmarActionHandler",
    "combateCategory",
    "_buildCombateCategory",
    "habilidadesCategory",
    "_buildHabilidadesCategory",
    "testesCategory",
    "_buildTestesCategory",
    "testesAction",
    "testesSubCategory",
    "resistActions",
    "resistSubCategory",
    "moralAction",
    "moralSubCategory",
    "habilidades",
    "habActions",
    "habSubcategory",
    "weaponsActions",
    "tecnicas",
    "tecnicasActions",
    "tecnicasSubCategory",
    "TagmarHandler",
    "rollAtt",
    "_dialogResistencia",
    "rollMoral",
    "_rollTeste",
    "tipo",
    "f_ataque",
    "rolar",
    "Rolar",
    "Cancelar",
    "rollTagmarItem",
    "TagmarSystemManager",
    "registerHandlerbars",
    "registerHelper",
    "string",
    "v1",
    "operator",
    "v2",
    "fn",
    "inverse",
    "block",
    "loadTemplates",
    "SystemManagerFactory",
    "diff",
    "idUser",
    "source"
  ],
  "mappings": "2FAAO,MAAMA,OACXC,eAAeC,GACbC,QAAQC,IAAI,6BAA8BF,GAG5CG,gBAAgBH,GACdC,QAAQE,MAAM,8BAA+BH,GAG/CI,gBAAgBJ,GACVK,KAAKC,SAASC,IAAI,mBAAoB,UACxCT,OAAOC,KAAK,YAAaC,ICXxB,MAAMQ,EACA,oDADAA,EAEM,yDAFNA,EAGS,wDCChBC,aAAcC,IAClBZ,OAAOM,MAAM,oCACTC,KAAKM,gBAAgBN,KAAKM,eAAeC,kBAE/C,IAAIC,EAmOG,SAASN,IAAIO,GAClB,OAAOT,KAAKC,SAASC,IAAIM,EAASC,GC5O7B,MAAMC,kBAAkBC,OAC7BC,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAC3CE,OAAS,KAETC,YAAYC,EAAYC,GACtBC,MAAMD,GACNE,KAAKC,KAAOJ,EAGdK,kBACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAlB,UAAUmB,aAAaN,EAAaC,EAAUC,GAE9C,IAGIK,EAHWC,WAAWC,QACxB,yDAEYC,CAASN,GAEf,IAAIjB,UAAU,CACpBgB,MAAOA,EACPI,QAASA,EACTI,QAAS,CACPC,OAAQ,CACNC,KAAM,+BACNC,MAAOrC,KAAKY,KAAKE,SAAS,yBAC1BwB,SAAUC,MAAOC,IACf,IAIIC,EAJAC,EAAYhC,UAAUK,OAAOV,MAAMsC,KAAKC,IACnC,CAAEC,GAAID,EAAEC,GAAIxC,MAAOuC,EAAEvC,MAAOyC,KAAMF,EAAEE,SAEzCC,EAAQP,EAAKQ,KAAK,uCAElBD,EAAME,OAAS,IAAGR,EAAaM,EAAM,IAAI1C,aACvCuB,EAAWc,EAAWD,KAGhCS,OAAQ,CACNd,KAAM,+BACNC,MAAOrC,KAAKY,KAAKE,SAAS,2BAG9BqC,QAAS,WAGTC,QAAO,GAGXvB,oBAAoBwB,EAASX,EAAWjB,GACtC6B,MAAMC,KAAK,mBAAmB,CAACC,EAAKhB,EAAMtB,KACxCsB,EAAKiB,IAAI,SAAU,QAEnB,IAAIC,EAASlB,EAAKQ,KAAK,uCACnBU,EAAOT,OAAS,IACdxB,GAAaiC,EAAOC,IAAIlC,GAE5BiC,EAAOD,IAAI,aAAc,QACzBC,EAAOD,IAAI,QAAS,SAGtB,IAAIG,EAAapB,EAAKQ,KAAK,4CAE3B,GAAIY,EAAWX,OAAS,EAAG,CACzB,IAAI/B,EAAU,CACZ2C,WAAY,IACZC,QAAS,WACTC,SAAU,CACRC,SAAU,GACVC,UAAW,YACXC,QAAS,EACTC,eAAe,IAIfd,IAASnC,EAAQkD,UAAYf,GAEjC3C,UAAUK,OAAS,IAAIsD,OAAOT,EAAW,GAAI1C,GAE7C,IAAIoD,EAAaC,EAAEC,UAAUxB,KAAK,WAElCsB,EAAWb,IAAI,aAAc,QAC7Ba,EAAWb,IAAI,QAAS,QAEpBf,GAAWhC,UAAUK,OAAO0D,QAAQ/B,GAGxC,IAAIgC,EAAWlC,EAAKQ,KAAK,sCACzB0B,EAASC,GACP,QACAjE,UAAUK,OAAO6D,cAAcC,KAAKnE,UAAUK,SAEhD2D,EAASjB,IAAI,QAAS,SACtBiB,EAASjB,IAAI,QAAS,YAM5BqB,WAAWC,GAET,GAAkB,WAAdA,EAAMC,MAAqBD,EAAME,OAAOC,UAAUC,SAAS,UAG7D,OAFAJ,EAAMK,iBACNL,EAAMM,kBACCjE,KAAKkE,QAId,GACgB,UAAdP,EAAMC,KACN5D,KAAKC,KAAK8B,UACT4B,EAAME,OAAOC,UAAUC,SAAS,UACjC,CACAJ,EAAMK,iBACNL,EAAMM,kBACN,MAAME,EAAgBnE,KAAKC,KAAKa,QAAQd,KAAKC,KAAK8B,SAClD,OAAO/B,KAAKoE,OAAOD,KCrHlB,MAAME,iBACXzE,eAEA0E,6CAIE,OAFE,WAAY1F,KAAK2F,MAAMC,QAAU5F,KAAK2F,MAAMC,QAAU5F,KAAK2F,OAG1DE,QAAQC,GACS,CAAC,eAAgB,QAAS,YAAa,YACtCX,SAASW,EAAEC,SAASC,UAEtCH,QAAQC,GAAM9F,KAAKiG,KAAKC,OAASJ,EAAEK,UACnCxD,KAAKmD,IAEG,CAAEjD,GADC,GAAGiD,EAAEC,SAASK,WAAWN,EAAEC,SAASM,OAC5BhG,MAAOyF,EAAEC,SAAS1D,MAAOS,KAAM,WAIvDwD,cAActB,GACZ,QAAShF,KAAK2F,MAAMzF,IAAI8E,GAG1BuB,kCAAkCvB,EAAKwB,GACrC,IAAIZ,QAAgBH,iBAAiBgB,qBAAqBzB,GACtD0B,EAAYjB,iBAAiBkB,uBAAuB3B,GACxD,OAAOY,EAAQjD,KAAKiE,IAClB,IAAIC,EAAe,CAACH,EAAW1B,EAAK4B,EAAEE,KAAKC,KAAKP,GAC5CQ,EAAMvB,iBAAiBwB,SAASL,GACpC,MAAO,CAAEP,KAAMO,EAAEP,KAAMQ,aAAcA,EAAchE,GAAI+D,EAAEE,IAAKE,IAAKA,MAIvEL,8BAA8B3B,GAC5B,IAAIkC,EAAOlH,MAAM2F,OAAOzF,IAAI8E,GAC5B,IAAKkC,EAAM,MAAO,GAGlB,OAFyBA,EAAKnB,SAASC,QAGrC,IAAK,QACH,MAAO,kBACT,IAAK,WACH,MAAO,qBACT,QACE,MAAO,mBAIbmB,2CAA2CnC,GAGzC,aAFoBS,iBAAiBgB,qBAAqBzB,IAE3CrC,KAAKiE,IACX,CAAEvG,MAAOuG,EAAEP,KAAMxD,GAAI+D,EAAEE,QAIlCL,kCAAkCzB,GAChC,IAAIkC,EAAOlH,KAAK2F,MAAMzF,IAAI8E,GAC1B,IAAKkC,EAAM,MAAO,GAElB,IAAIE,EACFF,EAAKnE,MAAME,OAAS,EAAIiE,EAAKnE,YAAcmE,EAAKG,WAElD,GAA6B,aAAzBH,EAAKnB,SAASC,OAAuB,CAEvC,aADoBP,iBAAiB6B,oBAAoBJ,GAI3D,OAAOE,EAGTE,iCAAiCJ,GAE/B,aADsBA,EAAKK,cACVC,QAAO,CAACC,EAAKC,KAC5BA,EAASC,OAAOC,SAASC,IACvBJ,EAAIK,KAAK,CAAEhB,IAAK,GAAGY,EAASZ,OAAOe,EAAEf,MAAOT,KAAMwB,EAAExB,UAE/CoB,IACN,IAGLR,gBAAgBc,GACd,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,GCpFrD,MAAME,gBACXC,wBAAwBC,EAAeC,GACrCH,gBAAgBI,kBAAkBF,EAAeC,GAGnDE,+BAA+BC,EAAiBC,EAAYC,GAC1DR,gBAAgBS,yBACdH,EACAC,EACAC,GAIJE,0BAA0BJ,GACxBN,gBAAgBW,oBAAoBL,GAGtCM,8BAA8BN,EAAiBnF,EAASyE,SAChDU,EAAgBM,iBAAiBzF,EAASyE,GAChDxE,MAAMyF,QAAQ,6BAGhBC,iCAAiCR,EAAiBC,EAAYpF,SACtDmF,EAAgBQ,oBAAoBP,EAAYpF,GACtDC,MAAMyF,QAAQ,6BAGhBE,0BAA0Bb,EAAeK,EAAYS,EAAUC,SACvDf,EAAcgB,oBAAoBX,EAAYS,EAAUC,GAC9D7F,MAAMyF,QAAQ,6BAGhBT,yBAAyBF,EAAeC,GACtC,IAAI9G,EAAc6G,EAAciB,eAAehB,GAC3C7G,EAAW4G,EAAckB,oBAAoBjB,GAC7C5G,EAAc2G,EAAce,YAAYd,GAAiB,EAAI,EAE7D3G,EAAQ1B,KAAKY,KAAKE,SAAS,8BAE3Ba,EAAU,CACZ4H,SAAUvJ,KAAKY,KAAKE,SAAS,uCAC7B0I,YAAaxJ,KAAKY,KAAKE,SAAS,oCAChC2I,gBAAiBzJ,KAAKY,KAAKE,SAAS,8BACpC4I,sBAAuB1J,KAAKY,KAAKE,SAC/B,iCAEFiC,MAAO,CACL,CAAE1C,MAAO,EAAGsJ,KAAM3J,KAAKY,KAAKE,SAAS,6BACrC,CAAET,MAAO,EAAGsJ,KAAM3J,KAAKY,KAAKE,SAAS,+BAczCJ,UAAUY,WACRC,EACAC,EACAC,EACAC,EACAC,GAfeY,MAAOc,EAASZ,KAC/B,IAAI0G,EAAsC,GAAxBS,SAASnH,SACrByF,gBAAgBe,aACpBb,EACAC,EACAhF,EACA8F,MAcNR,gCAAgCH,EAAiBC,EAAYC,GAC3D,IAAInH,EAAckE,iBAAiBC,sCAC/BlE,EACFgH,EAAgBqB,wCAAwCpB,GAEtD/G,EACF1B,KAAKY,KAAKE,SAAS,sCACnB,KAAK4H,KAEH/G,EAAU,CACZ4H,SAAUvJ,KAAKY,KAAKE,SAAS,4CAC7B0I,YAAaxJ,KAAKY,KAAKE,SAAS,oCAChC2I,gBAAiBzJ,KAAKY,KAAKE,SAAS,+BActCJ,UAAUY,WACRC,EACAC,EACA,KACAE,EACAC,GAhBeY,MAAOc,EAASZ,KAC/B,IAAIqH,EAAUzG,EAAQV,KAAKC,IAClB,CAAEC,GAAID,EAAEC,GAAInB,MAAOkB,EAAEvC,MAAOyC,KAAMF,EAAEE,eAEvCoF,gBAAgBc,oBACpBR,EACAC,EACAqB,MAcNjB,2BAA2BL,GACzB,IAAIhH,EAAWgH,EAAgBuB,wBAC3BtI,EAAc+G,EAAgBwB,UAAY,EAAI,EAC9CtI,EAAQ1B,KAAKY,KAAKE,SAAS,mCAE3Ba,EAAU,CACZ4H,SAAUvJ,KAAKY,KAAKE,SAAS,yCAC7B0I,YAAaxJ,KAAKY,KAAKE,SAAS,oCAChC2I,gBAAiBzJ,KAAKY,KAAKE,SAAS,8BACpC4I,sBAAuB1J,KAAKY,KAAKE,SAC/B,uCAEFiC,MAAO,CACL,CAAE1C,MAAO,EAAGsJ,KAAM3J,KAAKY,KAAKE,SAAS,2BACrC,CAAET,MAAO,EAAGsJ,KAAM3J,KAAKY,KAAKE,SAAS,0BASzCJ,UAAUY,WACR,KACAE,EACAC,EACAC,EACAC,GAVeY,MAAOc,EAASZ,KAC/B,IAAIqF,EAA+B,GAAxB8B,SAASnH,SACdyF,gBAAgBY,iBAAiBN,EAAiBnF,EAASyE,OCnIhE,MAAMmC,gBACXC,6BAA6BC,GAK3B,IAAItH,EAJJ,SAASuH,GAAGC,GACV,MAAO,IAAMA,EAAKC,QAAQ,sBAAuB,QAG1CF,CAAGD,GACRI,EAAWhG,EAAE1B,GAEjB,IAAK0H,EAAS,GAAI,OAElB,IAAIzI,EAAUyI,EAASvH,KAAK,gBACxBwH,EAAeD,EAASE,SAAS,WACjCC,EAAUH,EAASvH,KAAK,gBAE5B,GAAuB,IAAnB0H,EAAQzH,OAAc,OAK1BgH,gBAAgBU,cAAcD,EAFJ,KAI1B,IAEIE,EAAcrG,EAAEC,UAAUxB,KAAK,WAAW6H,SAASC,IAAM,GACzDC,EAAaxG,EAAEC,UAAUxB,KAAK,YAAY6H,SAASG,KAAO,GAE1DC,EAAmBhB,gBAAgBiB,0BAA0BR,GACjE,KACET,gBAAgBkB,oBACdrJ,EACA4I,EACAO,EACAL,EACAG,EACAP,IAEF,CACA,IACIY,EADMV,EAAQ,GAAGW,wBACFC,MACfC,EAAWb,EAAQY,QAEvB,GAAIF,EAAWH,EAAkB,OAEjC,IAAIO,EAAWD,EAtBN,GAwBTtB,gBAAgBU,cAAcD,EAASc,GAIzC,KACEvB,gBAAgBwB,kBACd3J,EACA4I,EAlCW,IAoCXE,EACAG,EACAP,IAEF,CACA,IACIY,EADMV,EAAQ,GAAGW,wBACFC,MACfC,EAAWb,EAAQY,QAEvB,GAAIF,EA7CS,IA6CY,OAEzB,IAAII,EAAWD,EA5CN,GA8CTtB,gBAAgBU,cAAcD,EAASc,IAI3CN,iCAAiCR,GAC/B,IAAIgB,EAAW,EAoBf,OAlBAhB,EAAQiB,MAAK,WACX,IAAIC,EAASrH,EAAEnD,MACf,GAAIwK,EAAOnB,SAAS,+BAAgC,OAEpD,IAAIoB,EAAa,EACjBC,MAAMC,KAAKH,EAAOI,YAAYpE,SAAShF,IACrC,IAAIqJ,EAAQ1H,EAAE3B,GACVsJ,EAAaD,EAAMX,QACnBa,EACFvC,SAASqC,EAAMxI,IAAI,eACnBmG,SAASqC,EAAMxI,IAAI,gBAErBoI,GAAcK,EAAaC,KAGzBN,EAAaH,IAAUA,EAAWG,MAGjCH,EAGTP,2BACErJ,EACA4I,EACAO,EACAL,EACAG,EACAP,GAEA,IAAI4B,EAActK,EAAQ,GAAGuJ,wBACzBgB,EAAc3B,EAAQ,GAAGW,wBAE7B,GAAIgB,EAAYC,OAASvB,EAAY,OAAO,EAE5C,GAAIsB,EAAYf,OAASL,EAAkB,OAAO,EAElD,IAAIsB,EAAcT,MAAMC,KAAKjK,EAAQkB,KAAK,gBAAgBwJ,MACxD,CAACC,EAAGC,IAAMnI,EAAEkI,GAAG5B,SAASC,IAAMvG,EAAEmI,GAAG7B,SAASC,MAE1C6B,EAAO1C,gBAAgB2C,cAAcL,GACrCM,EAAU5C,gBAAgB6C,uBAAuBP,GACrD,QAAIH,EAAYW,QAAUnC,GAAeiC,GAAWF,IAASnC,GAM/DiB,yBACE3J,EACA4I,EACAsC,EACApC,EACAG,EACAP,GAEA,IAAI4B,EAActK,EAAQ,GAAGuJ,wBACzBgB,EAAc3B,EAAQ,GAAGW,wBAE7B,GAAIe,EAAYW,QAAUnC,EAAa,OAAO,EAE9C,GAAIyB,EAAYf,OAAS0B,EAAiB,OAAO,EAEjD,IAAIT,EAAcT,MAAMC,KAAKjK,EAAQkB,KAAK,gBAAgBwJ,MACxD,CAACC,EAAGC,IAAMnI,EAAEkI,GAAG5B,SAASC,IAAMvG,EAAEmI,GAAG7B,SAASC,MAE1C6B,EAAO1C,gBAAgB2C,cAAcL,GACrCM,EAAU5C,gBAAgB6C,uBAAuBP,GAErD,QACEF,EAAYC,OAASvB,IACpB4B,GAAQE,EAAU,GAAKrC,IAO5BoC,qBAAqBL,GACnB,IAAII,EAAO,EACX,IAAIM,EAAmB,EAYvB,OATAV,EAAY3E,SAAS6E,IACnB,IAAI5B,EAAStG,EAAEkI,GAAG5B,SAASC,IAEvBoC,KAAKC,IAAIF,EAAmBpC,IALjB,IAMb8B,IACAM,EAAmBpC,MAIhB8B,EAGTG,8BAA8BP,GAC5B,GAAIA,EAAYtJ,OAAS,EAAG,OAAOsJ,EAAYtJ,OAE/C,IAAImK,EAAa,GACjB,IAAIH,EAAmB,EACnBI,EAAmB,EAuBvB,OApBAd,EAAY3E,SAAS6E,IACnB,IAAI5B,EAAStG,EAAEkI,GAAG5B,SAASC,IAEvBoC,KAAKC,IAAIF,EAAmBpC,IALjB,GAMTwC,GAAoB,GAAGD,EAAWtF,KAAKuF,GAE3CJ,EAAmBpC,EACnBwC,EAAmB,GAEnBA,IAKAA,GAAoB,GACpBd,EAAYe,QAAQb,KAAOF,EAAYtJ,OAAS,GAEhDmK,EAAWtF,KAAKuF,MAGbH,KAAKK,OAAOH,GAGrBzC,qBAAqBD,EAASc,GAE5Bd,EAAQ/H,KAAI,WACV4B,EAAEnD,MAAMqC,IAAI,CAAE6H,MAAOE,EAAW,KAAM,YAAaA,EAAW,WCvM7D,MAAMgC,uBAAuBC,YAClC7M,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3C6M,gBAAkB,KAClBC,OAAS,KACTC,WAAY,EACZC,gBAAkB,GAClBC,eAAiB,IACjBC,cAAgB,GAEhB/M,YAAYgN,GACV7M,QACAC,KAAK4M,cAAgBA,EAGvBC,WAAWhI,GACT7E,KAAKsJ,cAAgBtJ,KAAK4M,cAAcE,iBAAiBjI,GAEzD7E,KAAK+M,YAAc/M,KAAK4M,cAAcI,iBACtChN,KAAKgH,cAAgBhH,KAAK4M,cAAcK,mBACxCjN,KAAKoH,gBAAkBpH,KAAK4M,cAAcM,qBAG5C/N,iBACEa,KAAKmN,oBACLnN,KAAKoN,SAGPD,oBACEnN,KAAK+M,YAAc/M,KAAK4M,cAAcI,iBAGxCK,mBAAmBd,GACjBvM,KAAKuM,OAASA,EAIhBe,4BACE,OAAOC,YAAYxN,MAAMuN,eAAgB,CACvCzM,SAAU,mDACVY,GAAI,mBACJ+L,QAAS,GACTtD,MAAO,IACPuD,OAAQ,GACR7D,KAAM,IACNF,IAAK,GACLgE,MAAO,EACPC,WAAY,OACZC,QAAQ,EACRC,aAAa,EACbC,WAAW,EACXxN,MAAO,mBACPyN,SAAU,GACVC,KAAM,GACNC,QAAS,KAIbC,WACE,MAAMR,EAAQS,WAAWtH,IAAa,UAEtC,OAAI6G,EAAQ,GAAY,GAEpBA,EAAQ,EAAU,EAEfA,EAGTU,gBACE,OAAOvH,IAAa,cAItBwH,QAAQvO,EAAU,IAChB,MAAMG,EAAOF,MAAMsO,UAOnB,OANApO,EAAKqJ,QAAUtJ,KAAKsO,cACpBrO,EAAKwB,GAAK,mBACVxB,EAAKsO,SAAW1H,IAAa,gBAC7B5G,EAAKyN,MAAQ1N,KAAKkO,WAClBjO,EAAK0N,WAAa3N,KAAKoO,gBACvBI,OAAgB7P,MAAM,YAAasB,GAC5BA,EAITwO,kBAAkBrN,GAChB,MAGMoJ,EAAS,cAETkE,YAAelJ,IACnB,IAAI3B,EAAS2B,EAAE3B,OAEQ,WAAnBA,EAAO8K,UAAsB9K,EAAS2B,EAAEoJ,cAAchE,SAAS,IAEnE,IAAI3L,EAAQ4E,EAAO5E,MACnB,IACEe,KAAK+M,YAAY8B,kBAAkBrJ,EAAGvG,GACtC,MAAOP,GACP8P,OAAgB9P,MAAM8G,KA6B1B,SAASsJ,kCAAkCtJ,GACzC,IAAI3B,EAAS2B,EAAE3B,OACf,GAAyB,IAArBA,EAAOpC,GAAGI,OAAc,OAE5B,IAAIJ,EAAKoC,EAAOpC,GAEhBqF,gBAAgBC,iBAAiBnI,KAAKM,eAAe8H,cAAevF,GAGtE,SAASsN,cAAcpL,GACrB,GAAI/E,KAAKM,eAAesN,UAAW,OACnC,IAAIrD,EAAWhG,EAAEnD,MAAM,GACvBmD,EAAEgG,GAAU6F,YAAY,SACxB,IAAIvN,EAAK0H,EAAS1H,GAClB7C,KAAKM,eAAe+P,qBAAqBxN,GAG3C,SAASyN,aAAavL,GACpB,IAAIwF,EAAWhG,EAAEnD,MAAM,IAQzB,SAASmP,mBAAmBxL,GAC1BvC,EAAKQ,KAAK,iBAAiBoN,YAAY,SARvCG,GACAhM,EAAEgG,GAAUiG,SAAS,SACrB,IAAI3N,EAAK0H,EAAS1H,GAClB7C,KAAKM,eAAemQ,mBAAmB5N,GACvCoH,gBAAgBC,sBAAsBrH,GAhDxCL,EAAKQ,KAAK4I,GAAQjH,GAAG,SAAUiC,IAC7BkJ,YAAYlJ,MAGdpE,EAAKQ,KAAK4I,GAAQ8E,aAAa9J,IAC7BkJ,YAAYlJ,MA8DdpE,EACGQ,KAAK,qBACL0N,YAAY,SAAU9J,GA7DzB,SAAS+J,gCAAgC/J,GACvC,IAAI3B,EAAS2B,EAAE3B,OACf,GAA4B,IAAxBA,EAAO5E,MAAM4C,OAAc,OAE/B,IAAIJ,EAAKoC,EAAO5E,MACZuQ,EAAgB3L,EAAO4L,WAAa5L,EAAO6L,UAE3C9Q,KAAKM,eAAekI,gBAAgBuI,qBAAqBlO,GAC3DqF,gBAAgBK,wBACdvI,KAAKM,eAAekI,gBACpB3F,EACA+N,GAGF1I,gBAAgBC,iBAAiBnI,KAAKM,eAAe8H,cAAevF,GA+CzC8N,CAAgC/J,KAE/DpE,EACGQ,KAAK,iBACLgO,MAAM,SAAUpK,GAAMsJ,kCAAkCtJ,KAC3DpE,EACGQ,KAAK,iBACL0N,YAAY,SAAU9J,GAAMsJ,kCAAkCtJ,KAE7DqB,IAAa,qBACfzF,EAAKQ,KAAK,qBAAqBgO,MAAM,SAxBvC,SAASC,eAAelM,GACtB,IACImM,EADA3G,EAAWhG,EAAEnD,KAAK+P,eAElB5M,EAAEgG,GAAUE,SAAS,UACvByG,EAAaf,cAActL,KAAKzD,KAAK+P,eACrCD,EAAWnM,KAEXmM,EAAaZ,aAAazL,KAAKzD,KAAK+P,eACpCD,EAAWnM,OAkBbvC,EAAKQ,KAAK,iBAAiBoO,MAAMd,aAAcH,eAGjD3N,EAAKQ,KApGkB,mBAoGGqO,WAAWC,IACnCA,EAAGlM,iBACHkM,EAAKA,GAAMC,OAAOxM,MAElBmD,gBAAgBW,oBAAoBzH,KAAKoH,oBAG3ChG,EAAKQ,KA5GkB,mBA4GGqO,WAAWC,IACnCA,EAAGlM,iBACHkM,EAAKA,GAAMC,OAAOxM,MAElB,IAAIyM,EAAMjN,EAAEC,SAASiN,MAAMzO,KAjHN,qBAkHjB0O,EAAa9H,SAAS4H,EAAI/N,IAAI,cAAc6G,QAAQ,KAAM,KAC1DqH,EAAY/H,SAAS4H,EAAI/N,IAAI,aAAa6G,QAAQ,KAAM,MAQ5D,SAASsH,YAAYC,GAanB,SAASC,YAAYlL,IACnBA,EAAIA,GAAK2K,OAAOxM,OACdK,iBAEF2M,EAAOC,EAAOpL,EAAEqL,QAChBC,EAAOC,EAAOvL,EAAEwL,QAChBJ,EAAOpL,EAAEqL,QACTE,EAAOvL,EAAEwL,QAETP,EAAMQ,MAAMvH,IAAM+G,EAAMS,UAAYJ,EAAOP,EAAY,KACvDE,EAAMQ,MAAMrH,KAAO6G,EAAMU,WAAaR,EAAOL,EAAa,KAC1DG,EAAMQ,MAAMG,SAAW,QACvBX,EAAMQ,MAAMI,OAAS,IAGvB,SAASC,mBAEPb,EAAMc,YAAc,KACpBnO,SAASoO,UAAY,KACrBpO,SAASqO,YAAc,KACvB,IAAIC,EACFjB,EAAMU,WAAaR,EAAOR,OAAOwB,WAC7BxB,OAAOwB,WACPlB,EAAMU,WAAaR,EACrBiB,EACFnB,EAAMS,UAAYJ,EAAOX,OAAO0B,YAAc,GAC1C1B,OAAO0B,YAAc,IACrBpB,EAAMS,UAAYJ,EACxBY,EAAOA,EAAO,EAAI,EAAIA,EACtBE,EAAOA,EAAO,EAAI,EAAIA,EAEpBF,GAAQjB,EAAMU,WAAaR,GAC3BiB,GAAQnB,EAAMS,UAAYJ,IAE1BL,EAAMQ,MAAMvH,IAAMkI,EAAO,KACzBnB,EAAMQ,MAAMrH,KAAO8H,EAAO,MAE5BlD,OAAgBlQ,KACd,0BAA0BoT,WAAcE,kCAE1ChT,KAAKiG,KAAKuI,OAAO,CACf0E,MAAO,CACL,mBAAoB,CAAEC,OAAQ,CAAErI,IAAKkI,EAAMhI,KAAM8H,OAtDvDjB,EAAMc,YAEN,SAASS,cAAcxM,IACrBA,EAAIA,GAAK2K,OAAOxM,OACdK,iBACF4M,EAAOpL,EAAEqL,QACTE,EAAOvL,EAAEwL,QAET5N,SAASoO,UAAYF,iBACrBlO,SAASqO,YAAcf,aAhB3BF,CAAYpN,SAAS6O,eAAe,qBACpC,IAAItB,EAAO,EACTG,EAAO,EACPF,EAAO,EACPG,EAAO,KAgEX5N,EAAEC,UACCxB,KAAK,qBACLsQ,QAAQ,oBACR7P,IAAI,SAAU,WAGnB8P,gBACOtL,IAAa,aAChB1D,EAAEC,UAAUxB,KAAK,gBAAgBS,IAAI,CACnCsJ,OAAQ,OACR,iBAAkB,mBAMxByG,YACE,IAAMpS,KAAKsO,gBAAiBtO,KAAKsO,cAAc+D,QAAU,OAEzD,IAAIC,EAAWnP,EAAEC,UAAUxB,KAAK,iBAC5B0Q,EAASzQ,OAAS,GACpByQ,EAASjQ,IAAI,OAAQiQ,EAAS,GAAGrI,wBAAwBwD,QAE3D,IAAI8E,EAAQC,QAAQjG,QAAQkG,WAAW7Q,MACpC8Q,GAAMA,EAAEzS,KAAKyF,MAAQ1F,KAAKsO,eAAe+D,UAExCxL,IAAa,iBAAmB0L,EAClCvS,KAAK2S,YAAYJ,GAEjBvS,KAAK4S,aAGP5S,KAAK6S,4BACL7S,KAAKwM,WAAY,EAGnBoG,aACE,IAEIhU,KAAKiG,KAAK5E,KAAK6R,MAAM,sBACrBlT,KAAKiG,KAAK5E,KAAK6R,MAAM,oBAAoBC,OAG3C,OAEF,IAAIe,EAAMlU,KAAKiG,KAAK5E,KAAK6R,MAAM,oBAAoBC,OAC/CrF,EAAiB1M,KAAK0M,eACtBC,EAAgB3M,KAAK2M,cAEzB,OAAO,IAAIoG,SAASC,KAClB,SAASC,QACP,IAAIxC,EAAQrN,SAAS6O,eAAe,oBAChCxB,GACFA,EAAMQ,MAAMtF,OAAS,KACrB8E,EAAMQ,MAAMvH,IACVoJ,EAAIpJ,IAAM,GAAKoJ,EAAIpJ,IAAMyG,OAAO0B,YAAc,EAC1ClF,EAAgB,KAChBmG,EAAIpJ,IAAM,KAChB+G,EAAMQ,MAAMrH,KACVkJ,EAAIlJ,KAAO,GAAKkJ,EAAIlJ,KAAOuG,OAAOwB,WAAa,EAC3CjF,EAAiB,KACjBoG,EAAIlJ,KAAO,KACjB6G,EAAMQ,MAAMG,SAAW,QACvBX,EAAMQ,MAAMI,OAAS,IACrB2B,KAEAE,WAAWD,MAAO,IAItBA,MAIJN,YAAYJ,GACV,OAAO,IAAIQ,SAASC,KAClB,SAASC,MAAMV,GACb,IAAI9B,EAAQtN,EAAE,qBACVsN,GACFA,EAAMpO,IAAI,SAAU,MACpBoO,EAAMpO,IACJ,OACAkQ,EAAMY,eAAeC,IAClBb,EAAMtS,KAAKiK,MAAQsI,OAAOa,WAAWC,KAAO,IAC3Cd,OAAOe,MAAMC,cAAc9F,MAC7B,MAEJ+C,EAAMpO,IAAI,MAAOkQ,EAAMY,eAAeM,GAAK,EAAI,MAC/ChD,EAAMpO,IAAI,WAAY,SACtBoO,EAAMpO,IAAI,SAAU,KACpB2Q,KAEAE,WAAWD,MAAO,IAItBA,CAAMV,MAIVlD,mBAAmBtG,GACjB/I,KAAKyM,gBAAkB1D,EAGzBkG,qBAAqBlG,GACf/I,KAAKyM,kBAAoB1D,IAAO/I,KAAKyM,gBAAkB,IAG7DoG,4BACE,GAA6B,KAAzB7S,KAAKyM,gBAAwB,OAEjC,IAAIhL,EAAK,IAAIzB,KAAKyM,kBACdtD,EAAWhG,EAAE1B,GAEjB,GAAK0H,EAAS,GAEd,GAAItC,IAAa,qBAAsB,CACxBsC,EAASvH,KAAK,qBAAqB,GACzCgO,aAEPzG,EAASuK,aAIbC,uBACQ3T,KAAK4T,aACX5T,KAAK6T,gBAGPA,gBACErF,OAAgBlQ,KACd,wLAEFM,KAAKiG,KAAKuI,OAAO,CACf0E,MAAO,CAAE,mBAAoB,CAAEC,OAAQ,CAAErI,IAAK,GAAIE,KAAM,SAE1D5J,KAAKoN,SAGPwG,mBACEpF,OAAgBlQ,KACd,8DAEI0B,KAAKoH,gBAAgB0M,cACrB9T,KAAKgH,cAAc8M,QACzB9T,KAAKoN,SAGPA,SAEMpN,KAAKsM,iBAAiByH,aAAa/T,KAAKsM,iBAC5CtM,KAAKsM,gBAAkB4G,WAAWlT,KAAKgU,UAAUvQ,KAAKzD,MAAO,KAG/DgU,kBACExF,OAAgB7P,MAAM,gBAEtB,IAAI4T,EAAQvS,KAAKiU,gBAAgBjU,KAAKuM,QAAQ2H,YAE1CC,EAAiBnU,KAAKuM,QAAQ2H,WAAWrS,OAAS,IAAM0Q,EAC5DvS,KAAKsO,oBAAsBtO,KAAKsJ,QAAQ8K,gBACtC7B,EACA4B,GAGGnU,KAAKqU,kBAKVrU,KAAKwM,WAAY,EACjBxM,KAAKgC,QAAO,IALVhC,KAAKkE,QASToQ,iBAAiB/B,GACf,OAAI1L,IAAa,iBAEb7G,KAAKuU,gBAAgBhC,IAAUA,EAAMiC,UAAY5V,KAAKiG,KAAK4P,WAAWhT,GAE9DzB,KAAKuU,gBAAgBhC,GAGnCgC,gBAAgBhC,GACd,IAAI2B,EAAalU,KAAKuM,QAAQ2H,WAC9B,OACEA,GAAYQ,MAAMhC,GAAMA,EAAEjR,KAAOzB,KAAK2U,WAAWpC,MACzB,IAAvB2B,GAAYrS,QACX2Q,QAAQjG,QAAQkG,YAAYiC,MACzBhC,GAAMA,EAAEjR,KAAOzB,KAAKsO,eAAe+D,UAK5CsC,WAAWpC,GACT,OAAOA,EAAM9Q,IAAM8Q,EAAM9Q,GAI3BmT,gBAAgBrC,EAAOsC,GACrB,OACEA,GACAhO,IAAa,iBACb0L,EAAM9Q,KAAOzB,KAAKsO,eAAe+D,QAKrCyC,uBAAuBC,GACrB,GAAIA,EAMF,OALAvG,OAAgB7P,MAAM,kCACtB6P,OAAgB7P,MACd,aAAaoW,EAAMtT,mCAAmCzB,KAAKsO,eAAekG,WAGvEO,EAKD/U,KAAKsO,eAAiByG,EAAMtT,KAAOzB,KAAKsO,cAAckG,SACxDhG,OAAgB7P,MAAM,uCACf,IAGT6P,OAAgB7P,MAAM,4CACf,IAVL6P,OAAgB7P,MAAM,mDACf,GAab0V,iBAQE,OAPA7F,OAAgB7P,MACd,mBACA,SAASC,KAAKiG,KAAKC,OACnB,mBAAmB+B,IAAa,oBAChC,qBAAqBA,IAAa,yBAG/BA,IAAa,oBAEXA,IAAa,qBAAuBjI,KAAKiG,KAAKC,MAGvDkQ,mBAAmBC,GAIjB,OAHAzG,OAAgB7P,MACd,gEAEKqB,KAAKoH,gBAAgB4N,mBAAmBC,GAIjDhB,gBAAgBC,EAAa,IAC3B,GAAIA,EAAWrS,OAAS,EAAG,OAAO,KAElC,GACwB,IAAtBqS,EAAWrS,QACX2Q,OAAOjG,QAAQkG,YACf7T,KAAKiG,KAAK4P,UACV,CACA,IAAK5N,IAAa,iBAAkB,OAAO,KAE3C,IAAI4N,EAAY7V,KAAKiG,KAAK4P,UACtBlC,EAAQC,QAAQjG,QAAQkG,WAAW7Q,MACpC8Q,GAAMA,EAAEqC,OAAOtT,KAAOgT,GAAWhT,KAEpC,OAAI8Q,GAEG,KAGT,IAAI2C,EAAKhB,EAAW,GAEpB,OAAKgB,GAEDlV,KAAKmV,mBAAmBD,GAAYA,EAFxB,KAQlBC,mBAAmB5C,EAAQ,IACzB,IAAIwC,EAAQxC,EAAMwC,MACdlQ,EAAOjG,KAAKiG,KAChB,OAAOjG,KAAKiG,KAAKC,MAAQiQ,GAAOK,QAAQvQ,EAAM,UC9iB3C,MAAMwQ,OACX5T,GAAK,GACLsG,aAAc,EACduN,iBAAmB,GACnBC,gBAAkB,GAElB3V,YAAY6B,GACVzB,KAAKyB,GAAKA,EAGZuG,0BAA0BF,EAAUC,GAC9B2C,MAAM8K,QAAQ1N,KAChB9H,KAAKsV,iBAAmBxN,EACxB9H,KAAK+H,YAAcA,SAGf/H,KAAKyV,aAGbxN,iBACE,OAAOjI,KAAKuV,gBAGdrN,sBACE,OAAOlI,KAAKsV,iBAGdI,mBAEE,OADa1V,KAAKsV,iBAAiB/T,KAAKoU,GAAMA,EAAE1W,QAIlD2W,iBAEE,OADa5V,KAAKsV,iBAAiB/T,KAAKoU,GAAMA,EAAElU,KAIlDoU,eAAe5T,GACTyI,MAAM8K,QAAQvT,KAAUjC,KAAKuV,gBAAkBtT,GAGrDwT,mBACE,IAAIK,EAAO,CACT/N,YAAa/H,KAAK+H,YAClBD,SAAU9H,KAAKsV,wBAEX1W,KAAKiG,KAAKkR,QAAQ,mBAAoB,WAAW/V,KAAKyB,KAAMqU,GAGpEE,wBACQpX,KAAKiG,KAAKkR,QAAQ,mBAAoB,UAAW,CACrD,CAAC,KAAK/V,KAAKyB,MAAO,QChDjB,MAAMwU,cACXC,QAAU,GACVrR,KAAO,KAEPjF,YAAYiF,GACV7E,KAAK6E,KAAOA,EAEZ,IAAIsR,EAAetR,EAAKuR,QAAQ,mBAAoB,WAC/CD,IAEL9X,OAAOM,MAAM,iBAAkBwX,GAE/BE,OAAO7R,QAAQ2R,GAAc3P,SAASmP,IACpC,IAAIlR,EAAS,IAAI4Q,OAAOM,EAAE,IAC1BlR,EAAOuD,oBAAoB2N,EAAE,GAAG7N,SAAU6N,EAAE,GAAG5N,aAC/C/H,KAAKkW,QAAQxP,KAAKjC,OAItBqP,cACE9T,KAAKkW,QAAU,SACTtX,KAAKiG,KAAKyR,UAAU,mBAAoB,WAGhDC,kBAAkBC,GAChB,GAAIxW,KAAKkW,QAAQxB,MAAMiB,GAAMA,EAAElU,KAAO+U,IACpC,OAAOxW,KAAKkW,QAAQtU,MAAM+T,GAAMA,EAAElU,KAEpC,IAAIgD,EAAS,IAAI4Q,OAAOmB,GAExB,OADAxW,KAAKkW,QAAQxP,KAAKjC,GACXA,EAGTwD,eAAeuO,GAGb,OAFaxW,KAAKyW,WAAWD,GAEfvO,iBAGhB4N,eAAeW,EAAUvU,GACVjC,KAAKyW,WAAWD,GAEtBX,eAAe5T,GAGxBiG,oBAAoBsO,GAGlB,OAFaxW,KAAKyW,WAAWD,GAEftO,sBAGhBwN,iBAAiBc,GAGf,OAFaxW,KAAKyW,WAAWD,GAEfd,mBAGhBE,eAAeY,GAGb,OAFaxW,KAAKyW,WAAWD,GAEfZ,iBAGhB5N,0BAA0BwO,EAAU1O,EAAUC,GAC5C,IAAItD,EAASzE,KAAKyW,WAAWD,SACvB/R,EAAOuD,oBAAoBF,EAAUC,GAG7C2O,kBAAkBF,GAChB,IAAI/R,EAASzE,KAAKkW,QAAQtU,MAAM+T,GAAMA,EAAElU,KAAO+U,IAE1C/R,UAECA,EAAOuR,YAEbhW,KAAKkW,QAAQS,OAAO3W,KAAKkW,QAAQhK,QAAQzH,GAAS,IAGpDsD,YAAYyO,GAGV,OAFaxW,KAAKyW,WAAWD,GAEfzO,YAGhB0O,WAAWD,GACT,OACExW,KAAKkW,QAAQtU,MAAM+T,GAAMA,EAAElU,KAAO+U,KAClCxW,KAAKuW,kBAAkBC,IC1FtB,MAAMI,EACJ,QADIA,EAEC,OCFP,MAAMC,kBACXjX,YAAYoH,EAAe1G,GACzBN,KAAKgH,cAAgBA,EACrBhH,KAAKM,MAAQA,EAGfmV,iBAAiBpO,GACf,IAAIyP,EAAW9W,KAAK+W,wBACdnY,KAAKiG,KAAKkR,QACd,mBACA,cAAc1O,mBAA4BrH,KAAKyB,KAC/CqV,GAIJR,gBAAgBjP,GACVA,SACIzI,KAAKiG,KAAKkR,QACd,mBACA,cAAc1O,kBACd,CAAE,CAAC,KAAKrH,KAAKyB,MAAO,OAI1BuV,eACEhX,KAAKgH,cAAcuP,kBAAkBvW,KAAKyB,IAG5CiV,cACE1W,KAAKgH,cAAc0P,YAAY1W,KAAKyB,IAGtCuG,0BAA0BF,EAAUC,SAC5B/H,KAAKgH,cAAcgB,oBACvBhI,KAAKyB,GACLqG,EACAC,GAIJkP,gBACE,MAAO,CAAExV,GAAIzB,KAAKyB,GAAIxC,MAAOe,KAAKM,MAAOoB,KAAM1B,KAAK0B,MAGtDwV,oBAAoBC,EAAehO,GACjC,IAAIiO,EAAcD,EAAcE,2BAA2BrX,KAAKyB,IAChE2V,EAAY9N,cAAgBtJ,KAAKsX,YAAYH,EAAc/R,WAC3DgS,EAAYG,WAAY,EACxBJ,EAAcK,gCACZrO,EACAnJ,KAAKM,MACL8W,GAIJL,kBACE,MAAO,CAAEtV,GAAIzB,KAAKyB,GAAInB,MAAON,KAAKM,MAAOoB,KAAM1B,KAAK0B,MAGtD4V,oBACE,MAAO,ICxDJ,MAAMG,8BAA8BZ,kBACzCjX,YAAYoH,EAAeK,EAAYqQ,EAAcpX,GACnDP,MAAMiH,EAAe1G,GACrBN,KAAKyB,GAAK,GAAG4F,KAAcqQ,IAAeC,QAAQ,CAChDC,YAAa,IACbC,QAAQ,IAEV7X,KAAK0X,aAAeA,EACpB1X,KAAK0B,KAAOkV,EAGdkB,gCACE,IAAI3X,QAAoBkE,iBAAiB0B,8BACvC/F,KAAK0X,cAEP1X,KAAKgH,cAAc6O,eAAe7V,KAAKyB,GAAItB,GAI7CmX,kBAAkBlS,GAChB,IAAIY,QAAoB3B,iBAAiBc,qBACvCnF,KAAK0X,aACLtS,GAGE8Q,EAAUlW,KAAKgH,cAAc4O,eAAe5V,KAAKyB,IACjDsG,EAAc/H,KAAKgH,cAAce,YAAY/H,KAAKyB,IAElD6H,EAAUtD,EAOd,OALIkQ,EAAQrU,OAAS,IACnByH,EAAUtD,EAAYvB,QACnBC,GAAMwR,EAAQnS,SAASW,EAAEjD,MAAQsG,KAG/BuB,EAITyN,kBACE,MAAO,CAAEtV,GAAIzB,KAAK0X,aAAcpX,MAAON,KAAKM,MAAOoB,KAAM1B,KAAK0B,OC1C3D,MAAMqW,YACXnY,eAEAsF,cAActB,EAAKoU,GACjB,GAAMA,EACJ,OAAOA,EAAOtD,MAAMuD,GAAMA,EAAEhY,KAAKyF,MAAQ9B,IAM3C,SAFE,SAAUhF,KAAKoZ,OAAOxT,QAAU5F,KAAKoZ,OAAOxT,QAAU5F,KAAKoZ,QAEvCtD,MAAMuD,GAAMA,EAAEhY,KAAKyF,MAAQ9B,IAGnDuB,4BAA4BC,GAC1B,IAAIE,EAAY,QAEhB,OADcyS,YAAYG,YACX3W,KAAK0W,IAClB,IAAIxS,EAAe,CAACH,EAAWA,EAAW2S,EAAEhY,KAAKyF,KAAKC,KAAKP,GACvDQ,EAAMmS,YAAYlS,SAASoS,GAC/B,MAAO,CACLhT,KAAMgT,EAAEhY,KAAKgF,KACbQ,aAAcA,EACdhE,GAAIwW,EAAEhY,KAAKyF,IACXE,IAAKA,MAKXuS,4BACE,OAAOJ,YAAYG,YAAY3W,KAAK0W,IAC3B,CAAExW,GAAIwW,EAAEhY,KAAKyF,IAAKzG,MAAOgZ,EAAEhY,KAAKgF,SAI3CiT,mBAIE,OAFE,WAAYtZ,KAAKoZ,OAAOxT,QAAU5F,KAAKoZ,OAAOxT,QAAU5F,KAAKoZ,QAEjDvT,QAAQwT,IACpB,IAAIG,EAAcH,EAAEhY,KAAKoY,WACzB,OAAID,EAAYxZ,KAAK0Z,QAAgBF,EAAYxZ,KAAK0Z,QAAU,EAEzDF,EAAYrW,QAAU,KAIjC8D,gBAAgB0S,GACd,IAAI3R,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAAS2R,EAAMtY,KAAK2F,KAE3CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,GCjDrD,MAAM4R,yBAAyB3B,kBACpCjX,YAAYoH,EAAeyR,EAAanY,GACtCP,MAAMiH,EAAe1G,GACrBN,KAAKyB,GAAK,GAAGgX,KAAenY,IAAQqX,QAAQ,CAC1CC,YAAa,IACbC,QAAQ,IAEV7X,KAAK0B,KAAOkV,EAGdkB,0BACE,IAAI3X,EAAc4X,YAAYI,qBAC9BnY,KAAKgH,cAAc6O,eAAe7V,KAAKyB,GAAItB,GAI7CmX,YAAYlS,GACV,IAAIsT,EAAiBX,YAAY5S,qBAAqBC,GAElD8Q,EAAUlW,KAAKgH,cAAc4O,eAAe5V,KAAKyB,IACjDsG,EAAc/H,KAAKgH,cAAce,YAAY/H,KAAKyB,IAEtD,OAAuB,IAAnByU,EAAQrU,OAAqB,GAEX6W,EAAejU,QAClCC,GAAMwR,EAAQnS,SAASW,EAAEjD,MAAQsG,KCxBjC,MAAM4Q,eACXC,cAAgB,GAChBnX,GAAK,GACLmC,IAAM,GACNtD,MAAQ,GACRoG,MAAO,EACPmS,MAAO,EAEPjZ,YAAYoH,EAAevF,EAAInB,EAAOoG,EAAMmS,GAC1C7Y,KAAKgH,cAAgBA,EACrBhH,KAAKyB,GAAKA,EACVzB,KAAK4D,IAAMnC,EAAGkW,QAAQ,CAAEC,YAAa,IAAKC,QAAQ,IAClD7X,KAAKM,MAAQA,EACbN,KAAK0G,KAAOA,EACZ1G,KAAK6Y,KAAOA,IAAQ,EAGtBC,sBAAsB3B,EAAe4B,GACnC,GAAIA,EAAWC,WAAWtE,MAAMlT,GAAMA,EAAEyD,OAASjF,KAAKM,QAAQ,CAC5D,IAAI2Y,EAAcF,EAAWC,WAAWpX,MACrCJ,GAAMA,EAAEyD,OAASjF,KAAKM,QAGzB,IAAK2Y,EAAYL,cAAc/W,OAAQ,aAEjC7B,KAAKkZ,2BAA2B/B,EAAe8B,cAE/CjZ,KAAKmZ,kBAAkBhC,EAAe4B,GAIhDI,wBAAwBhC,EAAe4B,GACrC,GAAI/Y,KAAK6Y,KAAM,OAEf,IAAIjS,EAASuQ,EAAciC,wBAAwBpZ,KAAKyB,IACxDmF,EAAOiS,KAAO7Y,KAAK6Y,WAEb7Y,KAAKkZ,2BAA2B/B,EAAevQ,GAErDuQ,EAAckC,yBACZN,EACA/Y,KAAKM,MACLsG,EACA5G,KAAK0G,MAITwS,iCAAiC/B,EAAehO,GAC9C,IAAK,IAAIiO,KAAepX,KAAK4Y,oBACrBxB,EAAYF,cAAcC,EAAehO,GAInDmQ,0BAA0BhY,GACxB,IAAK,IAAIiY,KAAUjY,EACbiY,EAAO7X,OAASkV,QACZ5W,KAAKwZ,yBAAyBD,GACjCvZ,KAAKyZ,oBAAoBF,GAGhC,GAAkC,IAA9BvZ,KAAK4Y,cAAc/W,OAAc,OAErC,IAAI6X,EAAWpY,EAAUC,KAAKgY,GAAWA,EAAOjZ,QAChD,IAAK,IAAIqZ,EAAI3Z,KAAK4Y,cAAc/W,OAAS,EAAG8X,GAAK,EAAGA,IAAK,CACvD,IAAIJ,EAASvZ,KAAK4Y,cAAce,GAC3BD,EAAS3V,SAASwV,EAAOjZ,cAAcN,KAAK4Z,kBAAkBD,SAG/D3Z,KAAKyV,aAGb+D,+BAA+BK,GAC7B,GAAI7Z,KAAK4Y,cAAclE,MAAMlT,GAAMA,EAAEkW,eAAiBmC,EAAWpY,KAC/D,OAEF,IAAK4C,iBAAiBa,OAAO2U,EAAWpY,IAAK,OAE7C,IAAIqY,EAAgB,IAAIrC,sBACtBzX,KAAKgH,cACLhH,KAAK4D,IACLiW,EAAWpY,GACXoY,EAAWvZ,OAEbwZ,EAAc9C,qBACR8C,EAAchC,0BAEpB9X,KAAK4Y,cAAclS,KAAKoT,GAG1BL,oBAAoBM,GAClB,GAAI/Z,KAAK4Y,cAAclE,MAAMlT,GAAMA,EAAElB,QAAUyZ,EAAOzZ,QAAQ,OAE9D,IAAI8W,EAAc,IAAIoB,iBACpBxY,KAAKgH,cACLhH,KAAK4D,IACLmW,EAAOzZ,OAET8W,EAAYJ,eACZI,EAAYU,0BAEZ9X,KAAK4Y,cAAclS,KAAK0Q,GAG1B3B,mBACE,IAAIrI,EAAS,CACX4L,WAAY,CACV,CAAChZ,KAAK4D,KAAM,CACVtD,MAAON,KAAKM,MACZmB,GAAIzB,KAAKyB,GACTiF,KAAM1G,KAAK0G,KACXmS,KAAM7Y,KAAK6Y,cAIXja,KAAKiG,KAAKuI,OAAO,CAAE0E,MAAO,CAAE,mBAAoB1E,KAEtD,IAAK,IAAIgK,KAAepX,KAAK4Y,oBACrBxB,EAAY3B,WAAWzV,KAAK4D,KAItCgW,wBAAwBjY,GACtB,IAAIyV,EAAcpX,KAAK4Y,cAAcjX,SAC/ByV,EAAYV,oBACZU,EAAYd,UAAUtW,KAAK4D,KACjC5D,KAAK4Y,cAAcjC,OAAOhV,EAAO,GAGnCqY,+BACQha,KAAKia,qBACLja,KAAKsW,YAGb2D,qBACE,IAAK,IAAIzY,KAAKxB,KAAK4Y,oBACXpX,EAAEkV,cAIZJ,wBACQ1X,KAAKiG,KAAKkR,QAAQ,mBAAoB,aAAc,CACxD,CAAC,KAAK/V,KAAK4D,OAAQ,OAIvBqT,gBACE,MAAO,CAAExV,GAAIzB,KAAKyB,GAAIxC,MAAOe,KAAKM,OAGpC4Z,kCACE,OAAOla,KAAK4Y,cAAcrX,KAAKC,GAAMA,EAAEyV,mBCxJpC,MAAMkD,gBACXnB,WAAa,GACbnU,KAAO,KAEPjF,YAAYiF,EAAMmC,GAChBhH,KAAK6E,KAAOA,EACZ7E,KAAKgH,cAAgBA,EAGvB8M,cACE9T,KAAKgZ,WAAa,SACZpa,KAAKiG,KAAKyR,UAAU,mBAAoB,cAGhDzJ,aACE,IAAIuN,EAAkBpa,KAAK6E,KAAKuR,QAAQ,mBAAoB,cAC5D,GAAIgE,EAAiB,CACnB5L,OAAgB7P,MAAM,oBAAqByb,GAE3C,IAAK,IAAIC,KAAOhE,OAAOiE,OAAOF,GAAkB,CAC9C,IAAI3Y,EAAK4Y,EAAI5Y,GACTnB,EAAQ+Z,EAAI/Z,MACZoG,EAAO2T,EAAI3T,OAAQ,EACnBmS,EAAOwB,EAAIxB,OAAQ,EACvB,IAAMpX,IAAMnB,EAAQ,SAEpB,IAAI6I,EAAW,IAAIwP,eACjB3Y,KAAKgH,cACLvF,EACAnB,EACAoG,EACAmS,GAGED,EAAgByB,EAAIzB,cACpBA,IACFA,EAAgBvC,OAAOiE,OAAO1B,SACxBzP,EAASmQ,oBAAoBV,IAErC5Y,KAAKgZ,WAAWtS,KAAKyC,KAK3BoR,gCAAgCpD,EAAe4B,GAC5BlS,IAAa,oCAGvBkS,EAAW1G,UACd0G,EAAW1G,QAAU,mBAGlB0G,EAAWvE,UACduE,EAAWvE,QAAU,oBAIpBuE,EAAW1G,eAEVrS,KAAKwa,gBAAgBrD,EAAe4B,GAG5CyB,sBAAsBrD,EAAe4B,GACnC,IAAK,IAAI5P,KAAYnJ,KAAKgZ,iBAClB7P,EAAS2P,gBAAgB3B,EAAe4B,GAIlDrR,uBAAuB+S,EAAY/T,GACjC+T,EAAaA,EAAWlZ,KAAKkF,IACpB,CACLhF,GAAIgF,EAAExH,MAAM0Y,QAAQ,CAAEC,YAAa,IAAKC,QAAQ,IAChD5Y,MAAOwH,EAAExH,UAGb,IAAK,IAAI8a,KAAUU,EAAY,CAC7B,IAAItR,EAAWnJ,KAAKgZ,WAAWpX,MAAMJ,GAAMA,EAAEC,KAAOsY,EAAOtY,KACtD0H,QACMnJ,KAAK0a,gBAAgBvR,EAAUzC,SADrB1G,KAAK2a,gBAAgBZ,EAAQrT,GAIpD,IAAIkU,EAAQH,EAAWlZ,KAAKkF,GAAMA,EAAEhF,KAEpC,GAA+B,IAA3BzB,KAAKgZ,WAAWnX,OAEpB,IAAK,IAAI8X,EAAI3Z,KAAKgZ,WAAWnX,OAAS,EAAG8X,GAAK,EAAGA,IAAK,CACpD,IAAIxQ,EAAWnJ,KAAKgZ,WAAWW,GACzBiB,EAAM7W,SAASoF,EAAS1H,KAAO0H,EAAS0P,YACtC7Y,KAAK6a,eAAelB,IAIhCmB,wBAAwB9B,GACtB,IAAK,IAAIH,KAAQG,EAAY,CAC3B,IAAI+B,EAAW/a,KAAKgZ,WAAWpX,MAAMyY,GAAQA,EAAI5Y,KAAOoX,EAAKpX,MACzDsZ,GAAaA,EAASlC,KAIfkC,SAGL/a,KAAK2a,gBACT,CAAElZ,GAAIoX,EAAKpX,GAAIxC,MAAO4Z,EAAK5T,OAC3B,GACA,IATA8V,EAASlC,MAAO,QACVkC,EAAStF,eAarBkF,sBAAsBK,EAAgBtU,EAAMmS,GAAO,GACjD,IAAIoC,EAAc,IAAItC,eACpB3Y,KAAKgH,cACLgU,EAAevZ,GACfuZ,EAAe/b,MACfyH,EACAmS,SAEIoC,EAAYxF,aAClBzV,KAAKgZ,WAAWtS,KAAKuU,GAGvBP,sBAAsBvR,EAAUzC,GAC9ByC,EAASzC,KAAOA,QACVyC,EAASsM,aAGjBoF,qBAAqBlZ,GACnB,IAAIwH,EAAWnJ,KAAKgZ,WAAWrX,SACzBwH,EAAS6Q,mBACfha,KAAKgZ,WAAWrC,OAAOhV,EAAO,GAGhCiG,0BAA0BP,EAAYpF,GACpC,IAAIkH,EAAWnJ,KAAKgZ,WAAWpX,MAAMJ,GAAMA,EAAEC,KAAO4F,IAE/C8B,SAECA,EAASmQ,oBAAoBrX,GAGrC0G,wBACE,OAAO3I,KAAKgZ,WAAWvU,QAAQjD,IAAOA,EAAEqX,OAAMtX,KAAKC,GAAMA,EAAEyV,kBAG7DtH,qBAAqBlO,GACnB,OAAOzB,KAAKgZ,WAAWtE,MAAMlT,GAAMA,EAAEC,KAAOA,IAG9CuT,mBAAmBvT,GACjB,OAAOzB,KAAKgZ,WAAWtE,MAAMlT,GAC3BA,EAAEoX,eAAelE,MAAMlT,GAAMA,EAAEkW,eAAiBjW,MAIpDmH,UACE,IAAIoQ,EAAahZ,KAAKgZ,WAAWvU,QAAQjD,IAAOA,EAAEqX,OAElD,OADgBG,EAAWvU,QAAQjD,GAAMA,EAAEkF,OAAM7E,QAC7BmX,EAAWnX,OAAS,EAG1C4G,wCAAwCpB,GACtC,IAAI8B,EAAWnJ,KAAKgZ,WAAWpX,MAAMJ,GAAMA,EAAEC,KAAO4F,IAEpD,GAAK8B,EAEL,OAAOA,EAAS+Q,mCCzKb,MAAMgB,WACXtb,cACEI,KAAKsS,SAAW,GAChBtS,KAAKqS,QAAU,GACfrS,KAAKwU,QAAU,GACfxU,KAAKgZ,WAAa,ICLf,MAAMmC,eACXvb,cACEI,KAAKyB,GAAK,GACVzB,KAAKiF,KAAO,GACZjF,KAAKob,SAAW,GAChBpb,KAAK4Y,cAAgB,ICLlB,MAAMyC,kBACXzb,cACEI,KAAKyB,GAAK,GACVzB,KAAKiF,KAAO,GACZjF,KAAKsb,MAAQ,GACbtb,KAAKuX,WAAY,EACjBvX,KAAKsJ,QAAU,GACftJ,KAAK4Y,cAAgB,ICPlB,MAAM2C,UACX3b,cACEI,KAAKwb,KAAM,EACXxb,KAAKsJ,QAAU,GACftJ,KAAKob,SAAW,ICJb,MAAMK,OACX7b,cACEI,KAAKyB,GAAK,GACVzB,KAAKiF,KAAO,GACZjF,KAAKyF,aAAe,GACpBzF,KAAKsb,MAAQ,GACbtb,KAAK0b,MAAQ,GACb1b,KAAK2b,MAAQ,GACb3b,KAAKob,SAAW,GAChBpb,KAAKgB,KAAO,GACZhB,KAAK4F,IAAM,ICVR,MAAMgW,qBACXC,YAEAjc,YAAYic,GACV7b,KAAK6b,YAAcA,EAGrBC,qBAAqBvJ,EAAOwG,EAAYgD,GACtC/b,KAAKgc,eAAezJ,EAAOwG,EAAYgD,GACvC/b,KAAKic,cAAc1J,EAAOwG,EAAYgD,GAIxCC,eAAezJ,EAAOwG,EAAYgD,IAGlCE,cAAc1J,EAAOwG,EAAYgD,GAC/B,IAAIG,EAAanD,EAAWC,WAAWpX,MAAMJ,GAAe,YAATA,EAAEC,KAOrD,GANKya,IACHA,EAAalc,KAAK6b,YAAYzC,wBAAwB,WACtD8C,EAAWjX,KAAOjF,KAAK6b,YAAYrc,KAAK,0BACxCuZ,EAAWC,WAAWtS,KAAKwV,IAGzBH,EAAkB,CACpB,MAAMxP,EAASiG,OAAOjG,OAAO2H,WAC7BlU,KAAKmc,mBAAmBD,EAAY3P,QAEpCvM,KAAKoc,gBAAgBF,EAAY3J,EAAM9Q,IAK3C2a,gBAAgBF,EAAY7J,GAC1B,IAAI/M,EAAY,UAEZ+W,EAAUrc,KAAK6b,YAAYxE,6BAK3BiF,EAAe,CACjB7a,GAAI,eACJgE,aALqB,CAACH,EAAW+M,EAAS,gBAAgB1M,KAC1D3F,KAAK6b,YAAYzW,WAKjBH,KAAMjF,KAAK6b,YAAYrc,KAAK,qCAS9B,GAPA8c,EAAalB,SAAW5I,OAAOjG,OAAOkG,WAAW7Q,MAC9C8Q,GAAMA,EAAEzS,KAAKyF,MAAQ2M,IACtBkK,SACE,SACA,GACJF,EAAQ/S,QAAQ5C,KAAK4V,GAEjB1d,KAAKiG,KAAKC,KAAM,CAClB,IAGI0X,EAAmB,CACrB/a,GAAI,mBACJgE,aALmB,CAACH,EAAW+M,EAAS,oBAAoB1M,KAC5D3F,KAAK6b,YAAYzW,WAKjBH,KAAMjF,KAAK6b,YAAYrc,KAAK,oCAE9Bgd,EAAiBpB,SAAY5I,OAAOjG,OAAOkG,WAAW7Q,MACnD8Q,GAAMA,EAAEzS,KAAKyF,MAAQ2M,IACtBpS,KAAKwc,OAEH,GADA,SAEJJ,EAAQ/S,QAAQ5C,KAAK8V,GAGvBxc,KAAK6b,YAAYrE,gCACf0E,EACAlc,KAAK6b,YAAYrc,KAAK,wBACtB6c,GAKJF,mBAAmBD,EAAY3P,GAC7B,IAAIjH,EAAY,UACZ+M,EAAU,QAEVgK,EAAUrc,KAAK6b,YAAYxE,6BAK3BiF,EAAe,CACjB7a,GAAI,eACJgE,aALqB,CAACH,EAAW+M,EAAS,gBAAgB1M,KAC1D3F,KAAK6b,YAAYzW,WAKjBH,KAAMjF,KAAK6b,YAAYrc,KAAK,qCAK9B,GAHA8c,EAAalB,SAAW7O,EAAOmQ,OAAOhK,GAAMA,EAAE6J,WAAY,SAAW,GACrEF,EAAQ/S,QAAQ5C,KAAK4V,GAEjB1d,KAAKiG,KAAKC,KAAM,CAClB,IAGI0X,EAAmB,CACrB/a,GAAI,mBACJgE,aALmB,CAACH,EAAW+M,EAAS,oBAAoB1M,KAC5D3F,KAAK6b,YAAYzW,WAKjBH,KAAMjF,KAAK6b,YAAYrc,KAAK,oCAE9Bgd,EAAiBpB,SAAW7O,EAAOmQ,OAAOhK,IAAOA,EAAEzS,KAAKwc,SACpD,SACA,GACJJ,EAAQ/S,QAAQ5C,KAAK8V,GAGvBxc,KAAK6b,YAAYrE,gCACf0E,EACAlc,KAAK6b,YAAYrc,KAAK,wBACtB6c,ICzGC,MAAMM,cACXnd,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3Cmd,oBAAsB,GACtBC,wBAA0B,GAC1BC,sBAAwB,GACxB1X,UAAY,IAEZ4B,cAAgB,KAEhBpH,YAAYoH,EAAeI,GACzBpH,KAAKgH,cAAgBA,EACrBhH,KAAKoH,gBAAkBA,EACvBpH,KAAK+c,qBAAuB,IAAInB,qBAAqB5b,MAIvDgd,6BAA6BhE,SACrBhZ,KAAKoH,gBAAgB0T,kBAAkB9B,GAI/C5E,sBAAsB7B,EAAO4B,GAC3B,IAAI4E,QAAmB/Y,KAAKid,kBAAkB1K,EAAO4B,GAKrD,OAJAnU,KAAKkd,sBAAsB3K,EAAOwG,EAAY5E,GAC9CnU,KAAKmd,uBAAuB5K,EAAOwG,EAAY5E,SACzCnU,KAAKgd,uBAAuBjE,EAAWC,kBACvChZ,KAAKoH,gBAAgBmT,0BAA0Bva,KAAM+Y,GACpDA,EAITkE,kBAAkB1K,IAGlB2K,sBAAsB3K,EAAOwG,EAAY5E,IACnC5B,GAAS4B,IACXnU,KAAK+c,qBAAqBjB,qBACxBvJ,EACAwG,EACA5E,GAKNgJ,uBAAuB5K,EAAOwG,EAAY5E,GACxCnU,KAAK8c,sBAAsBtW,SAAS4W,GAClCA,EAAQC,iBAAiBtE,EAAY5E,KAKzCmJ,wBAAwBF,GACtB5O,OAAgB7P,MACd,kCAAkCye,EAAQxd,YAAYqF,QAExDjF,KAAK8c,sBAAsBpW,KAAK0W,GAIlCG,4BACE,OAAO,IAAIrC,WAIbsC,2BACE,OAAO,IAAIjC,UAIbkC,wBACE,OAAO,IAAIhC,OAIbrC,wBAAwB/R,GACtB,IAAI8B,EAAW,IAAIgS,eAEnB,OADAhS,EAAS1H,GAAK4F,EACP8B,EAGTkO,2BAA2B5V,EAAK,IAC9B,IAAI2V,EAAc,IAAIiE,kBAEtB,OADAjE,EAAY3V,GAAKA,EACV2V,EAITiC,yBAAyBzS,EAAQU,EAAc6B,EAAUzC,GAAO,GACzDyC,IAG+B,IAAlCA,EAASyP,cAAc/W,SACtBsH,EAAS0P,WAA0B6E,IAAlBvU,EAAS0P,QAIzBvR,GAAczF,OAAS,IAAGsH,EAASlE,KAAOqC,GAE1CZ,EAAME,EAAOoS,WAAWtS,KAAKyC,GAC5BvC,EAAOoS,WAAW2E,QAAQxU,IAIjCqO,gCAAgCrO,EAAUyU,EAAiBxG,GACpDA,IAEDwG,GAAiB/b,OAAS,IAAGuV,EAAYnS,KAAO2Y,GAGlDxG,EAAYwB,cAAc/W,OAAS,GACnCuV,EAAY9N,QAAQzH,OAAS,GAC7BuV,EAAYG,UAEZpO,EAASyP,cAAclS,KAAK0Q,GAE5B5I,OAAgB7P,MACd,6CACAif,IAKNC,aAAaxS,EAAGC,GACd,OAAMD,GAAGpL,MAAMmL,MAAQE,GAAGrL,MAAMmL,KAEzBC,EAAEpL,KAAKmL,KAAOE,EAAErL,KAAKmL,KAFkB,GClI3C,MAAM0S,2BAA2BnB,cACtC/c,cACEG,QAGFsd,iBAAiBtE,EAAY5E,KCJxB,MAAM4J,oCAAoCD,mBAC/Cle,cACEG,QAGFie,sBAAsBvc,GACpB,IAAIwc,EAASrf,KAAKsf,QAAQpf,IAAI2C,GAC9B,OAAOwc,GAAUA,EAAOE,OAI1Bd,iBAAiBtE,EAAY5E,GAC3B,GAAIA,EAAgB,OAEpB,IAAI9B,EAAU0G,EAAW1G,QAGzB,IAFc0G,EAAWvE,QAEX,OAEd,IAGI4J,EAFAC,EADQre,KAAKse,SAASjM,GACRgM,MAAM5Z,QAAQkC,GAASA,EAAK4X,aAW9C,GAPEH,EADEL,4BAA4BC,eAAe,YACnCK,EACP5Z,OAAOzE,KAAKwe,wBACZjd,KAAKoF,GAASA,EAAK1G,KAAKyF,MAEjB2Y,EAAM9c,KAAKoF,GAASA,EAAK1G,KAAKyF,OAGrC0Y,EAAS,OAEd,GAAuB,IAAnBA,EAAQvc,OAAc,OAE1B,IAAI4c,EAAmB5X,IAAa,oBAEpC,GAAyB,iBAArB4X,EAAqC,OAAO1F,EAEhD,IAAI7P,EAA+B,kBAArBuV,EAQd,OANA1F,EAAWC,WAAWxS,SAAS2C,IAC7BA,EAASyP,cAAcpS,SAAS4Q,IAC9BpX,KAAK0e,sBAAsBN,EAAShH,EAAalO,SAI9C6P,EAGT2F,sBAAsBN,EAAShH,EAAalO,GACtCkO,EAAYwB,eAAiBxB,EAAYwB,cAAc/W,OAAS,GAClEuV,EAAYwB,cAAcpS,SAASC,GACjCzG,KAAK0e,sBAAsBN,EAAS3X,EAAGyC,KAG3C,IAAIyV,EAAe,GACnBvH,EAAY9N,QAAQ9C,SAASgE,IAC3B,IAAK4T,EAAQra,SAASyG,EAAO/I,IAAK,OAElC,IAAImd,EAAc5e,KAAK6e,sBAAsBrU,EAAQtB,GAGhDA,GAASyV,EAAajY,KAAKkY,MAGlC5e,KAAK8e,wBAAwB1H,EAAauH,GAG5CE,sBAAsBrU,EAAQtB,GAC5B,IACI6V,EAAY7V,EAAUsB,EAAS,GAE/BwU,EAAOxU,EAAO/E,aAAawZ,OAC7BzU,EAAO/E,aAAayG,QAAQlM,KAAKoF,YAYnC,OAVA2Z,EAAUtZ,aANM,YAMqBuZ,EACrCD,EAAU9Z,KAAOiE,EAAUsB,EAAOvF,KAAO,OAAOuF,EAAOvF,OACvD8Z,EAAUtd,GAAK+I,EAAO/I,GACtBsd,EAAUnZ,IAAM4E,EAAO5E,IACvBmZ,EAAU/d,KAAOwJ,EAAOxJ,KAExB+d,EAAUzD,MAAQ9Q,EAAO8Q,MACzByD,EAAUrD,MAAQlR,EAAOkR,MACzBqD,EAAUpD,MAAQnR,EAAOmR,MAElBoD,EAGTD,wBAAwB1H,EAAauH,GACnCA,EAAanY,SAAS0Y,IACpB,IAAIvd,EAAQyV,EAAY9N,QAAQ6V,WAAW9T,GAAMA,EAAE5J,KAAOyd,EAAGzd,KAAM,EACnE2V,EAAY9N,QAAQqN,OAAOhV,EAAO,EAAGud,MAIzCV,uBAAuB7X,GAErB,OADWA,EAAKyP,QAAQ,WAAY,kBAItCkI,SAASjM,GACP,OAAOG,OAAOjG,OAAOkG,WAAW7Q,MAAM8Q,GAAMA,EAAEzS,KAAKyF,MAAQ2M,KAAU0C,OCvGlE,MAAMqK,YACXC,gBAAkB,GAElBzf,eAEAJ,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3C6e,SAASjM,GACP,OAAOG,OAAOjG,OAAOkG,WAAW7Q,MAAM8Q,GAAMA,EAAEzS,KAAKyF,MAAQ2M,KAAU0C,MAGvEuK,QAAQvK,EAAOwK,GACb,OAAOxK,EAAMsJ,MAAMvf,IAAIygB,GAGzBC,SAASnN,GACP,OAAOG,OAAOjG,OAAOkG,WAAW7Q,MAAM8Q,GAAMA,EAAEzS,KAAKyF,MAAQ2M,IAG7DoN,qBAAqBC,GACnB,MAAM,IAAIC,MACR,gEAIJ9Q,wBAAwBlL,EAAO8B,GAC7B+I,OAAgB7P,MAAM8G,GAEtBzF,KAAK4f,mBAAmBjc,GAExB,IAAIkc,GAAU,EACd7f,KAAKqf,gBAAgB7Y,SAAS4W,IACxByC,IAEJA,EAAUzC,EAAQ0C,qBAAqBnc,EAAO8B,OAG5Coa,IAEA7f,KAAK+f,sBAAsBta,SACvBzF,KAAKggB,sBAAsBva,GAInCzF,KAAKigB,oBAAoBtc,EAAO8B,IAGlCwa,oBAAoBtc,EAAO8B,IAE3Bya,kBAAkB9C,GAChB5O,OAAgB7P,MACd,4BAA4Bye,EAAQxd,YAAYqF,QAElDjF,KAAKqf,gBAAgB3Y,KAAK0W,GAG5BwC,mBAAmBjc,GACjB3D,KAAKmgB,WAAangB,KAAKogB,aAAazc,GACpC3D,KAAKqgB,KAAOrgB,KAAKsgB,OAAO3c,GACxB3D,KAAKugB,IAAMvgB,KAAKwgB,MAAM7c,GACtB3D,KAAKygB,MAAQzgB,KAAK0gB,QAAQ/c,GAG5Bgd,aAAatO,EAASkN,GACpB,IAAIxK,EAAQ/U,KAAKse,SAASjM,GACfrS,KAAKsf,QAAQvK,EAAOwK,GAE1BqB,MAAM5e,QAAO,GAGpB6e,eACE,OACEha,IAAa,2BACb7G,KAAKmgB,cACHngB,KAAKugB,KAAOvgB,KAAKqgB,MAAQrgB,KAAKygB,OAIpCL,aAAazc,GACX,OAAwC,IAAjCA,GAAOmd,eAAeC,OAG/BP,MAAM7c,GACJ,OAAOA,GAAOqd,OAGhBV,OAAO3c,GACL,OAAOsd,UAAUX,OAAO3c,GAG1B+c,QAAQ/c,GACN,OAAOA,GAAOud,SAIhBnB,sBAAsBta,GACpB,IAAI0b,EAAU1b,EAAa2b,MAAM,KAE7B9b,EAAY6b,EAAQ,GACpBE,EAAWF,EAAQ,GAEvB,MAAqB,YAAd7b,GAA2B+b,EAAStd,SAAS,UAItDic,4BAA4Bva,GAC1B,IACI4b,EADU5b,EAAa2b,MAAM,KACV,GAEN,qBAAbC,SACI7O,OAAOjG,OAAO2H,WAAW,GAAGoN,mBAGnB,iBAAbD,SACI7O,OAAOjG,OAAO2H,WAAW,GAAGqN,eAGpCrf,MAAMyF,QAAQ,8BC/GX,MAAM6Z,uBAAuBpC,YAClCxf,cACEG,QAGF+f,qBAAqBnc,EAAO8B,GAC1B,OAAO,GCZJ,MAAMgc,kCAAkCD,eAC7C5hB,cACEG,QAIF+f,qBAAqBnc,EAAO8B,GAC1B,IAAIL,EAAYxG,KAAKM,eAAeoK,QAAQlE,UAExC+b,EAAU1b,EAAa2b,MAAMhc,GAEjC,GAAsB,GAAlB+b,EAAQtf,OAAa,OAAO,EAEhC,IAAIyD,EAAY6b,EAAQ,GACpBvd,EAAMud,EAAQ,GACdE,EAAWF,EAAQ,GAQvB,IANY,CACV,kBACA,kBACA,qBACA,SAESpd,SAASuB,GAAY,OAAO,EAEvC,OAAQA,GACN,IAAK,kBACHtF,KAAK0hB,iBAAiBpc,EAAW3B,EAAOC,EAAKyd,GAC7C,MACF,IAAK,kBACHrhB,KAAK2hB,sBAAsBrc,EAAW3B,EAAOC,EAAKyd,GAClD,MACF,IAAK,qBACHrhB,KAAK4hB,yBAAyBtc,EAAW3B,EAAOC,EAAKyd,GACrD,MACF,IAAK,QACHrhB,KAAK6hB,YAAYvc,EAAW3B,EAAOC,EAAKyd,GACxC,MACF,QACE,OAAO,EAGX,OAAO,EAGTK,iBAAiBpc,EAAW3B,EAAOsR,EAAe6M,GACrCljB,KAAK2F,MAAMzF,IAAImW,GAErB8M,UAAUD,GAAUE,MAAMxc,GAAMA,EAAEob,MAAM5e,QAAO,KAGtD2f,sBAAsBrc,EAAW3B,EAAOsR,EAAe6M,GAC1CljB,KAAK2F,MAAMzF,IAAImW,GAErB8M,UAAUD,GAAUE,MAAMxc,GAAMA,EAAEyc,YAGzCL,+BAA+Btc,EAAW3B,EAAOsR,EAAeoM,GAC9D,IAAIvb,EAAOlH,KAAK2F,MAAMzF,IAAImW,GAEtBiN,EAAgBb,EAASD,MAAM,KAC/Be,EAAaD,EAAc,GAC3BE,EAAUF,EAAc,GAGxBG,SADiBvc,EAAKic,UAAUI,IACf5b,OAAO3E,MAAM6E,GAAMA,EAAEf,MAAQ0c,IAElDE,YAAYC,KAAK,CAAEC,IAAKH,EAAMI,MAAQ,IAGxCZ,YAAYvc,EAAW3B,EAAO0O,EAASgP,GACrCziB,KAAKoZ,OAAOpW,MAAM+X,GAAMA,EAAE1Z,KAAKyF,MAAQ2b,IAAUY,WCtE9C,MAAMS,gCAAgClB,eAC3C5hB,cACEG,QAIF+f,qBAAqBnc,EAAO8B,GAC1BzF,KAAK4f,mBAAmBjc,GAExB,IAAIwd,EAAU1b,EAAa2b,MAAM,KAEjC,GAAsB,GAAlBD,EAAQtf,OAAa,OAAO,EAEhC,IAAIyD,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEvB,MAAiB,aAAb7b,IAEAtF,KAAK6gB,gBACP7gB,KAAK2gB,aAAatO,EAASgP,IACpB,GAGFrhB,KAAK2iB,qBAAqBhf,EAAO0O,EAASgP,IAGnDsB,qBAAqBhf,EAAO0O,EAASgP,GACnC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAO5G,MAAMuf,QAAQvK,EAAOsM,GAEhC,IACE1a,EAAKic,eACL,MAAOpd,GAEP,OADAgJ,OAAgB9P,MAAM,oBAAqB8G,IACpC,EAGT,OAAO,GCjCJ,MAAMqd,cACXrjB,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3CL,QACAQ,YAAYR,GACVY,KAAKZ,QAAUA,EAKjB0N,uBAAuBjI,GACrB7E,KAAKgH,cAAgB,IAAIiP,cAAcpR,GACvC7E,KAAKoH,gBAAkB,IAAI+S,gBAAgBtV,EAAM7E,KAAKgH,qBAEhDhH,KAAKoH,gBAAgByF,OAE3B,IAAIsK,EAAgBnX,KAAK8iB,mBACvB9iB,KAAKgH,cACLhH,KAAKoH,iBAGP,OADApH,KAAK+iB,mBAAmB5L,GACjBA,EAGT2L,sBAEAC,mBAAmB5L,GACb0L,cAAc7E,eAAe,aAC/B7G,EAAcmG,wBAAwB,IAAIS,6BAG9C/W,cACAiG,mBACE,OAAOjN,KAAKgH,cAGdI,gBACA8F,qBACE,OAAOlN,KAAKoH,gBAKd4F,iBACE,IAAIgW,EAAgBnc,IAAa,eAGX,SAAlBmc,GAA4BH,cAAc7E,eAAegF,KAE3D3kB,OAAOK,MAAMskB,EAAehjB,KAAKR,KAAK,mCACtCwjB,EAAgB,O5BqLf,SAASxH,IAAInc,EAASJ,GAC3BL,KAAKC,SAAS2c,IAAIpc,EAASC,EAASJ,G4BrLhCgkB,CAAa,cAAeD,IAG9B,IAAIjW,EAAc/M,KAAKkjB,iBAAiBF,GAExC,OADAhjB,KAAKmjB,eAAepW,GACbA,EAGTmW,iBAAiBE,IAEjBD,eAAepW,GACbA,EAAYmT,kBAAkB,IAAIuB,2BAE9BoB,cAAc7E,eAAe,aAC/BjR,EAAYmT,kBAAkB,IAAIwC,yBAGtCW,4BAIAC,mBACE,IAAIC,EAAevjB,KAAKqjB,4B5BvEI,SAAUjhB,EAAKwK,EAAe2W,GAC5DnkB,EAAUgD,EAEVxD,KAAKC,SAAS2kB,SAASpkB,EAAS,cAAe,CAC7C6F,KAAMrG,KAAKY,KAAKE,SAAS,4CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,4CACzBgkB,MAAO,QACPC,QAAQ,EACRjiB,KAAMkiB,OACN3hB,QAASshB,EACTxhB,QAAS,OACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,iBAAkB,CAChD6F,KAAMrG,KAAKY,KAAKE,SAAS,+CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,+CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,gBAAiB,CAC/C6F,KAAMrG,KAAKY,KAAKE,SAAS,8CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,8CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,eAAgB,CAC9C6F,KAAMrG,KAAKY,KAAKE,SAAS,6CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,6CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,YAAa,CAC3C6F,KAAMrG,KAAKY,KAAKE,SAAS,0CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,0CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,iCAAkC,CAChE6F,KAAMrG,KAAKY,KAAKE,SACd,+DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,+DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,eAAgB,CAC9C6F,KAAMrG,KAAKY,KAAKE,SAAS,6CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,6CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,oBAAqB,CACnD6F,KAAMrG,KAAKY,KAAKE,SAAS,kDACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,kDACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJ4N,EAAcmX,mBAAmB3kB,EAASJ,cAEtCJ,KAAKsf,QAAQpf,IAAI,aAAaqf,QAChCvf,KAAKC,SAAS2kB,SAASpkB,EAAS,mBAAoB,CAClD6F,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMkiB,OACN3hB,QAAS,CACP+hB,SAAUplB,KAAKY,KAAKE,SAASX,GAC7BklB,cAAerlB,KAAKY,KAAKE,SAASX,GAClCmlB,aAActlB,KAAKY,KAAKE,SAASX,IAEnCgD,QAAS,WACT8hB,SAAW5kB,IACTD,kBAKNJ,KAAKC,SAAS2kB,SAASpkB,EAAS,mBAAoB,CAClD6F,KAAMrG,KAAKY,KAAKE,SAAS,iDACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,iDACzBgkB,MAAO,QACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,yBAA0B,CACxD6F,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,QAAS,CACvC6F,KAAMrG,KAAKY,KAAKE,SAAS,sCACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,sCACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMyiB,OACNC,MAAO,CACLC,IAAK,GACLlY,IAAK,EACLmY,KAAM,IAERviB,QAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,aAAc,CAC5C6F,KAAMrG,KAAKY,KAAKE,SAAS,2CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,2CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMkiB,OACN7hB,QAAS,OACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,kBAAmB,CACjD6F,KAAMrG,KAAKY,KAAKE,SAAS,gDACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,gDACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,WAAY,CAC1C6F,KAAMrG,KAAKY,KAAKE,SAAS,yCACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,yCACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJJ,KAAKC,SAAS2kB,SAASpkB,EAAS,QAAS,CACvC6F,KAAMrG,KAAKY,KAAKE,SAAS,sCACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,sCACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,kBAIJX,OAAOM,MAAM,2BAA4B4kB,G4BtJvCgB,CAA0BvkB,KAAKZ,QAASY,KAAMujB,GAKhDiB,kBAAkBviB,EAASR,GACzB,GAAIohB,cAAc7E,eAAevc,GAAK,CACpC,IAAInB,EAAQuiB,cAAc4B,eAAehjB,GACzC8L,YAAYtL,EAAS,CAAER,CAACA,GAAKnB,KAIjC0d,sBAAsBvc,GACpB,IAAIwc,EAASrf,KAAKsf,QAAQpf,IAAI2C,GAC9B,OAAOwc,GAAUA,EAAOE,OAG1BsG,sBAAsBhjB,GACpB,OAAO7C,KAAKsf,QAAQpf,IAAI2C,IAAKxB,KAAKK,OAAS,ICjGxC,MAAMokB,0BAA0B/H,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GACrBpH,KAAKgH,cAAcuP,kBAAkB,UAIvC0G,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAI4D,EAAUtJ,KAAKsX,YAAYvC,EAAO1C,GAClCsS,EAAc3kB,KAAK4kB,gBAAgB7P,EAAO1C,GAe9C,OAbArS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV8J,GAEFtJ,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,6BACVmlB,GAGE9d,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGT0Q,YAAYvC,EAAO1C,GACjB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAE1C,IAAK,IAAIyL,KAAa9P,EAAM9U,KAAKA,KAAK6kB,WAAY,CAChD,IAAIC,EAAoB/kB,KAAKqX,6BAC7B,IAAK,IAAI2N,KAAcjQ,EAAM9U,KAAKA,KAAK6kB,WAAWD,GAAWI,OAAQ,CACnE,IAAIC,EAAQnQ,EAAM9U,KAAKA,KAAK6kB,WAAWD,GAAWI,OAAOD,GACrD/f,EAAOjF,KAAKR,KAAK0lB,EAAMjkB,OACvBwE,EAAe,CAAC,SAAU4M,EAAS2S,GAAYrf,KAAK3F,KAAKoF,WAE7D2f,EAAkBzb,QAAQ5C,KAAK,CAC7BzB,KAAMA,EACNQ,aAAcA,IAGlB,IAAI0f,EAAiBnlB,KAAKR,KACxBuV,EAAM9U,KAAKA,KAAK6kB,WAAWD,GAAW5jB,OAExCjB,KAAKwX,gCACH5Q,EACAue,EACAJ,GAGJ,OAAOne,EAGTge,gBAAgB7P,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAEtCgM,EAAqBplB,KAAKqX,6BAC9B,IAAK,IAAIwN,KAAa9P,EAAM9U,KAAKA,KAAK6kB,WAAY,CAChD,IAAI7f,EAAOjF,KAAKR,KAAKuV,EAAM9U,KAAKA,KAAK6kB,WAAWD,GAAW5jB,OACvDwE,EAAe,CAAC,aAAc4M,EAASwS,GAAWlf,KACpD3F,KAAKoF,WAEPggB,EAAmB9b,QAAQ5C,KAAK,CAC9BzB,KAAMA,EACNQ,aAAcA,IAIlB,IAAI4f,EAAkBrlB,KAAKR,KAAK,6BAOhC,OANAQ,KAAKwX,gCACH5Q,EACAye,EACAD,GAGKxe,GC3FJ,MAAM0e,4BAA4BlG,YACvCxf,cACEG,QAIFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGQ0B,EAAQ,GACxB,IAAI9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEXphB,MAAMue,SAASjM,GAErBkT,mBAAmBlE,GAG3BmE,cAAc7hB,EAAOoR,EAAOsM,GAC1BtM,EAAMpO,KAAK/E,MAAM+X,GAAMA,EAAE1Z,KAAKwB,KAAO4f,IAAUoE,KAAK9hB,ICpBjD,MAAM+hB,0BAA0B7C,cACrCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,aAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,oBAIb5B,mBAAmB3kB,EAASJ,KCzBvB,MAAM4mB,wBAAwBjJ,cACnC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,kBAAkB1K,EAAO4B,GACvB,OAAI5B,EACKvS,KAAK6lB,sBAAsBtT,GACzB4B,EACFnU,KAAK8lB,0BAEP9lB,KAAKud,4BAGdsI,4BAA4BtT,GAC1B,MAAMwT,EAAO/lB,KAAKud,4BAGlB,GAFAwI,EAAK1T,QAAUE,GAAO9Q,GACtBskB,EAAKvR,QAAUjC,GAAOwC,OAAOtT,IACxBskB,EAAK1T,UAAY0T,EAAKvR,QACzB,OAAOuR,EAGLlf,IAAa,kBACfkf,EAAKzT,SAAWC,EAAMtS,MAAMgF,MAW9B,aARmBjF,KAAKgmB,iBAAiBzT,IAEtC0T,OACAxhB,QAAQjD,GAAMA,IACdgF,SAAShF,IACRxB,KAAKqZ,yBAAyB0M,EAAMvkB,EAAEyD,KAAMzD,MAGzCukB,EAGTC,iBAAiBzT,GACf,MAAO,CACLvS,KAAKkmB,oBAAoB3T,GACzBvS,KAAKmmB,qBAAqB5T,GAC1BvS,KAAKomB,uBAAuB7T,GAC5BvS,KAAKqmB,qBAAqB9T,GAC1BvS,KAAKsmB,wBAAwB/T,GAC7BvS,KAAKumB,sBAAsBhU,GAC3BvS,KAAKwmB,yBAAyBjU,GAC9BvS,KAAKymB,sBAAsBlU,IAI/B+T,wBAAwB/T,GACtB,MACMmU,EADQnU,EAAMwC,MACI9U,KAAKA,KAAKymB,UAElC,GAAI7f,IAAa,kBAAmB,CAClC,MAAM8f,EAAa3mB,KAAKR,KAAK,wBACvBonB,EAAW5mB,KAAK6mB,gBACpBtU,EAAM9Q,GACNilB,EACA,QACAC,EACA,eAEFC,EAAS3hB,KAAO0hB,EAEhB,MAAMG,EAAc9mB,KAAKR,KAAK,yBACxBunB,EAAY/mB,KAAK6mB,gBACrBtU,EAAM9Q,GACNilB,EACA,SACA1mB,KAAKR,KAAK,yBACV,gBAIF,OAFAunB,EAAU9hB,KAAO6hB,EAEV,CAACF,EAAUG,GAGpB,OAAO/mB,KAAK6mB,gBACVtU,EAAM9Q,GACNilB,EACA,YACA1mB,KAAKR,KAAK,4BACV,WAIJsmB,0BACE,MAAMC,EAAO/lB,KAAKud,4BAClBwI,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,aAC7B,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAIrB,GAFArS,KAAKknB,gBAAgBnB,EAAM1T,GAEvBxL,IAAa,kBAAmB,CAClC,IAAI8f,EAAa3mB,KAAKR,KAAK,wBACvBsnB,EAAc9mB,KAAKR,KAAK,yBAC5BQ,KAAKmnB,mBACHpB,EACA1T,EACA,QACAsU,EACA,eAEF3mB,KAAKmnB,mBACHpB,EACA1T,EACA,SACAyU,EACA,oBAEG,CACL,IAAIM,EAAiBpnB,KAAKR,KAAK,4BAC/BQ,KAAKmnB,mBACHpB,EACA1T,EACA,YACA+U,EACA,WASJ,OALIvgB,IAAa,2BACf7G,KAAKqnB,oBAAoBtB,EAAM1T,GAEjCrS,KAAKmc,mBAAmB4J,EAAM1T,EAAS4U,GAEhClB,EAMTG,oBAAoB3T,GAClB,MAAMwC,EAAQxC,EAAMwC,MACd1C,EAAUE,EAAM9Q,GAEtB,IAMI6lB,EANAC,EAAavnB,KAAKwnB,qBACpBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAM3Z,KAAKynB,eAAe9N,GAAG+N,SAAW,KAE/DC,EAAc3nB,KAAK4nB,gBAAgBL,GACnCjiB,EAAY,OAIdgiB,EADsB,QAApBvS,EAAM9U,KAAKyB,MAAkBmF,IAAa,mBACjC8gB,EAAYljB,QACpBkV,GACY,eAAXA,EAAEjY,MAAoC,UAAXiY,EAAEjY,MAA+B,SAAXiY,EAAEjY,OAG5CimB,EAAYljB,QACpBkV,GAAiB,eAAXA,EAAEjY,MAAyB1B,KAAKynB,eAAe9N,GAAG2N,WAG7D,IAAIO,EAAiB7nB,KAAK8nB,oBAAoBR,GAG1CS,EADUF,EAAepjB,QAAQkV,GAAgB,UAAVA,EAAEjY,OACjBH,KAAKymB,GAC/BhoB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAW0iB,KAElDE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYN,EAAepjB,QAAQkV,GAAgB,aAAVA,EAAEjY,OACdH,KAAKiE,GACpCxF,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWE,KAElD4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAGIE,EAHQR,EAAepjB,QACxBkV,GAAgB,UAAVA,EAAEjY,MAA8B,aAAViY,EAAEjY,OAERH,KAAK+mB,GAC5BtoB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWgjB,KAElDC,EAAWvoB,KAAKqX,6BACpBkR,EAASjf,QAAU+e,EAEnB,IAAIG,EAAiBxoB,KAAK8nB,oBACxBH,EAAYljB,QAAQkV,GAAgB,cAAVA,EAAEjY,QAK1B+mB,EAFmBzoB,KAAK0oB,qBAAqBF,GAEdjnB,KAAKC,GACtCxB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAW9D,KAElDmnB,EAAiB3oB,KAAKqX,6BAC1BsR,EAAerf,QAAUmf,EAEzB,IACIG,EADQrB,EAAW9iB,QAAQiO,GAAiB,SAAXA,EAAEhR,OACdH,KAAKoY,GAC5B3Z,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWqU,KAElDkP,EAAW7oB,KAAKqX,6BACpBwR,EAASvf,QAAUsf,EAEnB,IAAIE,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAC3BwpB,EAAahpB,KAAKR,KAAK,wBACvBypB,EAAmBjpB,KAAKR,KAAK,8BAC7B0pB,EAAalpB,KAAKR,KAAK,wBAEvBoH,EAAS5G,KAAKoZ,wBAAwB,aAa1C,OAZAxS,EAAO3B,KAAOjF,KAAKR,KAAK,4BAExBQ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAC7DpoB,KAAKwX,gCAAgC5Q,EAAQoiB,EAAYT,GACzDvoB,KAAKwX,gCACH5Q,EACAqiB,EACAN,GAEF3oB,KAAKwX,gCAAgC5Q,EAAQsiB,EAAYL,GAElDjiB,EAITkhB,oBAAoBqB,GAClB,MAAMC,EAAkB/S,OAAOgT,KAC7BzqB,KAAK0qB,MAAM3F,OAAO4F,wBAClB9kB,QAAQ+kB,GAAc,SAAPA,IAUjB,OARsBL,EAAU1kB,QAAQe,IACtC,MAAMikB,EAAgBzpB,KAAKynB,eAAejiB,GAE1C,QADiBikB,EAAcC,YAGxBN,EAAgBrlB,SAAS0lB,EAAcC,WAAWhoB,SAS7DykB,qBAAqB5T,GACnB,MAAMwC,EAAQxC,EAAMwC,MACpB,GAAwB,YAApBA,EAAM9U,KAAKyB,KAAoB,OAEnC,IAAIioB,EAAc3pB,KAAKwnB,qBACrBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,QAEnCioB,EAAc3pB,KAAK0oB,qBAAqBiB,GAEhB,cAApB5U,EAAM9U,KAAKyB,MAAyBmF,IAAa,qBACnD8iB,EAAc3pB,KAAK4pB,yBAAyBD,IAE9C,IAAIE,EAAe7pB,KAAK8pB,mBAAmBH,GAC3C,OAAO3pB,KAAK+pB,kBAAkBhV,EAAOxC,EAAM9Q,GAAIooB,GAIjDC,mBAAmBE,GACjB,IAAIpjB,EAASyP,OAAOiE,OAAO0P,GAc3B,OAZApjB,EAAOwE,MAAK,CAACC,EAAGC,KACd,MAAM2e,EAAQjqB,KAAKynB,eAAepc,GAC5B6e,EAAQlqB,KAAKynB,eAAenc,GAClC,OAAI2e,EAAME,QAAUD,EAAMC,MACjB9e,EAAEpG,KACNmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,SAEZL,EAAME,MAAQD,EAAMC,SAGtBvjB,EAITmjB,kBAAkBhV,EAAO1C,EAAS2X,GAChC,MAAMO,EAASvqB,KAAKqX,6BACdmT,EAAOxqB,KAAKqX,6BAIZoT,EAAgBpU,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK+pB,QAAQ5e,MAC3D,CAACC,EAAGC,IACKA,EAAE,GACN8e,cACAC,cAAchf,EAAE,GAAG+e,mBAAe1M,EAAW,CAC5C4M,YAAa,WAMrB,IAAII,EAAWD,EAAc7oB,MAAM6E,GAAe,SAATA,EAAE,KAEvCkkB,GAAiB,EACrBF,EAAcjkB,SAASC,IACjBA,EAAE,GAAGmkB,WAAW,WACbD,GAAkBlkB,EAAE,GAAG0F,IAAM,GAAK1F,EAAE,GAAGxH,MAAQ,IAClD0rB,GAAiB,GAEdA,GAAkBlkB,EAAE,KAAO,QAAUikB,EAAS,IAAIP,OACjDO,EAAS,GAAGve,IAAM,GAAKue,EAAS,GAAGzrB,MAAQ,IAC7C0rB,GAAiB,GAGrBlkB,EAAE,GAAGkkB,eAAiBA,IAEjBlkB,EAAE,KAAIA,EAAE,GAAK,IAElBA,EAAE,GAAGkkB,gBAAkBlkB,EAAE,GAAG0F,KAAO1F,EAAE,GAAGxH,MAAQ,MAIpD,IAAI4rB,EAAYJ,EAActL,WAAWza,GAAe,SAATA,EAAE,KACjD,IAAK+lB,EAAcI,GAAW,GAAGF,eAAgB,CAC/C,IAAIG,EAAsBL,EAActL,WACrC1Y,GAAMA,EAAE,KAAO,QAAUikB,EAAS,GAAGP,QAExCM,EAAcI,GAAW,GAAGF,eAC1BF,EAAcK,GAAqB,GAAGH,eAG5BX,EAAO5jB,OACnB,SAAU2kB,EAAStkB,GACjB,MAAMukB,EAAYhrB,KAAKynB,eAAehhB,GACtC,IAAIwkB,EAAOD,EAAUE,YAAYC,KACjC,MAAMC,EAAWxsB,KAAK0qB,MAAM3F,OAAO0H,sBAAsBJ,GAEzD,IAAId,EAAQa,EAAUb,MACtB,IAAImB,EAAiB,SAATL,GAA4B,WAATA,GAA8B,WAATA,EAEpD,IAAI9e,EAAKof,EAAOC,EAAWC,EAAUC,EAEjCJ,EACFG,EAAWR,GAEXQ,EAAW,QAAUtB,EACrBqB,EAAYrB,EACR,GAAGnqB,KAAKR,KAAK,2BAA2B2qB,IACxCnqB,KAAKR,KAAK,4BAGhBksB,EAAYjB,EAAc7oB,MAAM+pB,GAAQA,EAAI,KAAOF,MAAY,GAC/DF,EAAQG,GAAWzsB,MACnBkN,EAAMuf,GAAWvf,IAEjB,IAAIyf,EAAuB/kB,IAAa,kBACxC,GAAIsF,IAASuf,GAAWf,iBAAkBiB,EAAuB,OAEjE,IAKIxU,EALAyU,EAAQ7rB,KAAK8rB,WAAWzZ,EAAS0C,EAvEvB,QAuEyCtO,GA8BvD,OA5BII,IAAa,kBAAkB7G,KAAK+rB,cAActlB,EAAGolB,GAKvDzU,EADEkU,EACYf,EAAO3R,cAAchX,MAChCyY,GAAQA,EAAIpV,OAASmmB,IAGVZ,EAAK5R,cAAchX,MAC9ByY,GAAQA,EAAIpV,OAASumB,IAIrBpU,IACHA,EAAcpX,KAAKqX,6BACflL,EAAM,IACRiL,EAAYkE,MAAQ,GAAGiQ,KAASpf,MAIpCiL,EAAY9N,QAAQ5C,KAAKmlB,GAErBP,GAASf,EAAO3R,cAAc1M,QAAQkL,GAAe,EACvDpX,KAAKwX,gCAAgC+S,EAAQa,EAAUhU,IAC/CkU,GAASd,EAAK5R,cAAc1M,QAAQkL,GAAe,GAC3DpX,KAAKwX,gCAAgCgT,EAAMgB,EAAWpU,GAEjD2T,GACPtnB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,UAC1CxS,EAAO3B,KAAOjF,KAAKR,KAAK,yBAExB,IAAIwsB,EAAchsB,KAAKR,KAAK,yBACxBysB,EAAajsB,KAAKR,KAAK,wBAK3B,OAHAQ,KAAKwX,gCAAgC5Q,EAAQolB,EAAazB,GAC1DvqB,KAAKwX,gCAAgC5Q,EAAQqlB,EAAYzB,GAElD5jB,EAITmlB,cAActlB,EAAGolB,GAEf,IAAIrqB,EADcxB,KAAKynB,eAAehhB,GACpBylB,WAElBL,EAAMvQ,MAAQ,GACduQ,EAAMnQ,MAAQ,GACdmQ,EAAMlQ,MAAQ,GACVna,GAAG2qB,QACLN,EAAMvQ,OAAStb,KAAKR,KAAK,yBAAyB4sB,OAAO,GAAGhC,eAE1D5oB,GAAG6qB,UACLR,EAAMvQ,OAAStb,KAAKR,KAAK,0BACtB4sB,OAAO,GACPhC,eAED5oB,GAAG8qB,WACLT,EAAMvQ,OAAStb,KAAKR,KAAK,2BACtB4sB,OAAO,GACPhC,eAED5oB,GAAG+qB,gBACLV,EAAMnQ,OAAS1b,KAAKR,KAAK,uBAAuB4sB,OAAO,GAAGhC,eAExD5oB,GAAGgrB,SACLX,EAAMlQ,OAAS3b,KAAKR,KAAK,gBAAgB4sB,OAAO,GAAGhC,eAMvDhE,uBAAuB7T,GACrB,IAAIka,EAAazsB,KAAKwnB,qBACpBjV,EAAMwC,MAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAgB,QAAVA,EAAEjY,QAErCgrB,EAAc1sB,KAAK4nB,gBAAgB6E,GACvC,OAAOzsB,KAAK2sB,iBAAiBpa,EAAM9Q,GAAI8Q,EAAMwC,MAAO2X,GAItDC,iBAAiBta,EAAS0C,EAAO6X,GAC/B,IAAIzO,EAASne,KAAKqX,6BACdwV,EAAU7sB,KAAKqX,6BACfyV,EAAO9sB,KAAKqX,6BACZ0V,EAAY/sB,KAAKqX,6BAEPuV,EAAMxmB,OAClB,SAAU2kB,EAASpV,GACjB,MACMqX,EADWhtB,KAAKynB,eAAe9R,GACL+T,WAAWhoB,KAG3C,IAAIurB,EAAOjtB,KAAKioB,oBAAoB5V,EAAS0C,EAF3B,OAE6CY,GAE1DqX,GAAqC,KAAnBA,EAKD,QAAlBA,EAKkB,aAAlBA,EAKJ7O,EAAO7U,QAAQ5C,KAAKumB,GAJlBF,EAAUzjB,QAAQ5C,KAAKumB,GALvBH,EAAKxjB,QAAQ5C,KAAKumB,GALlBJ,EAAQvjB,QAAQ5C,KAAKumB,IAiBvBxpB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,SAC1CxS,EAAO3B,KAAOjF,KAAKR,KAAK,2BAExB,IAAI0tB,EAAcltB,KAAKR,KAAK,yBACxB2tB,EAAiBntB,KAAKR,KAAK,4BAC3B4tB,EAAYptB,KAAKR,KAAK,uBAK1B,GAJAQ,KAAKwX,gCAAgC5Q,EAAQsmB,EAAa/O,GAC1Dne,KAAKwX,gCAAgC5Q,EAAQumB,EAAgBJ,GAC7D/sB,KAAKwX,gCAAgC5Q,EAAQwmB,EAAWN,IAEnDjmB,IAAa,sBAAuB,CACvC,IAAIwmB,EAAertB,KAAKR,KAAK,0BAC7BQ,KAAKwX,gCAAgC5Q,EAAQymB,EAAcR,GAG7D,OAAOjmB,EAITyf,qBAAqB9T,GACnB,MAAMwC,EAAQxC,EAAMwC,MACpB,GAAwB,YAApBA,EAAM9U,KAAKyB,KAAoB,OAEnC,MAAMujB,EAASlQ,EAAM9U,KAAKA,KAAKglB,OAE/B,IAAIre,EAAS5G,KAAKoZ,wBAAwB,UAC1CxS,EAAO3B,KAAOjF,KAAKR,KAAK,yBACxB,IAAI8F,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQygB,GAChC1jB,KAAKiE,IACJ,IACE,IAAIgoB,EAAUhoB,EAAE,GACZP,EAAOqoB,EAAOE,EAAU5uB,KAAK0qB,MAAM3F,OAAOsB,OAAOuI,GACrDvoB,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAWiN,EAAM9Q,GAAI+D,EAAE,IAAIG,KAAK3F,KAAKoF,WACrDpE,EAAOhB,KAAK0tB,oBAAoBzI,EAAOuI,GAASvuB,OACpD,MAAO,CACLgG,KAAMA,EACNxD,GAAI+D,EAAE,GACNC,aAAcA,EACdzE,KAAMA,GAER,MAAOtC,GAEP,OADAL,OAAOK,MAAM8G,GACN,SAGVf,QAAQgC,KAAQA,IACfknB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAG5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAEnD/mB,EAGTsgB,gBAAgBnB,EAAM1T,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQ5F,KAAK0qB,MAAM3F,OAAOsB,QAAQ1jB,KAAKiE,IAChE,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CkoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAC1D3tB,KAAKqZ,yBAAyB0M,EAAM6H,EAAahnB,GAAQ,GAI3DigB,gBAAgBxU,EAASqU,EAAWrf,EAAYC,EAAchC,GAC5D,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAC1CT,EAAO3B,KAAOqC,EAEd,IAAIgmB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQ5F,KAAK0qB,MAAM3F,OAAO+C,WAAWnlB,KAAKiE,IAC7D,GAA8B,IAA1BkhB,EAAUlhB,EAAE,IAAIvG,MAAa,OAEjC,IAAIgG,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IACIzsB,EADAyE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAKxD,OAH6BpE,EAAV,WAAfqG,EAAgC,GACxBrH,KAAK0tB,oBAAoBhH,EAAUlhB,EAAE,IAAIqoB,YAE9C,CAAE5oB,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAAMA,MAE/D8sB,EAAkB9tB,KAAKqX,6BAK3B,OAJAyW,EAAgBxkB,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAElDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcwmB,GAEpDlnB,EAGTugB,mBAAmBpB,EAAM1T,EAAShL,EAAYC,EAAchC,GAC1D,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GAEnCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQ5F,KAAK0qB,MAAM3F,OAAO+C,WAAWnlB,KAAKiE,IAC7D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CqoB,EAAkB9tB,KAAKqX,6BAC3ByW,EAAgBxkB,QAAUA,EAE1BtJ,KAAKwX,gCAAgC6C,EAAK/S,EAAcwmB,GACxD9tB,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAIzDoM,sBAAsBlU,GACpB,MAAMwC,EAAQxC,EAAMwC,MAEpB,IAAInO,EAAS5G,KAAKoZ,wBAAwB,WAC1CxS,EAAO3B,KAAOjF,KAAKR,KAAK,0BACxB,IAAI8F,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BACbgF,EAAUrc,KAAKqX,6BAInB,GAFArX,KAAKguB,yBAAyB1oB,EAAWsB,EAAQ2L,EAAM9Q,IAE/B,cAApBsT,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIusB,EAAiB,CAAC3oB,EAAWiN,EAAM9Q,GAAI,aAAakE,KACtD3F,KAAKoF,WAEP2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,YACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,8BAElB,IAAI0uB,EAAgB,CAAC5oB,EAAWiN,EAAM9Q,GAAI,YAAYkE,KACpD3F,KAAKoF,WAQP,GANA2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,WACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,6BAGduV,EAAM9U,KAAKA,KAAK6kB,WAAWqJ,GAAGlvB,OAAS,EAAG,CAC5C,IAGImvB,EAAkB,CACpB3sB,GAAI,YACJgE,aALmB,CAACH,EAAWiN,EAAM9Q,GAAI,aAAakE,KACtD3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,6BAElB6c,EAAQ/S,QAAQ5C,KAAK0nB,GAGvB,IAGIC,EAAoB,CACtB5sB,GAAI,cACJgE,aALqB,CAACH,EAAWiN,EAAM9Q,GAAI,eAAekE,KAC1D3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,+BAElB6uB,EAAkBjT,SAAWrG,EAAM9U,KAAKA,KAAK6kB,YAAYwJ,YACrD,SACA,GACJjS,EAAQ/S,QAAQ5C,KAAK2nB,GAcvB,OAXAruB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV6c,GAGKzV,EAIT2f,sBAAsBhU,GACpB,IAAI3L,EAAS5G,KAAKoZ,wBAAwB,WAG1C,OAFAxS,EAAO3B,KAAOjF,KAAKR,KAAK,0BACxBQ,KAAKuuB,yBAAyBhc,EAAMwC,MAAOxC,EAAM9Q,GAAImF,GAC9CA,EAIT4f,yBAAyBjU,GACvB,IAAK1L,IAAa,0BAA2B,OAC7C,IAAID,EAAS5G,KAAKoZ,wBAAwB,cAG1C,OAFAxS,EAAO3B,KAAOjF,KAAKR,KAAK,6BACxBQ,KAAKwuB,0BAA0Bjc,EAAMwC,MAAOxC,EAAM9Q,GAAImF,GAC/CA,EAIT2nB,yBAAyBxZ,EAAO1C,EAASlJ,GACvC,MAAM7D,EAAY,SAEZmpB,EACJ,SAAU1Z,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,QAElE,IAAIC,EAAe1uB,KAAKqX,6BACpBsX,EAAkB3uB,KAAKqX,6BAE3BoX,EAAQjoB,SAAShB,IACf,MAAMopB,EAAa5uB,KAAKynB,eAAejiB,GACjCP,EAAO2pB,EAAW3tB,MAClBwE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE/D,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAWwT,EAAWC,SAAW,GAAK,SACtCC,EAAQF,EAAW5tB,KACzB,IAAIwJ,EAAS,CACXvF,KAAMA,EACNxD,GAAI+D,EAAE/D,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZ5V,EAAEupB,YACEL,EAAaplB,QAAQ5C,KAAK8D,GAC1BmkB,EAAgBrlB,QAAQ5C,KAAK8D,MAGnCxK,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,4BACVkvB,GAEF1uB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0BACVmvB,GAKJtH,oBAAoBtB,EAAM1T,GACxB,MAAMlJ,EAAWnJ,KAAKoZ,wBAAwB,cACxC9T,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAErBwlB,EAASzU,OAAOjG,OAAO2H,WAC1BzP,QAAQiO,KAAQA,EAAEqC,QAClBxT,KAAKmR,GAAMA,EAAEqC,QAEhB,IAAKia,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAW6L,EAAOvK,OAAO3H,KAE3B,SAAUA,EAAM0Z,QAAQjqB,QACpBuQ,EAAM0Z,QAAQjqB,QACduQ,EAAM0Z,SACJ/Z,MAAMlP,GAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,QAEpD,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1B,MAAM8kB,EAAUtvB,KAAKR,KAAK,6BAC1BQ,KAAKwX,gCAAgCrO,EAAUmmB,EAASF,GACxDpvB,KAAKqZ,yBAAyB0M,EAAMuJ,EAASnmB,GAI/CqlB,0BAA0BzZ,EAAO1C,EAASlJ,GACxC,MAAM7D,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAG3B,IAAKutB,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WAGpDgW,GADJ,SAAUrG,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,SACzC/Z,MAAMlP,GAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,KACnE,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1BxK,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACV4vB,GAKJpB,yBAAyB1oB,EAAW6D,EAAUkJ,GAC5C,MAAMkd,EAAS3wB,KAAK2wB,OACpB,IAAIC,EAAWC,EACXF,IACFC,EAAYD,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAYA,IACxDod,EAAoBD,GAAWG,YAGjC,IAAIA,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCAQ9BiwB,IAAmBG,EAAiBtU,MAAQmU,GAChDG,EAAiBxU,SAAWqU,EAAoB,SAAW,GAE3DE,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJE,8BAA8BvqB,EAAW+M,EAASlJ,GAChD,MAAMomB,EAAS3wB,KAAK2wB,OAEpB,IAaIO,EAbAH,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCASlC,GAAI+vB,EAAQ,CAKVO,EAJetd,OAAOjG,OAAO2H,WAAW3S,KAAKmR,GAAMA,EAAEjR,KACtBF,KAAKE,GAClC8tB,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAY5Q,MAEnBib,OAAOlb,KAAQA,GAAGmuB,aAG/CC,EAAiBxU,SAAW0U,EAAW,SAAW,GAElDH,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJxT,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WACxC9T,EAAY,UAEhBtF,KAAK6vB,8BAA8BvqB,EAAW+M,EAASlJ,GAEvD,IAAI4kB,EAAQ/tB,KAAKqX,6BACbgF,EAAUrc,KAAKqX,6BAEnB,GAAI4P,EAAOvK,OAAOrR,GAAsB,cAAhBA,EAAEpL,KAAKyB,OAAuB,CACpD,IAAIusB,EAAiB,CAAC3oB,EAAW+M,EAAS,aAAa1M,KACrD3F,KAAKoF,WAEP2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,YACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,8BAElB,IAAI0uB,EAAgB,CAAC5oB,EAAW+M,EAAS,YAAY1M,KAAK3F,KAAKoF,WAC/D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,WACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,6BAGlB,IAGI6uB,EAAoB,CACtB5sB,GAAI,cACJgE,aALqB,CAACH,EAAW+M,EAAS,eAAe1M,KACzD3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,+BAElB6uB,EAAkBjT,SAAW6L,EAAOvK,OACjCrR,GAAMA,EAAEpL,KAAKA,KAAK6kB,YAAYwJ,cAE7B,SACA,GACJjS,EAAQ/S,QAAQ5C,KAAK2nB,GAGvBruB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV2J,GAKJ8e,oBAAoB5V,EAAS0C,EAAOzP,EAAWqB,GAC7C,IAAI6D,EAASxK,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GAExD,OADA3G,KAAK+vB,aAAahb,EAAOpO,EAAM6D,GACxBA,EAITshB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,MAAMqpB,EAAWhwB,KAAKynB,eAAe9gB,GAC/B4Y,EAAS5Y,EAAKlF,IAAMkF,EAAKjB,IAC/B,IAAID,EAAe,CAACH,EAAW+M,EAASkN,GAAQ5Z,KAAK3F,KAAKoF,WACtDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,MAAMA,MAAMypB,YAAYhoB,MACxDkF,EAAS,CACX3B,KAAM0B,EAAK1B,KACXxD,GAAI8d,EACJ9Z,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GAWR,OAPEgvB,EAASG,WACRH,EAASG,SAASC,SACnBJ,EAASG,SAASlxB,QAElB2H,EAAO3B,MAAQ,KAAKjF,KAAKR,KAAK,+BAGzBoH,EAITmpB,aAAahb,EAAOpO,EAAM6D,GACxBA,EAAO8Q,MAAQtb,KAAKqwB,iBAAiB1pB,GAErC6D,EAAOkR,MAAQ1b,KAAKswB,aAAa3pB,GAEjC6D,EAAOmR,MAAQ3b,KAAKuwB,gBAAgB5pB,EAAMoO,GAG5Ckb,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAI1DypB,iBAAiB1pB,GAEf,IAAIC,EAAS,GACT8gB,EAFa1nB,KAAKynB,eAAe9gB,GAEb+gB,SAKxB,OAJIA,EAAW,IACb9gB,EAAS8gB,GAGJ9gB,EAIT0pB,aAAa3pB,GAEX,IAAIC,EAAS,GAET4pB,EAHaxwB,KAAKynB,eAAe9gB,GAGjB6pB,KACpB,OAAKA,GAEL5pB,EAAwB,IAAf4pB,EAAKvxB,OAAeuxB,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,MAE/CuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GARWA,EAYpB2pB,gBAAgB5pB,EAAMoO,GACpB,MAAMib,EAAWhwB,KAAKynB,eAAe9gB,GACrC,IAAIC,EAAS,GAET6pB,EAAcT,EAASU,SAAShvB,KACpC,GAAI+uB,GAA+B,KAAhBA,EAAoB,CACrC,IAAIE,EAAYX,EAASU,QAAQ7sB,OAC7B+sB,EAAWD,EAAU1R,OAAO,EAAG0R,EAAUE,YAAY,MACzD,GAAoB,cAAhBJ,EAA6B,CAC/B,IAAI5sB,EAASitB,YAAY/b,EAAO,aAAa6b,KAEzC/sB,IACF+C,EAAS/C,EAAO5E,OAAS,EACnB4E,EAAOsI,MAAKvF,GAAU,IAAI/C,EAAOsI,QAI3C,GAAoB,YAAhBskB,EAA2B,CAC7B,IAAIE,EAAYX,EAASU,QAAQ7sB,OAE7B2sB,EADSzb,EAAMsJ,MAAMvf,IAAI6xB,IACV1wB,KAAKA,KAAKuwB,KACzBA,GAAMvxB,QACR2H,EAAS4pB,EAAKvxB,MACVuxB,EAAKrkB,MAAKvF,GAAU,IAAI4pB,EAAKrkB,QAIrC,GAAsB,cAAhBskB,GAA+C,YAAhBA,EAA4B,CAC/D,IAAIE,EAAYX,EAASU,QAAQ7sB,OAE7B6jB,EADS3S,EAAMsJ,MAAMvf,IAAI6xB,IACN1wB,KAAKA,KAAKynB,SAC7BA,IACF9gB,EAAS8gB,IAKf,OAAO9gB,EAIT4gB,qBAAqBnJ,GACnB,IAAIzX,EAeJ,OAbIC,IAAa,uBACfD,EAASyX,EAAM5Z,QAAQkV,IACrB,MAAMoX,EAAQ/wB,KAAKynB,eAAe9N,GAClC,OACGoX,EAAMrH,cAEqB,WAA1BqH,EAAMrH,WAAWhoB,MACS,SAA1BqvB,EAAMrH,WAAWhoB,MACS,QAA1BqvB,EAAMrH,WAAWhoB,UAKlBkF,GAAkByX,EAI3BuL,yBAAyBI,GACvB,MAAMgH,EAAsB3a,OAAOgT,KACjCzqB,KAAK0qB,MAAM3F,OAAO0H,uBAClB5mB,QAAQC,GAAW,YAALA,IAChB,IAAIkC,EAASojB,EAiBb,OAdEpjB,EADEC,IAAa,8BACNmjB,EAAOvlB,QAAQkV,IACtB,MAAMoX,EAAQ/wB,KAAKynB,eAAe9N,GAClC,OACEoX,EAAM7F,YAAY+F,UAClBD,EAAoBjtB,SAASgtB,EAAM7F,YAAYC,OAC/B,IAAhB4F,EAAM5G,SAIDH,EAAOvlB,QACbkV,GAAM3Z,KAAKynB,eAAe9N,GAAGuR,YAAY+F,WAIvCrqB,EAGT8hB,qBAAqBrK,GACnB,OAAIxX,IAAa,kBAA0BwX,EAEpCA,EAAM5Z,QAAQkV,IAEnB,IAAI6W,EADUxwB,KAAKynB,eAAe9N,GACjB6W,KAEjB,OAAKA,KAGDA,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,UAO9B2oB,gBAAgBvJ,GACd,IAAIzX,EAASyP,OAAOiE,OAAO+D,GAI3B,OAFAzX,EAAOwE,MAAK,CAACC,EAAGC,IAAMD,EAAED,KAAOE,EAAEF,OAE1BxE,EAIT8mB,oBAAoBvD,GAOlB,MANc,CACZ,EAAG,GACH,GAAK,gCACL,EAAG,+BACH,EAAG,uCAEQA,GAGf+F,eAAe1lB,GAcb,MAbY,CAEV0mB,MAAO,8BACPC,KAAM,+BACNpE,UAAW,gCACXqE,SAAU,8BAEVC,QAAS,8BACTvE,KAAM,8BACNwE,OAAQ,yCACRC,KAAM,wCACNC,IAAK,wCAEIhnB,GAGbid,eAAe7iB,GACb,OAAOA,EAAO3E,KAAKA,MAAQ2E,EAAO3E,MCjpC/B,MAAMwxB,mCAAmC7L,gBAE9CI,uBAAuBzT,GACrB,MAAMmf,EAAM9yB,KAAKsf,QAAQpf,IAAI,6BAA6B4yB,IACpDC,QAAmBD,EAAIE,oBAAoBrf,EAAMwC,OAEvD,MAAO,CACL/U,KAAK6xB,qBAAqBtf,EAAO,UAAWof,EAAWnnB,QACvDxK,KAAK6xB,qBAAqBtf,EAAO,eAAgBof,EAAWT,OAC5DlxB,KAAK6xB,qBAAqBtf,EAAO,YAAaof,EAAWP,UACzDpxB,KAAK6xB,qBAAqBtf,EAAO,cAAeof,EAAWR,MAC3DnxB,KAAK6xB,qBACHtf,EACA,mBACAof,EAAW5E,WAEb/sB,KAAK6xB,qBAAqBtf,EAAO,cAAeof,EAAW7E,MAC3D9sB,KAAK6xB,qBAAqBtf,EAAO,iBAAkBof,EAAWG,OAC9D9xB,KAAKqmB,qBAAqB9T,GAC1BvS,KAAKsmB,wBAAwB/T,GAC7BvS,KAAKumB,sBAAsBhU,GAC3BvS,KAAKwmB,yBAAyBjU,GAC9BvS,KAAKymB,sBAAsBlU,IAI/Bsf,qBAAqBtf,EAAOjS,EAAOgJ,GACjC,MAAMH,EAAWnJ,KAAKoZ,wBAAwB9Y,GAC9C6I,EAASlE,KAAOjF,KAAKR,KAAK,kBAAkBc,KAE5C,IAAI0pB,EAAS,GACb,IAAK,MAAM3e,KAAK/B,EACA,SAAV+B,EAAE3J,OACJsoB,EAAOtjB,KAAK2E,GACZ/B,EAAQyoB,OAAO1mB,IAIS,cAA1BkH,EAAMwC,MAAM9U,KAAKyB,MAChBmF,IAAa,qBAEdmjB,EAAShqB,KAAK4pB,yBAAyBI,IAEzCA,EAAShqB,KAAK8pB,mBAAmBE,GACjCA,EAAShqB,KAAK+pB,kBAAkBxX,EAAMwC,MAAOxC,EAAM9Q,GAAIuoB,GAEvDhqB,KAAKgyB,wBACHzf,EACApJ,EACAG,EACAtJ,KAAKR,KAAK,2BACTma,GAAgB,UAAVA,EAAEjY,OAEX1B,KAAKgyB,wBACHzf,EACApJ,EACAG,EACAtJ,KAAKR,KAAK,6BACTma,GAAgB,aAAVA,EAAEjY,OAEX1B,KAAKgyB,wBACHzf,EACApJ,EACAG,EACAtJ,KAAKR,KAAK,+BACTma,GAAgB,cAAVA,EAAEjY,OAEX1B,KAAKgyB,wBACHzf,EACApJ,EACAG,EACAtJ,KAAKR,KAAK,yBACTma,GAAgB,QAAVA,EAAEjY,OAEX1B,KAAKgyB,wBACHzf,EACApJ,EACAG,EACAtJ,KAAKR,KAAK,yBACTma,IAAM,IAGT,IAAK,MAAMsY,KAAUjI,EAAOpR,cAC1B5Y,KAAKwX,gCAAgCrO,EAAU8oB,EAAOhtB,KAAMgtB,GAG9D,OAAO9oB,EAKT6oB,wBAAwBzf,EAAOpJ,EAAUG,EAAShJ,EAAO4xB,GACvD,MAAM3Y,EAASvZ,KAAKqX,6BACd8a,EAAU,IAAIC,IACpB,IAAK,MAAM/mB,KAAK/B,EACV4oB,EAAU7mB,KACZ8mB,EAAQE,IAAIhnB,GACZ/B,EAAQyoB,OAAO1mB,IAGf8mB,EAAQ7e,KAAO,IACjBiG,EAAOjQ,QAAU,IAAI6oB,GAAS5wB,KAAKoY,GACjC3Z,KAAKioB,oBAAoB1V,EAAM9Q,GAAI8Q,EAAMwC,MAAO,OAAQ4E,KAE1D3Z,KAAKwX,gCAAgCrO,EAAU7I,EAAOiZ,KCzGrD,MAAM+Y,iCAAiC9Q,eAC5C5hB,cACEG,QAIF+f,qBAAqBnc,EAAO8B,GAC1B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEjC,GAAsB,GAAlBD,EAAQtf,OAAa,OAAO,EAEhC,IAAIyD,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEvB,MAAiB,aAAb7b,IAEJtF,KAAKuyB,gBAAgB5uB,EAAO0O,EAASgP,IAC9B,GAGTkR,gBAAgB5uB,EAAO0O,EAASgP,GAC9B,IAAItM,EAAQhV,MAAMue,SAASjM,GACvBmgB,EAAcnR,EAASD,MAAM,KAE7B7B,EAASiT,EAAY,GACrBC,EAAgBD,EAAY,GAEXE,WAAW3d,MAAMA,EAAMrP,KAE7B+f,KAAKlG,EAAQkT,GAE5BvwB,MAAMyF,QAAQ,8BC/BX,MAAMgrB,oCAAoC7U,mBAC/Cle,cACEG,QAIFsd,iBAAiBtE,EAAY5E,GAC3B,GAAIA,EAAgB,OAEpB,IAAI9B,EAAU0G,EAAW1G,QACrBmC,EAAUuE,EAAWvE,QAEzB,IAAKA,EAAS,OAEd,IAAIoe,EAAiB7Z,EAAWC,WAAWpX,MACxCJ,GAAe,cAATA,EAAEC,KAEPsT,EAAQ2d,WAAW3d,MAAMP,GAE7B,IAAMO,IAAS6d,EAAiB,OAEhC,IAAIC,EAAa9d,EAAMsJ,OAAS,GAEhC,GAA0B,IAAtBwU,EAAWhxB,OAAc,OAE7B,IAAIixB,EAAqB9yB,KAAKoZ,wBAAwB,oBACtD0Z,EAAmB7tB,KAAOjF,KAAKR,KAAK,6BAEpC,IAAIuzB,EAAgBF,EAAWtxB,KAAKoF,GAASA,EAAKlF,KAElDmxB,EAAeha,cAAcpS,SAASC,IACpCA,EAAE6C,QAAQ9C,SAASgE,IACjB,IAAKuoB,EAAchvB,SAASyG,EAAO/I,IAAK,OAExC,IAAIuxB,EAAYH,EAAWjxB,MAAM+E,GAASA,EAAKlF,KAAO+I,EAAO/I,KAE7D,GAAIuxB,EAAUC,UAAYjzB,KAAKkzB,eAAeF,GAAY,OAE1D,GAAIA,EAAU1L,WAAatnB,KAAKmzB,gBAAgBH,GAAY,OAE5D,IAAI5b,EAAcpX,KAAKqX,6BACvBD,EAAYkE,MAAQ,GAAG0X,EAAUxC,QAAQwC,EAAUI,UAEnDJ,EAAUK,aAAa7sB,SAAS8sB,IAC9B,IAAIC,EAASD,EAAM3sB,KACflB,EAAe,CACjB,YACA4M,EACA,GAAG7H,EAAO/I,MAAM8xB,EAAO9xB,MACvBkE,KAAK,KACHC,EAAM5F,KAAKiwB,UAAUsD,GACrBC,EAAkB,CACpBvuB,KAAMsuB,EAAOtuB,KACbxD,GAAI8xB,EAAO9xB,GACXgE,aAAcA,EACdG,IAAKA,GAEP4tB,EAAgBlY,MAAQiY,EAAOE,YAC3BF,EAAOG,YACTF,EAAgB9X,MAAQ,GAAG1b,KAAKR,KAC9B,uCACG+zB,EAAOG,aACdtc,EAAY9N,QAAQ5C,KAAK8sB,MAG3Bpc,EAAY9N,QAAQqU,QAAQnT,GAE5BxK,KAAKwX,gCACHsb,EACAtoB,EAAOvF,KACPmS,SAKNpX,KAAKqZ,yBACHN,EACA+Z,EAAmB7tB,KACnB6tB,GACA,GAIJ7C,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAG1DusB,gBAAgBH,GACd,OAAOA,EAAUrsB,KAAK1G,KAAKA,KAAKqnB,SAGlC4L,eAAeF,GACb,IAAIhD,EAAWgD,EAAUrsB,KAAK1G,KAAKA,KAEnC,GAAM+vB,EAAS2D,WAAY,CACzB,MAAMV,EAAUhE,OAAO2E,MAAMC,iBAAiBC,SAAW,EACzD,OAAO9D,EAAS2D,aAAeV,EAGjC,QAAMjD,EAASiD,SAAgBjD,EAASiD,SCtGrC,MAAMc,0BAA0B3U,YACrCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEvB,GAAgB,UAAZ9O,EACF,IAAK,IAAIK,KAAKF,OAAOjG,OAAO2H,WAAY,CACtC,IAAI8f,EAAUthB,EAAEjR,SACVzB,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,cAGhDrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIxD4S,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,OAAQ/b,GACN,IAAK,UACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,QACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,cACHrhB,KAAKo0B,qBAAqBzwB,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACHrhB,KAAKq0B,sBAAsB1wB,EAAO0O,EAASgP,GAC3C,MACF,IAAK,OACL,IAAK,QACL,IAAK,OACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,GACxC,MACF,IAAK,gBACGrhB,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,GAC/C,MACF,IAAK,eACGrhB,KAAKu0B,aAAa5wB,EAAO0O,EAASgP,GACxC,MACF,IAAK,kBACGrhB,KAAKw0B,gBAAgB7wB,EAAO0O,EAASgP,IAMjD6S,iBAAiBvwB,EAAO0O,EAASoiB,GACjB10B,MAAMue,SAASjM,GACvBqiB,YAAYD,EAAS,CAAE9wB,MAAOA,IAGtC0wB,sBAAsB1wB,EAAO0O,EAASoiB,GACtB10B,MAAMue,SAASjM,GACvBsiB,gBAAgBF,EAAS,CAAE9wB,MAAOA,IAG1CywB,qBAAqBzwB,EAAO0O,EAASoiB,GACrB10B,MAAMue,SAASjM,GACvBuiB,gBAAgBH,EAAS,CAAE9wB,MAAOA,IAG1CwwB,eAAexwB,EAAO0O,EAASoiB,GACf10B,MAAMue,SAASjM,GACvBwiB,UAAUJ,EAAS,CAAE9wB,MAAOA,IAGpC6hB,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAO5G,MAAMuf,QAAQvK,EAAOwK,GAEhC,IAAIvf,KAAK80B,cAAcnuB,GAKvB,MAAuB,UAAnBA,EAAK1G,KAAKyB,KAAyBqT,EAAMggB,SAASpuB,GAE/CA,EAAK8e,KAAK,CAAE9hB,MAAAA,IANjBgD,EAAKquB,eASTF,cAAcnuB,GACZ,MAAMqpB,EAAWhwB,KAAKynB,eAAe9gB,GACrC,OACEqpB,EAASG,WAAaH,EAASG,SAASC,SAAWJ,EAASG,SAASlxB,MAIzEq1B,0BAA0B3wB,EAAO0O,EAASgP,GACxC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvBE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,YACHtM,EAAMkgB,YACN,MACF,IAAK,WACHlgB,EAAMmgB,WACN,MACF,IAAK,cACH,IAAI9nB,GAAU2H,EAAM9U,KAAKA,KAAK6kB,WAAWwJ,YACzCvZ,EAAM3H,OAAO,CAAE,8BAA+BA,IAC9C,MACF,IAAK,eACHmF,EAAMgP,eACNrf,MAAMyF,QAAQ,6BACd,MACF,IAAK,mBACH4K,EAAM+O,mBACN,MACF,IAAK,YACHvM,EAAMogB,cAAc,CAAExxB,MAAAA,IACtB,MACF,IAAK,mBACG3D,KAAKo1B,uBAAuB/iB,IAKxC+iB,6BAA6B/iB,GAC3B,IAAI0C,EAAQhV,MAAMue,SAASjM,SAErB0C,EAAMsgB,eAAe,CAAEC,kBAAkB,IAE/CpzB,MAAMyF,QAAQ,6BAGhB4sB,mBAAmB5wB,EAAO0O,EAASkjB,GACjC,MAAMxgB,EAAQhV,MAAMue,SAASjM,GAGvBkhB,GADJ,SAAUxe,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,QAAQjqB,QAAUuQ,EAAM0Z,SAC3C7sB,MAAM4D,GAAMA,EAAE/D,KAAO8zB,IAE5C,IAAKhC,EAAQ,OAEb,MAAMlE,EAAWkE,EAAOtzB,KAAK6R,MAAM+G,MAAMwW,SACrCA,QACIrvB,KAAKw0B,gBAAgB7wB,EAAO0O,EAASgd,UAIvCkE,EAAOnmB,OAAO,CAAEyhB,UAAW0E,EAAOtzB,KAAK4uB,WAC7C3sB,MAAMyF,QAAQ,8BAGhB6sB,sBAAsB7wB,EAAO0O,EAASkjB,GACpC,MAAMhjB,EAAQxS,MAAMyf,SAASnN,GACvB+N,EAAepgB,KAAKogB,aAAazc,GACvC,GACE4xB,EAASxxB,SAAS,yBAClBnF,KAAK42B,MACJpV,EACD,CACA,MAAMqV,EAAez1B,KAAK01B,cAAcH,IAAWt0B,MACnD,IAAKw0B,EAAc,OAEnB72B,KAAK42B,IAAIG,aAAaF,EAAcljB,SAC1B3T,KAAK42B,IAAII,gBAAgBH,EAAcljB,SACvC3T,KAAK42B,IAAIK,aAAaJ,EAAcljB,OACzC,CACL,MAAM4c,EAAYnvB,KAAK01B,cAAcH,GACrC,IAAKpG,EAAW,OAEhB/O,QACU7N,EAAMujB,cAAc3G,SACpB5c,EAAMgiB,aAAapF,GAG/BjtB,MAAMyF,QAAQ,6BAGhB+tB,cAAcj0B,GACZ,OAAOwtB,OAAOC,cAActtB,MAAM2xB,GAAWA,EAAO9xB,KAAOA,IAG7DgmB,eAAe7iB,GACb,OAAOA,EAAO3E,KAAKA,MAAQ2E,EAAO3E,MC9L/B,MAAM81B,8BAA8BhC,kBACzCn0B,cACEG,QAIFylB,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAOoO,EAAMsJ,MAAMvf,IAAIygB,GAgB3B,IAAIyW,EAdAh2B,KAAK80B,cAAcnuB,GACrBA,EAAKquB,eAIHh1B,KAAKmgB,YAAcngB,KAAKqgB,KAC1B1Z,EAAKsvB,aAGHj2B,KAAKmgB,YAAcngB,KAAKugB,IAC1B5Z,EAAKuvB,cAKHvvB,EAAK1G,KAAKA,KAAKk2B,YAAYC,MAC7BJ,EAAYh2B,KAAKmgB,YAGnBkW,SAASC,eAAe,CAAEvhB,MAAAA,EAAOpO,KAAAA,EAAMhD,MAAAA,EAAOqyB,UAAAA,MC7B3C,MAAMO,4BAA4BxC,kBACvCn0B,cACEG,QAIFs0B,sBAAsB1wB,EAAO0O,EAASoiB,GACpC,IAAI1f,EAAQhV,MAAMue,SAASjM,GAC3BmkB,SAASC,MAAMhR,KAAK1Q,EAAO,CAAE0Q,KAAM,MAAOiR,IAAKjC,IAIjDL,qBAAqBzwB,EAAO0O,EAASoiB,GACnC,IAAI1f,EAAQhV,MAAMue,SAASjM,GAC3BmkB,SAASC,MAAMhR,KAAK1Q,EAAO,CAAE0Q,KAAM,OAAQkR,KAAMlC,IAInDN,eAAexwB,EAAO0O,EAASoiB,GAC7B,IAAI1f,EAAQhV,MAAMue,SAASjM,GAC3BmkB,SAASC,MAAMhR,KAAK1Q,EAAO,CAAE0Q,KAAM,MAAOmR,IAAKnC,IAIjDjP,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GAC3BmkB,SAASC,MAAMhR,KAAK1Q,EAAO,CAAE0Q,KAAM,OAAQhkB,GAAI8d,KCjB5C,MAAMsX,2BAA2BhU,cACtCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAChC,IAAI+P,EAgBJ,OAXEA,EAHA0L,cAAc7E,eAAe,8BAC7BnX,IAAa,iBAEG,IAAI4qB,2BAClBzqB,EACAI,GAGc,IAAIuV,gBAAc3V,EAAeI,GAG/Cyb,cAAc7E,eAAe,eAC/B7G,EAAcmG,wBAAwB,IAAIqV,6BAErCxb,EAITkM,2BACE,IAAIyT,EAAY,aAEZjU,cAAc7E,eAAe,cAC/B8Y,GAAa,cAAcjU,cAAc4B,eAAe,gBAE1D,IAAIxiB,EAAU,CAAE4W,KAAMie,GAItB,OAHAjU,cAAc2B,WAAWviB,EAAS,aAClC4gB,cAAc2B,WAAWviB,EAAS,YAE3BA,EAITihB,iBAAiBE,GACf,IAAIrW,EACJ,OAAQqW,GACN,IAAK,YACHrW,EAAc,IAAIgqB,sBAClB,MACF,IAAK,WACHhqB,EAAc,IAAIiqB,oBAClB,MACF,IAAK,OACL,QACEjqB,EAAc,IAAI4Y,kBAOtB,OAHI9C,cAAc7E,eAAe,eAC/BjR,EAAYmT,kBAAkB,IAAIoS,0BAE7BvlB,EAITgX,mBAAmB3kB,EAASJ,IC1EvB,SAASwkB,WAASpkB,EAASJ,GAChCJ,KAAKC,SAAS2kB,SAASpkB,EAAS,qBAAsB,CACpD6F,KAAMrG,KAAKY,KAAKE,SACd,yDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,yDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,gBAAiB,CAC/C6F,KAAMrG,KAAKY,KAAKE,SACd,oDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,oDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,6BAA8B,CAC5D6F,KAAMrG,KAAKY,KAAKE,SACd,iEAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,iEAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,oBAAqB,CACnD6F,KAAMrG,KAAKY,KAAKE,SACd,wDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,wDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,mBAAoB,CAClD6F,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,iBAAkB,CAChD6F,KAAMrG,KAAKY,KAAKE,SACd,qDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,qDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,kBAAmB,CACjD6F,KAAMrG,KAAKY,KAAKE,SACd,sDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,sDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,iBAAkB,CAChD6F,KAAMrG,KAAKY,KAAKE,SACd,qDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,qDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIfL,KAAKC,SAAS2kB,SAASpkB,EAAS,yBAA0B,CACxD6F,KAAMrG,KAAKY,KAAKE,SACd,6DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,6DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MAIXL,KAAKsf,QAAQpf,IAAI,8BAA8Bqf,QACjDvf,KAAKC,SAAS2kB,SAASpkB,EAAS,gBAAiB,CAC/C6F,KAAMrG,KAAKY,KAAKE,SAAS,8CACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,8CACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,EAAWC,MD/Efg4B,CAAwB73B,EAASJ,IExE9B,MAAMk4B,+BAA+Bva,cAC1C/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IACzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAIof,EAAa9kB,KAAKm3B,eAAepiB,EAAO1C,GACxC+kB,EAAUp3B,KAAKq3B,cAActiB,EAAO1C,GACpCilB,EAAUt3B,KAAKu3B,YAAYxiB,EAAO1C,GAClC2X,EAAShqB,KAAKw3B,WAAWziB,EAAO1C,GAChCgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,GAiD1C,OA/CArS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,+CACVslB,GAGsB,cAApB/P,EAAM9U,KAAKyB,KACb1B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAGFp3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,mDACV43B,GAGoB,cAApBriB,EAAM9U,KAAKyB,KACb1B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV83B,GAGFt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,oDACV83B,GAGJt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVwqB,GAEFhqB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV6c,GAGFrc,KAAKy3B,sBAAsB1iB,GAEvBlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGTywB,cAActiB,EAAO1C,GACnB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,SAEtChC,EAAcpX,KAAKqX,6BAqBvB,OAnBAD,EAAY9N,QAAUtJ,KAAK03B,YACzBrlB,EACA0C,EAAMsJ,MACH5Z,QAAQkV,GAAMA,EAAEjY,MAAQ4D,IACxB/D,KAAKoF,IACG,CACL1B,KAAM0B,EAAK1B,KACXQ,aAAc,CAACkB,EAAKjF,KAAM2Q,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,eAG7DE,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV4X,GAGKxQ,EAGTuwB,eAAepiB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa9kB,KAAKqX,6BAClB/R,EAAY,YAGZqyB,EADqBthB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YACjBvjB,KAAKC,IAGnC,CAAEyD,KAFEjF,KAAKR,KAAK,4BAA8BgC,EAAE,IAEhCiE,aADF,CAACH,EAAW+M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WACP3D,GAAID,EAAE,OAWzD,OARAsjB,EAAWxb,QAAUtJ,KAAK03B,YAAYrlB,EAASslB,EAAeryB,GAE9DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+CACVslB,GAGKle,EAGTgxB,oBAAoB7R,EAAM1T,EAAS4U,GACjC,IAAIrgB,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa9kB,KAAKqX,6BAClB/R,EAAY,YAEZqyB,EAAgB,KAGlB1Q,EAAOvK,OAAO3H,IACZ,IAAI8iB,EAAqBxhB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YAExD6S,EAAgBE,EAAmBt2B,KAAKC,IAG/B,CAAEyD,KAFEjF,KAAKR,KAAK,4BAA8BgC,EAAE,IAEhCiE,aADF,CAACH,EAAW+M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WACP3D,GAAID,EAAE,UAKxC,MAAjBm2B,IACF7S,EAAWxb,QAAUtJ,KAAK03B,YAAYrlB,EAASslB,EAAeryB,GAE9DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+CACVslB,GAEF9kB,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,+CACVoH,IAKN2wB,YAAYxiB,EAAO1C,GACjB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,WAEtCke,EAAUviB,EAAMsJ,MAAM5Z,QAAQkV,GAAMA,EAAEjY,MAAQ4D,IAqClD,MAnCe,IACV,IAAI8sB,IAAIkF,EAAQ/1B,KAAKu2B,GAAWA,EAAO73B,KAAKA,KAAK83B,cAE/C3sB,OAAO5E,SAASwxB,IACrB,GAAata,MAATsa,EAAoB,CACtB,IAAIC,EAAgBj4B,KAAKqX,6BACzB4gB,EAAchzB,KAAO+yB,EACrBpxB,EAAOgS,cAAclS,KAAKuxB,GAE1B,IAAIC,EAAmBl4B,KAAKqX,6BAC5BigB,EAAQ9wB,SAAS2xB,IACf,GAAIA,EAAYl4B,KAAKA,KAAK83B,WAAaC,EAAO,CAC5C,IAAIvyB,EAAe,CAACH,EAAW+M,EAAS8lB,EAAYzyB,KAAKC,KACvD3F,KAAKoF,WAEHgzB,EAAY,CACdnzB,KAAMkzB,EAAYlzB,KAClBQ,aAAcA,EACdhE,GAAI02B,EAAYzyB,KAElB0yB,EAAUxyB,IAAM5F,KAAKiwB,UAAUkI,GAC/BC,EAAU1c,MAAQ1b,KAAKswB,aAAa6H,GAEpCD,EAAiB5uB,QAAQ5C,KAAK0xB,OAIlCp4B,KAAKwX,gCACHygB,EACAD,EACAE,OAKCtxB,EAGT4wB,WAAWziB,EAAO1C,GAChB,IACIzL,EAAS5G,KAAKoZ,wBAAwB,UAEtC4Q,EAASjV,EAAMsJ,MAAM5Z,QAAQkV,GAHjB,UAGuBA,EAAEjY,OAErCmoB,EAAe7pB,KAAKq4B,kBAAkBrO,GACtCsO,EAAkBt4B,KAAK+pB,kBAAkB1X,EAASwX,GAQtD,OANA7pB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACV84B,GAGK1xB,EAGTyxB,kBAAkBrO,GAChB,IAAIpjB,EAASyP,OAAOiE,OAAO0P,GAY3B,OAVApjB,EAAOwE,MAAK,CAACC,EAAGC,IACVD,EAAEpL,KAAKs4B,OAASjtB,EAAErL,KAAKs4B,KAClBltB,EAAEpG,KACNmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,SAEZjf,EAAEpL,KAAKs4B,KAAOjtB,EAAErL,KAAKs4B,OAGvB3xB,EAGTmjB,kBAAkB1X,EAAS2X,GACzB,MAAM1kB,EAAY,QAClB,IAAIsB,EAAS5G,KAAKqX,6BAqClB,MAnCmB,IACd,IAAI+a,IAAIpI,EAAOzoB,KAAKsqB,GAAUA,EAAM5rB,KAAKA,KAAKu4B,cAExCptB,OAAO5E,SAASgyB,IACzB,GAAiB9a,MAAb8a,EAAwB,CAC1B,IAAIC,EAAoBz4B,KAAKqX,6BAC7BohB,EAAkBxzB,KAAOuzB,EACzB5xB,EAAOgS,cAAclS,KAAK+xB,GAE1B,IAAIP,EAAmBl4B,KAAKqX,6BAC5B2S,EAAOxjB,SAASkyB,IACd,GAAIA,EAAWz4B,KAAKA,KAAKu4B,WAAaA,EAAW,CAC/C,IAAI/yB,EAAe,CAACH,EAAW+M,EAASqmB,EAAWhzB,KAAKC,KACtD3F,KAAKoF,WAEHuzB,EAAW,CACb1zB,KAAMyzB,EAAWzzB,KACjBQ,aAAcA,EACdhE,GAAIi3B,EAAWhzB,KAEjBizB,EAAS/yB,IAAM5F,KAAKiwB,UAAUyI,GAC9BC,EAASjd,MAAQ1b,KAAK44B,iBAAiBF,GAEvCR,EAAiB5uB,QAAQ5C,KAAKiyB,OAIlC34B,KAAKwX,gCACHihB,EACAD,EACAN,OAKCtxB,EAGTkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,WAAY,aAClC,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C1B,KAAK43B,oBAAoB7R,EAAMA,EAAK1T,QAAS4U,GAC7CjnB,KAAKmc,mBAAmB4J,EAAMA,EAAK1T,QAAS4U,GAG9C7K,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BAEjB,GAAwB,cAApBtC,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIusB,EAAiB,CAAC3oB,EAAW+M,EAAS,QAAQ1M,KAAK3F,KAAKoF,WAC5D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,4CAUpB,OANAQ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0CACVuuB,GAGKnnB,EAGTuV,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WACxC9T,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BAEjB,GAAI4P,EAAOvK,OAAO3H,GAA8B,cAApBA,EAAM9U,KAAKyB,OAAuB,CAC5D,IAAIusB,EAAiB,CAAC3oB,EAAW+M,EAAS,OAAQ,IAAI1M,KACpD3F,KAAKoF,WAEP2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,4CAIpBQ,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0CACVuuB,GAEF/tB,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV2J,GAKJsuB,sBAAsBh2B,EAAI4c,GACxB,IAAIle,EAAcke,GAAO9c,KAAKkF,IACrB,CAAEhF,GAAIgF,EAAEf,IAAKzG,MAAOwH,EAAExB,SAE3B9E,GAAa0B,OAAS,GACxB7B,KAAKgH,cAAc6O,eAAepU,EAAItB,GAG1C04B,gBAAgBxxB,EAAY4d,GAC1B,IAAI6T,EAAgB94B,KAAKgH,cAAc0O,iBAAiBrO,GACpDT,EAASqe,EAAOxgB,QAAQgC,KAAQA,IASpC,OARIqyB,EAAcj3B,OAAS,IAEvB+E,EADE5G,KAAKgH,cAAce,YAAYV,GACxB4d,EAAOxgB,QAAQgC,IAAOqyB,EAAc/0B,SAAS0C,EAAExB,QAE/CggB,EAAOxgB,QAAQgC,GAAMqyB,EAAc/0B,SAAS0C,EAAExB,SAIpD2B,EAGT8wB,YAAYrlB,EAAS0mB,EAASr3B,GAC5B,OAAOq3B,EAAQx3B,KAAKoY,IAClB,IAAI3Y,EAAOhB,KAAKiwB,UAAUtW,GACtB/S,EAAS,CACX3B,KAAM0U,EAAE1U,KACRQ,aAAckU,EAAElU,aAChBhE,GAAIkY,EAAEjU,IACN1E,KAAAA,GAKF,MAFa,WAATU,IAAmBkF,EAAO8U,MAAQ1b,KAAKswB,aAAa3W,IAEjD/S,KAIXqpB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAG1D0pB,aAAa3pB,GACX,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKA,KAAKuwB,KAC1B,OAAKA,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,EAapBgyB,iBAAiBjyB,GACf,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKA,KAAK+4B,SAC1B,OAAKxI,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,GCpaf,MAAMqyB,iCAAiC7Z,YAC5Cxf,cACEG,QAGFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEP,UAAZ9O,EACFG,OAAOjG,OAAO2H,WAAW1N,SAASkM,IAChC,IAAIshB,EAAUthB,EAAEzS,KAAKyF,IACrB1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,MAGhDrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIlD4S,cAActwB,EAAO2B,EAAW+M,EAASgP,GACvC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAO,KAKX,OAJI,CAAC,SAAU,gBAAiB,QAAS,UAAU5C,SAASuB,KAC1DqB,EAAOoO,EAAMsJ,MAAMvf,IAAIuiB,IAGjB/b,GACN,IAAK,YACH,MAAMuf,EAAY9P,EAAQA,EAAM9U,KAAKA,KAAK6kB,WAAWzD,GAAY,KACjEtM,EAAMmkB,cAAcrU,EAAWxD,GAC/B,MACF,IAAK,SACHtM,EAAMokB,iBAAiBxyB,EAAKjB,IAAK,MACjC,MACF,IAAK,SACL,IAAK,gBACHqP,EAAMqkB,WAAWzyB,EAAKjB,IAAK,MAC3B,MACF,IAAK,QACHqP,EAAMskB,UAAU1yB,EAAKjB,IAAK,MAC1B,MACF,IAAK,UACH1F,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,IAM/CiT,oBAAoB3wB,EAAO0O,EAASgP,GAClC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvBE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,OACHtM,EAAMukB,UAAU/mB,GAChB,MACF,IAAK,mBACHA,EAAM+O,mBACN,MACF,IAAK,eACH/O,EAAMgP,eACNrf,MAAMyF,QAAQ,+BCjEf,MAAM4xB,+BAA+B1W,cAC1CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,uBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,kBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,yBAIb5B,mBAAmB3kB,EAASJ,KCzBvB,MAAMw6B,wBAAwB7c,cACnC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAQlB,GANI1W,IAAa,uBACfD,EAAOyL,QAAU,KACjBzL,EAAO4N,QAAU,WACXxU,KAAKy5B,uBAAuB7yB,KAG/B2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAIg0B,EAAY3kB,EAAM9U,KAAKyB,KAE3B,GAAkB,QAAdg4B,EAAqB,CACvB,IAAIC,EAAS35B,KAAK45B,WAAW7kB,EAAO1C,GAChCwnB,EAAO75B,KAAK85B,SAAS/kB,EAAO1C,GAC5B0nB,EAAmB/5B,KAAKg6B,qBAAqBjlB,EAAO1C,GACxDrS,KAAKi6B,MAAQj6B,KAAKk6B,aAAanlB,EAAO1C,GAEtCrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVm6B,GAEF35B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,uBACVq6B,GAEF75B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,mCACVu6B,QAEG,GAAkB,cAAdL,EAA2B,CACpC,IAAIC,EAAS35B,KAAK45B,WAAW7kB,EAAO1C,GAChC8nB,EAAgBn6B,KAAKo6B,gBAAgBrlB,EAAO1C,EAAS,YACrDgoB,EAAgBr6B,KAAKo6B,gBAAgBrlB,EAAO1C,EAAS,YACrDioB,EAAat6B,KAAKo6B,gBAAgBrlB,EAAO1C,EAAS,SAClDkoB,EAAev6B,KAAKo6B,gBAAgBrlB,EAAO1C,EAAS,WACpDmoB,EAAax6B,KAAKo6B,gBAAgBrlB,EAAO1C,EAAS,IAClD2X,EAAShqB,KAAKw3B,WAChBziB,EACA1C,EACA,SACArS,KAAKR,KAAK,yBACV,SAEE2pB,EAAYnpB,KAAKy6B,sBACnB1lB,EACA1C,EACA,YACArS,KAAKR,KAAK,4BACV,aAEEknB,EAAY1mB,KAAK06B,cAAc3lB,EAAO1C,GAE1CrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVm6B,GAEF35B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2BACV26B,GAEFn6B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2BACV66B,GAEFr6B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV+6B,GAEFv6B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACV86B,GAEFt6B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACVg7B,GAEFx6B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVwqB,GAEFhqB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,4BACV2pB,GAEFnpB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,4BACVknB,GAMJ,OAFI7f,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGT6yB,6BAA6B1gB,GAC3B,IAAI5P,EAAWnJ,KAAKoZ,wBAAwB,MAExCuhB,EAAmB36B,KAAKqX,6BAC5BsjB,EAAiBrxB,cAAgBjF,iBAAiBc,qBAChD,kCACAnF,KAAKoF,WAEP,IAAIw1B,EAAY56B,KAAKR,KAAK,wBAC1BQ,KAAKwX,gCAAgCrO,EAAUyxB,EAAWD,GAE1D,IAAIE,EAAoB76B,KAAKqX,6BAC7BwjB,EAAkBvxB,cAAgBjF,iBAAiBc,qBACjD,sBACAnF,KAAKoF,WAEP,IAAI01B,EAAa96B,KAAKR,KAAK,yBAC3BQ,KAAKwX,gCACHrO,EACA2xB,EACAD,GAGF,IAAIE,EAAsB/6B,KAAKqX,6BAC/B0jB,EAAoBzxB,cAAgBjF,iBAAiBc,qBACnD,+BACAnF,KAAKoF,WAEP,IAAI41B,EAAeh7B,KAAKR,KAAK,2BAC7BQ,KAAKwX,gCACHrO,EACA6xB,EACAD,GAGF,IAAIzzB,EAAetH,KAAKR,KAAK,qBAC7BQ,KAAKqZ,yBAAyBN,EAAYzR,EAAc6B,GAG1DywB,WAAW7kB,EAAO1C,GAChB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC6hB,EAAiBj7B,KAAKqX,6BACtB5R,EAAe,CAAC,SAAU4M,EAAS,UAAU1M,KAAK3F,KAAKoF,WAa3D,OAZA61B,EAAe3xB,QAAQ5C,KAAK,CAC1BzB,KAAMjF,KAAKR,KAAK,aAChBiG,aAAcA,EACdhE,GAAI,WAGNzB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,aACVy7B,GAGKr0B,EAGTwzB,gBAAgBrlB,EAAO1C,EAAS6oB,GAC9B,IAAIjB,EAAQllB,EAAMomB,UAAUC,KAAK32B,QAC9BwT,GAAMA,EAAEhY,KAAKA,KAAKo7B,WAAaH,IAE9Bt0B,EAAS5G,KAAKoZ,wBAAwB,SAEtCkiB,EAAet7B,KAAKu7B,cAActB,EAAO5nB,GACzCmpB,EAAex7B,KAAKy7B,cAAcxB,EAAO5nB,GAa7C,OAXArS,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACV87B,GAEFt7B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACVg8B,GAGK50B,EAGT20B,cAActB,EAAO5nB,GACnB,IAAIqpB,EAAYzB,EAAMx1B,QAAQwT,GAA+B,KAAzBA,EAAEhY,KAAKA,KAAK07B,WAC5CC,EAAc57B,KAAK03B,YAAYrlB,EAASqpB,EAAW,QACnDJ,EAAet7B,KAAKqX,6BAGxB,OAFAikB,EAAahyB,QAAUsyB,EAEhBN,EAGTG,cAAcxB,EAAO5nB,GACnB,IAAIwpB,EAAY5B,EAAMx1B,QAAQwT,GAA+B,KAAzBA,EAAEhY,KAAKA,KAAK07B,WAC5CG,EAAc97B,KAAK03B,YAAYrlB,EAASwpB,EAAW,QACnDL,EAAex7B,KAAKqX,6BAGxB,OAFAmkB,EAAalyB,QAAUwyB,EAEhBN,EAITf,sBACE1lB,EACA1C,EACAhL,EACAC,EACAy0B,GAEA,IAAI1d,EAAQtJ,EAAMomB,UAAUY,GACxBn1B,EAAS5G,KAAKoZ,wBAAwB/R,GACtCiC,EAAUtJ,KAAK03B,YAAYrlB,EAASgM,EAAO0d,GAC3C5yB,EAAWnJ,KAAKqX,6BAKpB,OAJAlO,EAASG,QAAUA,EAEnBtJ,KAAKwX,gCAAgC5Q,EAAQU,EAAc6B,GAEpDvC,EAIT4wB,WAAWziB,EAAO1C,EAAShL,EAAYC,EAAcy0B,GACnD,IAOIC,EAPQjnB,EAAMomB,UAAUY,GAEzBt3B,QAAQgC,GAAMA,EAAExG,KAAKA,KAAKgxB,WAC1B7lB,MACC,CAACC,EAAGC,IACF9C,SAAS6C,EAAEpL,KAAKA,KAAKg8B,YAAczzB,SAAS8C,EAAErL,KAAKA,KAAKg8B,cAE3B71B,QAAO,CAACC,EAAKI,KAC9C,IAKIy1B,EALAD,EAAax1B,EAAExG,KAAKA,KAAKg8B,WACzBzQ,EACY,GAAdyQ,EACI,QACA,GAAGj8B,KAAKR,KAAK,2BAA2By8B,IAEzC51B,EAAIqO,MAAMynB,GAAMA,EAAEl3B,OAASumB,IAK9B0Q,EAAgB71B,EAAIzE,MAAMu6B,GAAMA,EAAEl3B,OAASumB,KAJ3C0Q,EAAgBl8B,KAAKqX,6BACrB6kB,EAAcj3B,KAAOumB,EACrBnlB,EAAIK,KAAKw1B,IAKX,IAAIE,EAAcp8B,KAAK03B,YAAYrlB,EAAS,CAAC5L,GAAIs1B,GAIjD,OAFAG,EAAc5yB,QAAQ5C,QAAQ01B,GAEvB/1B,IACN,IAECO,EAAS5G,KAAKoZ,wBAAwB/R,GAK1C,OAJA20B,EAAcx1B,SAAS+S,IACrBvZ,KAAKwX,gCAAgC5Q,EAAQ2S,EAAOtU,KAAMsU,MAGrD3S,EAIT8zB,cAAc3lB,EAAO1C,GACnB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,aAGtCijB,EADYhmB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKymB,WAClBnlB,KAAK8J,IACzB,CAAEpL,KAAM,CAAEyF,IAAK2F,EAAE,IAAMpG,KAAMoG,EAAE,GAAGpK,UAEvCqI,EAAUtJ,KAAK03B,YAAYrlB,EAASgqB,EAAc,WAClDC,EAAoBt8B,KAAKqX,6BAS7B,OARAilB,EAAkBhzB,QAAUA,EAE5BtJ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,4BACV88B,GAGK11B,EAGTszB,aAAanlB,EAAO1C,GAClB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,SAEtCmjB,EAAYxnB,EAAM9U,KAAKA,KAAKu8B,QAAQD,UAEpCE,EAAoBz8B,KAAKqX,6BACzBqlB,EAAgB,IAAIC,OAAO,oCAAqC,KAChEC,EAAclyB,MAAMC,KAAK4xB,EAAUM,SAASH,IAAgBn7B,KAAK0W,IACnE,IAAImjB,EAAOnjB,EAAE,GAEb,MAAO,CAAEhY,KAAM,CAAEyF,IADEo3B,mBAAmB1B,IACAn2B,KAAMm2B,MAG1C2B,EAAkB/8B,KAAK03B,YAAYrlB,EAASuqB,EAAa,YAC7DH,EAAkBnzB,QAAUyzB,EAE5B,IAAIC,EAAgBh9B,KAAKqX,6BACzB,IAAI4lB,EAAa,IAAIN,OAAO,6BAA8B,KACtDO,EAAWxyB,MAAMC,KAAK4xB,EAAUM,SAASI,IAAa17B,KAAK0W,IAC7D,IAAImjB,EAAOnjB,EAAE,GAEb,MAAO,CAAEhY,KAAM,CAAEyF,IADEo3B,mBAAmB1B,IACAn2B,KAAMm2B,MAG9C,IAAI+B,EAAen9B,KAAK03B,YAAYrlB,EAAS6qB,EAAU,QAcvD,OAbAF,EAAc1zB,QAAU6zB,EAExBn9B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACVi9B,GAEFz8B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+BACVw9B,GAGKp2B,EAGTkzB,SAAS/kB,EAAO1C,GACd,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,QACtCygB,EAAO9kB,EAAM9U,KAAKA,KAAKm9B,WAAWhc,MAAM,KAAK7f,KAAKmR,IACpD,IAAI2qB,EAAM3qB,EAAE4qB,OACZ,GAAmB,IAAfD,EAAIx7B,OAGR,MAAO,CAAE5B,KAAM,CAAEyF,IADEo3B,mBAAmBO,IACAp4B,KAAMo4B,MAG1CE,EAAcv9B,KAAKqX,6BAQvB,OAPAkmB,EAAYj0B,QAAUtJ,KAAK03B,YAAYrlB,EAASwnB,EAAM,OAEtD75B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACV+9B,GAEK32B,EAGTozB,qBAAqBjlB,EAAO1C,GAC1B,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,aACtCokB,EAAYzoB,EAAM9U,KAAKA,KAAK6kB,WAAWiV,iBAAiB96B,MACzDmiB,MAAM,KACN7f,KAAKkF,IACJ,IAAIg3B,EAAUh3B,EAAE62B,OAChB,GAAuB,IAAnBG,EAAQ57B,OAGZ,MAAO,CAAE5B,KAAM,CAAEyF,IADEo3B,mBAAmBW,IACAx4B,KAAMw4B,MAG5CC,EAAkB19B,KAAKqX,6BAQ3B,OAPAqmB,EAAgBp0B,QAAUtJ,KAAK03B,YAAYrlB,EAASmrB,EAAW,WAE/Dx9B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,mCACVk+B,GAEK92B,EAIT8wB,YAAYrlB,EAAS0mB,EAASzzB,GAC5B,OAAOyzB,EACJt0B,QAAQkV,KAAQA,IAChBpY,KAAKoY,IACJ,IAAIlU,EAAe,CAACH,EAAW+M,EAASsH,EAAE1Z,KAAKyF,KAAKC,KAClD3F,KAAKoF,WAEHuB,EAAO,CAAE1B,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAE1Z,KAAKyF,KAIlE,OAFA1F,KAAK+vB,aAAapW,EAAGhT,GAEdA,KAIbopB,aAAapW,EAAGhT,GACd,IAAI6pB,EAAO7W,EAAE1Z,KAAKA,MAAMuwB,KACxB7pB,EAAK2U,MAAQkV,GAAQ,GAErB,IAAI9I,EAAW/N,EAAE1Z,KAAKA,MAAMynB,SAC5B/gB,EAAK+U,MAAQgM,EAAW,EAAIA,EAAW,IC1ZpC,MAAMiW,0BAA0Bve,YACrCxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GACvBurB,EAAW7oB,EAAM9U,KAAKyB,KAE1B,GAAiB,cAAbk8B,EACF,OAAQt4B,GACN,IAAK,SACHtF,KAAK69B,cAAcv4B,EAAW3B,EAAOoR,EAAOsM,GAC5C,MACF,IAAK,OACL,IAAK,QACL,IAAK,YACHrhB,KAAK89B,YAAYx4B,EAAW3B,EAAO0O,EAAS0C,EAAOsM,GACnD,MACF,IAAK,UACHrhB,KAAK+9B,eAAez4B,EAAW3B,EAAOoR,EAAOsM,QAG5C,GAAiB,QAAbuc,EACT,OAAQt4B,GACN,IAAK,SACHtF,KAAK69B,cAAcv4B,EAAW3B,EAAOoR,EAAOsM,GAC5C,MACF,IAAK,OACHrhB,KAAKg+B,eAAe14B,EAAW3B,EAAOoR,EAAOsM,GAC7C,MACF,IAAK,MACL,IAAK,UACL,IAAK,WACHrhB,KAAKi+B,eAAe34B,EAAW3B,EAAOoR,EAAOsM,IAMrDwc,cAAcv4B,EAAW3B,EAAOoR,EAAOsM,GACrC,IAAIsY,EAAS5kB,EAAM9U,KAAKA,KAAK6kB,WAAW6U,OACpCuE,EAAY,GAAGvE,EAAO16B,QACtBk/B,EAAYxE,EAAOyE,KAAKv8B,OAAS,EAAI83B,EAAOyE,KAAKv8B,OAAS,EAE1Dw8B,EAAU1E,EAAO2E,SAEjBC,EAAUJ,EAAY,EAAI,GAAGD,KAAaC,IAAcD,EAGxDM,EAAe,CACjBl+B,MAHUN,KAAKR,KAAK,yBAIpBi/B,OAAQ,GAAGJ,KAEbtpB,EAAM2pB,SAASH,EAASxpB,EAAO,GAAIypB,GAGrCV,YAAYx4B,EAAW3B,EAAO0O,EAAS0C,EAAOsM,GAC5C,IAAI+Z,EAAOrmB,EAAMsJ,MAAMvf,IAAIuiB,GAEvBrhB,KAAK6gB,eACP7gB,KAAK2gB,aAAatO,EAASgP,GAI7B+Z,EAAK3V,OAGPsY,eAAez4B,EAAW3B,EAAOoR,EAAOsM,GACtC,IAAIsd,EAAU5pB,EAAM9U,KAAKA,KAAKymB,UAAUrF,GAGpCkd,EAAU,OADJI,EAAQC,MAMdJ,EAAe,CACjBl+B,MAJU,GAAGq+B,EAAQ19B,SAASrC,KAAKY,KAAKE,SAAS,yBAKjD++B,OAAQ,qBAJQE,EAAQ19B,MAAM49B,kBAMhC9pB,EAAM2pB,SAASH,EAASxpB,EAAO,GAAIypB,GAGrCP,eAAe34B,EAAW3B,EAAOoR,EAAOsM,GACtC,IAAI7W,EAASs0B,mBAAmBzd,GAG5Bmd,EAAe,CACjBl+B,MAFUgF,EAAU8mB,OAAO,GAAGhC,cAAgB9kB,EAAUmoB,MAAM,GAG9D+O,QAAShyB,GAEXuK,EAAM2pB,SAAS,KAAM3pB,EAAO,GAAIypB,ICnG7B,MAAMO,kCAAkClc,cAC7CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,gBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,qBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,kBAIb5B,mBAAmB3kB,EAASJ,IC7BvB,SAASwkB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,oBAAqB,CAC/C6C,KAAMrG,KAAKY,KAAKE,SACd,+DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,+DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MDiBjB+/B,CAAkB5/B,EAASJ,IE3BxB,MAAMigC,yBAAyBtiB,cACpC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,kBAAkB1K,EAAO4B,GACvB,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,OAAKA,GAELnO,EAAO4N,QAAUO,EAAMtT,GAEvBzB,KAAKk/B,gBAAgBt4B,EAAQmO,EAAO1C,GACpCrS,KAAKm/B,cAAcv4B,EAAQmO,EAAO1C,GAClCrS,KAAKo/B,mBAAmBx4B,EAAQmO,EAAO1C,GACvCrS,KAAKq/B,cAAcz4B,EAAQmO,EAAO1C,GAClCrS,KAAKs/B,eAAe14B,EAAQmO,EAAO1C,GACnCrS,KAAKu/B,cAAc34B,EAAQmO,EAAO1C,GAClCrS,KAAKw/B,eAAe54B,EAAQmO,EAAO1C,GACnCrS,KAAKy/B,cAAc74B,EAAQmO,EAAO1C,GAClCrS,KAAK0/B,eAAe94B,EAAQmO,EAAO1C,GACnCrS,KAAK2/B,gBAAgB/4B,EAAQmO,EAAO1C,GAEhCxL,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,GAjBYA,EAoBrBkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,aAC7B,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAErBrS,KAAKknB,gBAAgBnB,EAAM1T,GAE3B,IAAIsU,EAAa3mB,KAAKR,KAAK,wBACvBsnB,EAAc9mB,KAAKR,KAAK,yBAE5BQ,KAAK4/B,eAAe7Z,EAAM1T,EAAS,QAASsU,EAAY,eACxD3mB,KAAKmnB,mBACHpB,EACA1T,EACA,SACAyU,EACA,gBAGF9mB,KAAKmc,mBAAmB4J,EAAM1T,EAAS4U,GAGzCiY,gBAAgBt4B,EAAQmO,EAAO1C,GAC7B,IAAIwtB,EAAU7/B,KAAK8/B,gBAAgB/qB,EAAO1C,GACtC0tB,EAAc//B,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQm5B,EAAaF,GAGrDV,cAAcv4B,EAAQmO,EAAO1C,GAC3B,IAAI2tB,EAAQhgC,KAAKigC,cAAclrB,EAAO1C,GAClC6tB,EAAalgC,KAAKR,KAAK,wBAC3BQ,KAAKqZ,yBAAyBzS,EAAQs5B,EAAYF,GAGpDZ,mBAAmBx4B,EAAQmO,EAAO1C,GAChC,IAAI8tB,EAAkBngC,KAAKR,KAAK,6BAC5B4gC,EAAqBpgC,KAAKqgC,mBAC5BhuB,EACA0C,EAAM9U,KAAKA,KAAK6kB,WAAWsK,WAC3B,aACA+Q,EACA,aAEFngC,KAAKqZ,yBAAyBzS,EAAQu5B,EAAiBC,GAGzDf,cAAcz4B,EAAQmO,EAAO1C,GAC3B,IAAIgM,EAAQre,KAAKsgC,aAAavrB,EAAO1C,GACjCkuB,EAAavgC,KAAKR,KAAK,4BAC3BQ,KAAKqZ,yBAAyBzS,EAAQ25B,EAAYliB,GAGpDihB,eAAe14B,EAAQmO,EAAO1C,GAC5B,IAAI2X,EAAShqB,KAAKwgC,eAAezrB,EAAO1C,GACpCouB,EAAczgC,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQ65B,EAAazW,GAGrDuV,cAAc34B,EAAQmO,EAAO1C,GAC3B,IAAIua,EAAQ5sB,KAAK0gC,cAAc3rB,EAAO1C,GAClCsuB,EAAa3gC,KAAKR,KAAK,2BAC3BQ,KAAKqZ,yBAAyBzS,EAAQ+5B,EAAY/T,GAGpD4S,eAAe54B,EAAQmO,EAAO1C,GAC5B,IAAI4S,EAASjlB,KAAK4gC,eAAe7rB,EAAM9U,KAAKA,KAAKglB,OAAQ5S,GACrDub,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQgnB,EAAa3I,GAGrDwa,cAAc74B,EAAQmO,EAAO1C,GAC3B,IAAIsU,EAAa3mB,KAAKR,KAAK,wBACvBqhC,EAAQ7gC,KAAK8gC,cACfzuB,EACA0C,EACA,QACA4R,EACA,eAEF3mB,KAAKqZ,yBAAyBzS,EAAQ+f,EAAYka,GAGpDnB,eAAe94B,EAAQmO,EAAO1C,GAC5B,IAAIyU,EAAc9mB,KAAKR,KAAK,yBACxBuhC,EAAS/gC,KAAK6mB,gBAChBxU,EACA0C,EAAM9U,KAAKA,KAAKymB,UAChB,SACAI,EACA,gBAEF9mB,KAAKqZ,yBAAyBzS,EAAQkgB,EAAaia,GAGrDpB,gBAAgB/4B,EAAQmO,EAAO1C,GAC7B,IAAIgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,GACtC2uB,EAAehhC,KAAKR,KAAK,0BAC7BQ,KAAKqZ,yBAAyBzS,EAAQo6B,EAAc3kB,GAItDyjB,gBAAgB/qB,EAAO1C,GACrB,IAAI4uB,EAAelsB,EAAMsJ,MACtB5Z,QAAQkV,GAAiB,WAAXA,EAAEjY,OAChBH,KAAKoY,GAAMA,EAAE1Z,OACZihC,EAAgBlhC,KAAK4nB,gBAAgBqZ,GAGrCr6B,EAAS5G,KAAKoZ,wBAAwB,WAEtC+nB,EAAW,MAGXC,EAAY,CAAEn8B,KAFJjF,KAAKR,KAAK,sBAESiG,aADlB,CAAC07B,EAAU9uB,EAAS8uB,GAAUx7B,KAAK3F,KAAKoF,WACE3D,GAAI0/B,GAEzDE,EAAW,MAGXC,EAAY,CAAEr8B,KAFJjF,KAAKR,KAAK,sBAESiG,aADlB,CAAC47B,EAAUhvB,EAASgvB,GAAU17B,KAAK3F,KAAKoF,WACE3D,GAAI4/B,GAEzDE,EAAWvhC,KAAKqX,6BACpBkqB,EAASj4B,QAAUoB,MAAM82B,GAAGJ,EAAWE,GACvCthC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV+hC,GAGF,IAAIE,EAAa,QAGbC,EAAc,CAChBz8B,KAHcjF,KAAKR,KAAK,wBAIxBiG,aAHe,CAACg8B,EAAYpvB,EAASovB,GAAY97B,KAAK3F,KAAKoF,WAI3D3D,GAAIggC,GAGFE,EAAc,SAGdC,EAAe,CACjB38B,KAHejF,KAAKR,KAAK,yBAIzBiG,aAHgB,CAACk8B,EAAatvB,EAASsvB,GAAah8B,KAAK3F,KAAKoF,WAI9D3D,GAAIkgC,GAGF5Z,EAAgBmZ,EAAc3/B,KAAKymB,GACrChoB,KAAK8rB,WAAWzZ,EAAS0C,EAzCX,SAyC6BiT,KAEzCE,EAAaloB,KAAKqX,6BAEtB0Q,EAAcpK,QAAQikB,GACtB7Z,EAAcpK,QAAQ+jB,GAEtBxZ,EAAW5e,QAAUye,EACrB,IAAIe,EAAe9oB,KAAKR,KAAK,yBAI7B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAEpDthB,EAITq5B,cAAclrB,EAAO1C,GACnB,IAAIwvB,EAAY9sB,EAAMsJ,MACnB5Z,QAAQkV,GAAiB,SAAXA,EAAEjY,OAChBH,KAAKoY,GAAMA,EAAE1Z,OACZ6hC,EAAc9hC,KAAK4nB,gBAAgBia,GAGnCE,EAAcD,EAAYvgC,KAAKymB,IACjC,IAAIxd,EAASxK,KAAK8rB,WAAWzZ,EAAS0C,EAHxB,OAG0CiT,GAExD,OADAxd,EAAO4Q,SAAW4M,EAAE/nB,KAAKke,OAAS,SAAW,GACtC3T,KAELw3B,EAAUhiC,KAAKqX,6BACnB2qB,EAAQ14B,QAAUy4B,EAClB,IAAIE,EAAYjiC,KAAKR,KAAK,wBAEtBoH,EAAS5G,KAAKoZ,wBAAwB,SAG1C,OAFApZ,KAAKwX,gCAAgC5Q,EAAQq7B,EAAWD,GAEjDp7B,EAMT05B,aAAavrB,EAAO1C,GAClB,IAAIkV,EAAaxS,EAAMsJ,MACpB5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKynB,SAAW,IACrCnmB,KAAKoY,GAAMA,EAAE1Z,OACZ0nB,EAAc3nB,KAAK4nB,gBAAgBL,GACnCjiB,EAAY,OAEZgiB,EAAWK,EAAYljB,QACxBkV,GAAiB,eAAXA,EAAEjY,MAAyBiY,EAAE1Z,KAAKqnB,WAIvCS,EADUT,EAAS7iB,QAAQkV,GAAgB,UAAVA,EAAEjY,OACXH,KAAKymB,GAC/BhoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW0iB,KAEzCE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYb,EAAS7iB,QAAQkV,GAAgB,aAAVA,EAAEjY,OACRH,KAAKiE,GACpCxF,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWE,KAEzC4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAGIE,EAHQf,EAAS7iB,QAClBkV,GAAgB,UAAVA,EAAEjY,MAA8B,aAAViY,EAAEjY,OAERH,KAAK+mB,GAC5BtoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWgjB,KAEzCC,EAAWvoB,KAAKqX,6BACpBkR,EAASjf,QAAU+e,EAEnB,IAAIG,EAAiBb,EAAYljB,QAAQkV,GAAgB,cAAVA,EAAEjY,OAQ7C+mB,EANmBzoB,KAAK0oB,qBAAqBF,GACf/jB,QAC/BjD,GACEA,EAAEvB,KAAKuwB,MAAMvxB,OAASuC,EAAEvB,KAAKuwB,MAAMvxB,OAAS,GAC5CuC,EAAEvB,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKuwB,MAAMrkB,KAAO,IAEV5K,KAAKC,GACtCxB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW9D,KAEzCmnB,EAAiB3oB,KAAKqX,6BAC1BsR,EAAerf,QAAUmf,EAEzB,IAKIyZ,EALe1Z,EAAe/jB,QAC/BjD,KACGA,EAAEvB,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKuwB,MAAMvxB,QACV,QAAzBuC,EAAEvB,KAAKkiC,iBAE4B5gC,KAAKoY,GAC1C3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCyoB,EAAmBpiC,KAAKqX,6BAC5B+qB,EAAiB94B,QAAU44B,EAE3B,IACItZ,EADQrB,EAAW9iB,QAAQiO,GAAiB,SAAXA,EAAEhR,OACdH,KAAKoY,GAC5B3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCkP,EAAW7oB,KAAKqX,6BACpBwR,EAASvf,QAAUsf,EAEnB,IAAIE,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAC3BwpB,EAAahpB,KAAKR,KAAK,wBACvBypB,EAAmBjpB,KAAKR,KAAK,8BAC7B6iC,EAAqBriC,KAAKR,KAAK,gCAC/B0pB,EAAalpB,KAAKR,KAAK,wBAEvBoH,EAAS5G,KAAKoZ,wBAAwB,aAiB1C,OAfApZ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAC7DpoB,KAAKwX,gCAAgC5Q,EAAQoiB,EAAYT,GACzDvoB,KAAKwX,gCACH5Q,EACAqiB,EACAN,GAEF3oB,KAAKwX,gCACH5Q,EACAy7B,EACAD,GAEFpiC,KAAKwX,gCAAgC5Q,EAAQsiB,EAAYL,GAElDjiB,EAMT45B,eAAezrB,EAAO1C,GACpB,IAAIsX,EAAc5U,EAAMsJ,MACrB5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OAChBH,KAAKoY,GAAMA,EAAE1Z,OAKhB,OAJA0pB,EAAc3pB,KAAK0oB,qBAAqBiB,GAE3B3pB,KAAK+pB,kBAAkBhV,EAAO1C,EAASsX,GAMtDI,kBAAkBhV,EAAO1C,EAAS2X,GAChC,MAAM1kB,EAAY,QAClB,IAAIsB,EAAS5G,KAAKqX,2BAA2B,UACzCirB,EACFtiC,KAAKqX,2BAA2B,iBAClCirB,EAAyBr9B,KAAOjF,KAAKR,KAAK,gCA8E1C,MA5EmB,IAAI,IAAI4yB,IAAIpI,EAAOzoB,KAAKoY,GAAMA,EAAE1Z,KAAKsiC,cAAan3B,OAE1D5E,SAASg8B,IAClB,MAAMC,EACJ1tB,EAAM9U,KAAKA,KAAK6kB,WAAWkF,OAAO0Y,WAAWF,GAAIG,YACnD,IAAIC,EAAgBJ,EAAGpW,OAAO,GAAGhC,cAAgBoY,EAAG/U,MAAM,GAE1D6U,EAAyBh5B,QAAQ5C,KAC/B1G,KAAK6iC,2BAA2BxwB,EAASuwB,IAG3C,MASM5G,EATWhS,EACdvlB,QAAQgC,GAAMA,EAAExG,KAAKsiC,YAAcC,IACnCp3B,MAAK,CAACC,EAAGC,IACRD,EAAEpG,KAAKmlB,cAAcC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAClE4M,YAAa,WAGhBlf,MAAK,CAACC,EAAGC,IAAMD,EAAEpL,KAAKkqB,MAAQ7e,EAAErL,KAAKkqB,QAET/jB,QAAO,CAAC08B,EAAKr8B,KACrCq8B,EAAIC,eAAet8B,EAAExG,KAAKkqB,SAAQ2Y,EAAIr8B,EAAExG,KAAKkqB,OAAS,IAE3D2Y,EAAIr8B,EAAExG,KAAKkqB,OAAOzjB,KAAKD,GAEhBq8B,IACN,IAEH,IAAIE,GAAmB,EACvB3sB,OAAO7R,QAAQw3B,GAAex1B,SAAS2jB,IACrC,IAAIhhB,EAAWnJ,KAAKqX,6BAEhB/P,EACF6iB,EAAM,GAAK,EACP,GAAGnqB,KAAKR,KAAK,2BAA2B2qB,EAAM,KAC9CnqB,KAAKR,KAAK,2BACZyjC,EACFluB,EAAM9U,KAAKA,KAAK6kB,YAAYkF,QAAQ0Y,WAAWF,GAAY,OACzD,QAAUrY,EAAM,IAEpB,GAAI8Y,GAAaA,EAAU92B,IAAM,EAAG,CAClC,IAAI+2B,EAAe,GAAGD,EAAUhkC,SAASgkC,EAAU92B,MACnDhD,EAASmS,MAAQ4nB,EAGfF,IACF17B,EAAe,GAAGs7B,OAAmBt7B,IACrC07B,GAAmB,GAGrB7Y,EAAM,GAAG3jB,SAASqlB,IAChB,IAAK7rB,KAAKmjC,iBAAiBpuB,EAAO8W,GAAQ,OAE1C,IAAI5mB,EAAO4mB,EAAM5mB,KACjBA,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhsB,EAAKoqB,EAAMnmB,IACXD,EAAe,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACtD,IAAIoF,EAAS,CACXvF,KAAMA,EACNxD,GAAIA,EACJgE,aAAcA,EACdiW,MAAO,IAETlR,EAAO5E,IAAM5F,KAAKiwB,UAAUpE,GAC5B7rB,KAAK+rB,cAAcF,EAAO4W,EAAej4B,GAEzCrB,EAASG,QAAQ5C,KAAK8D,MAGxBxK,KAAKwX,gCAAgC5Q,EAAQU,EAAc6B,SAI3Dm5B,EAAyBh5B,SAASzH,OAAS,GAC7C+E,EAAOgS,cAAc+E,QAAQ2kB,GAExB17B,EAITmlB,cAAcF,EAAO4W,EAAerG,GAClC,IAAI56B,EAAIqqB,EAAM5rB,KAAKisB,WAEnB,IAAKuW,GAAiB5W,EAAM5rB,KAAKirB,YAAa,CAC5C,IAAID,EAAOY,EAAM5rB,KAAKirB,YAClBD,EAAKmY,YACPhH,EAAY9gB,MAAQ,GAAG2P,EAAKoY,kBAAkBpY,EAAKmY,aAGnD5hC,GAAG8hC,SACLlH,EAAY1gB,OAAS1b,KAAKR,KAAK,4BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG6qB,UACL+P,EAAY1gB,OAAS1b,KAAKR,KAAK,6BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG8qB,WACL8P,EAAY1gB,OAAS1b,KAAKR,KAAK,8BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG+hC,QACLnH,EAAYzgB,MAAQ3b,KAAKR,KAAK,2BAC3B4sB,OAAO,GACPhC,eAIP+Y,iBAAiBpuB,EAAO8W,GACtB,MAAM0W,EAAY1W,EAAM5rB,KAAKsiC,UACvBE,EACJ1tB,EAAM9U,KAAKA,KAAK6kB,WAAWkF,OAAO0Y,WAAWH,GAAWI,YAE1D,MAAwB,cAApB5tB,EAAM9U,KAAKyB,SAEXmqB,EAAM5rB,KAAKujC,YAEXf,IAAiB5W,EAAM5rB,KAAKirB,YAAYuY,sBAGE,IAA1C5X,EAAM5rB,KAAKirB,YAAYmY,iBAK7BR,2BAA2BxwB,EAASqxB,GAClC,IAAIC,EAAqB,gBAKzB,MAAO,CAAE1+B,KAJEy+B,EAIUj+B,aAHF,CAACk+B,EAAoBtxB,EAASqxB,EAAO7E,eAAel5B,KACrE3F,KAAKoF,WAE0C3D,GAAIkiC,GAMvDjD,cAAc3rB,EAAO1C,GACnB,IAAIoa,EAAa1X,EAAMsJ,MACpB5Z,QAAQkV,GAAgB,QAAVA,EAAEjY,OAChBH,KAAKoY,GAAMA,EAAE1Z,OACZysB,EAAc1sB,KAAK4nB,gBAAgB6E,GAGvC,OAFYzsB,KAAK2sB,iBAAiBta,EAAS0C,EAAO2X,GAMpDC,iBAAiBta,EAAS0C,EAAO6X,GAC/B,IAAIzO,EAASne,KAAKqX,6BACdwV,EAAU7sB,KAAKqX,6BACfwX,EAAW7uB,KAAKqX,6BAENuV,EAAMxmB,OAClB,SAAU2kB,EAASpV,GACjB,MAAMqX,EAAiBrX,EAAE1V,KAAKypB,WAAWhoB,KAGzC,IAAIurB,EAAOjtB,KAAK8rB,WAAWzZ,EAAS0C,EAFlB,OAEoCY,GAEjDA,EAAEvS,SAAS0sB,SAMb9C,GACkB,KAAnBA,GACmB,YAAnBA,EAMF7O,EAAO7U,QAAQ5C,KAAKumB,GAJlBJ,EAAQvjB,QAAQ5C,KAAKumB,GATrB4B,EAASvlB,QAAQ5C,KAAKumB,IAgBxBxpB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,SAEtC8T,EAAcltB,KAAKR,KAAK,yBAG5B,GAFAQ,KAAKwX,gCAAgC5Q,EAAQsmB,EAAa/O,IAErDtX,IAAa,sBAAuB,CACvC,IAAIwmB,EAAertB,KAAKR,KAAK,0BAC7BQ,KAAKwX,gCAAgC5Q,EAAQymB,EAAcR,GAG7D,IAAKhmB,IAAa,uBAAwB,CACxC,IAAI+8B,EAAgB5jC,KAAKR,KAAK,+BAC9BQ,KAAKwX,gCAAgC5Q,EAAQg9B,EAAe/U,GAG9D,OAAOjoB,EAITg6B,eAAe3b,EAAQ5S,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpBg9B,EAAY,IAAIzR,IAEpB/b,OAAO7R,QAAQygB,GAAQze,SAASC,IAC1BA,EAAE,GAAGmkB,WAAW,WAAUnkB,EAAE,GAAGq9B,eAAgB,GAEnDD,EAAUxR,IAAI5rB,GAEVA,EAAE,GAAGs9B,WACP1tB,OAAO7R,QAAQiC,EAAE,GAAGs9B,WAAWv9B,SAASw9B,IACtCA,EAAG,GAAGF,eAAgB,EACtBE,EAAG,GAAGC,UAAYx9B,EAAE,GACpBo9B,EAAUxR,IAAI2R,SAKpB,IAAIzW,EAAgB,IAAIsW,GACrBtiC,KAAKiE,IACJ,IAAI/D,EAAK+D,EAAE,GACPvF,EAAOuF,EAAE,GAGb,GAAIvF,EAAKikC,KAAOjkC,EAAKs4B,KACnB,OAAO,KAGT,IAAItzB,EAAOqoB,EAAO7rB,EAAKwtB,OAAOkV,IAAIlf,OAAOxjB,IAErCxB,EAAK6jC,eAAkB7+B,IACzBA,EAAOhF,EAAKgF,MAAQ,IACpBxD,EAAK,GAAGxB,EAAKgkC,uBAAuBxiC,KAGtCwD,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WAEtD,MAAO,CAAEH,KAAMA,EAAMxD,GAAIA,EAAIgE,aAAcA,EAAc6V,MAD7Ctb,KAAKokC,kBAAkBnkC,EAAKs4B,UAGzC9zB,QAAQgC,KAAQA,IAEfknB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAG5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAEnD/mB,EAGTw9B,kBAAkB7L,GAChB,OAAIA,GAAQ,EAAU,GAEf,IAAIA,IAGbrR,gBAAgBnB,EAAM1T,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQyqB,OAAOkV,IAAIlf,QAAQ1jB,KAAKiE,IACzD,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CkoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAC1D3tB,KAAKqZ,yBAAyB0M,EAAM6H,EAAahnB,GAAQ,GAI3DigB,gBAAgBxU,EAASqU,EAAWrf,EAAYC,EAAchC,GAC5D,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAEtCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAOkV,IAAIzd,WAAWnlB,KAAKiE,IACtD,GAA8B,IAA1BkhB,EAAUlhB,EAAE,IAAIvG,MAAa,OAEjC,IAAIgG,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IACIzsB,EADAyE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAKxD,OAH6BpE,EAAV,WAAfqG,EAAgC,GACxBrH,KAAK0tB,oBAAoBhH,EAAUlhB,EAAE,IAAIqoB,YAE9C,CAAE5oB,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAAMA,MAE/D8sB,EAAkB9tB,KAAKqX,6BAK3B,OAJAyW,EAAgBxkB,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAElDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcwmB,GAEpDlnB,EAITk6B,cAAczuB,EAAS0C,EAAO1N,EAAYC,EAAchC,GACtD,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAEtCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAOkV,IAAIE,cAAc9iC,KAAKiE,IACzD,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3C6+B,EAAgBtkC,KAAKqX,6BACzBitB,EAAch7B,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAEhDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcg9B,GAE3D,IAAIC,EAAcvkC,KAAKqX,6BACnBmtB,EAAgB,WAKhBC,EAAiB,CACnB,CAAEx/B,KALejF,KAAKR,KAAK,2BAKLiG,aAJJ,CAAC++B,EAAenyB,EAASmyB,GAAe7+B,KAC1D3F,KAAKoF,WAG8C3D,GAAI+iC,IASzD,OAPAD,EAAYj7B,QAAUm7B,EACtBzkC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACV+kC,GAGK39B,EAGTy5B,mBAAmBhuB,EAAS+c,EAAY/nB,EAAYC,EAAchC,GAChE,IAAK8pB,EAAY,OAEjB,IAAIxoB,EAAS5G,KAAKoZ,wBAAwB/R,GACtC+P,EAAcpX,KAAKqX,6BAmCvB,OAlCgBhB,OAAO7R,QAAQ4qB,GAEvB5oB,SAAShF,IACf,MAAMoC,EAAMpC,EAAE,GACRvC,EAAQuC,EAAE,GAEhB,IACIoE,EADAX,EAAOgqB,OAAOkV,IAAI/U,WAAWxrB,GAE7BiD,IAAa,eAAcjB,EAAMqpB,OAAOkV,IAAIO,kBAAkB9gC,IAElE,IAAI6B,EAAe,CAACH,EAAW+M,EAASzO,GAAK+B,KAAK3F,KAAKoF,WAEnDoF,EAAS,CACXvF,KAAMA,EACNxD,GAAImC,EACJ6B,aAAcA,EACdG,IAAKA,GAEP4E,EAAO4Q,SAAWnc,EAAQ,SAAW,GAErCmY,EAAY9N,QAAQ5C,KAAK8D,MAG3B4M,EAAY9N,QAAU8N,EAAY9N,QAAQ8B,MAAK,CAACC,EAAGC,IAC7CD,EAAEpG,KAAOqG,EAAErG,MACL,EAENoG,EAAEpG,KAAOqG,EAAErG,KACN,EAEF,IAETjF,KAAKwX,gCAAgC5Q,EAAQU,EAAc8P,GAEpDxQ,EAGTugB,mBAAmBpB,EAAM1T,EAAShL,EAAYC,EAAchC,GAC1D,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GAEnCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAOkV,IAAIzd,WAAWnlB,KAAKiE,IACtD,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CqoB,EAAkB9tB,KAAKqX,6BAC3ByW,EAAgBxkB,QAAUA,EAE1BtJ,KAAKwX,gCAAgC6C,EAAK/S,EAAcwmB,GACxD9tB,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAGzDulB,eAAe7Z,EAAM1T,EAAShL,EAAYC,EAAchC,GACtD,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GACnCi9B,EAAgBtkC,KAAKqX,6BAErBiW,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAOkV,IAAIE,cAAc9iC,KAAKiE,IACzD,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAG/C6+B,EAAch7B,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAEhDrL,KAAKwX,gCAAgC6C,EAAK/S,EAAcg9B,GACxDtkC,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAIzD2T,yBAAyB1oB,EAAW6D,EAAUkJ,GAC5C,MAAMkd,EAAS3wB,KAAK2wB,OACpB,IAAIC,EAAWC,EACXF,IACFC,EAAYD,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAYA,IACxDod,EAAoBD,GAAWG,YAGjC,IAAIA,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCAQ9BiwB,IAAmBG,EAAiBtU,MAAQmU,GAChDG,EAAiBxU,SAAWqU,EAAoB,SAAW,GAE3DE,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJE,8BAA8BvqB,EAAW+M,EAASlJ,GAChD,MAAMomB,EAAS3wB,KAAK2wB,OAEpB,IAaIO,EAbAH,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCASlC,GAAI+vB,EAAQ,CAKVO,EAJetd,OAAOjG,OAAO2H,WAAW3S,KAAKmR,GAAMA,EAAEjR,KACtBF,KAAKE,GAClC8tB,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAY5Q,MAEnBib,OAAOlb,KAAQA,GAAGmuB,aAG/CC,EAAiBxU,SAAW0U,EAAW,SAAW,GAElDH,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJvT,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAEhBtF,KAAKguB,yBAAyB1oB,EAAWsB,EAAQyL,GAEjD,IAAI0b,EAAQ/tB,KAAKqX,6BAEjB,GAAwB,cAApBtC,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIwsB,EAAgB,CAAC5oB,EAAW+M,EAAS,QAAQ1M,KAAK3F,KAAKoF,WAC3D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,yBAUpB,OANAQ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAGKnnB,EAITuV,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WACxC9T,EAAY,UAEhBtF,KAAK6vB,8BAA8BvqB,EAAW+M,EAASlJ,GAEvD,IAAI4kB,EAAQ/tB,KAAKqX,6BAEjB,GAAI4P,EAAOvK,OAAOrR,GAAsB,cAAhBA,EAAEpL,KAAKyB,OAAuB,CACpD,IAAIwsB,EAAgB,CAAC5oB,EAAW+M,EAAS,QAAQ1M,KAAK3F,KAAKoF,WAC3D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,yBAIpBQ,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV2J,GAKJ2iB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,WACxDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,MAAMypB,YAAYhoB,MAElDkF,EAAS,CACX3B,KAFSjF,KAAK2kC,aAAah+B,GAG3BlF,GAAIkF,EAAKjB,IACTD,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GAiBR,OAbE2F,EAAK1G,KAAKkwB,WACTxpB,EAAK1G,KAAKkwB,SAASC,SACpBzpB,EAAK1G,KAAKkwB,SAASlxB,QAEnB2H,EAAO3B,MAAQ,KAAKjF,KAAKR,KAAK,+BAGhCoH,EAAO0U,MAAQtb,KAAKqwB,iBAAiB1pB,GAErCC,EAAO8U,MAAQ1b,KAAKswB,aAAa3pB,GAEjCC,EAAO+U,MAAQ3b,KAAKuwB,gBAAgB5pB,EAAMoO,GAEnCnO,EAGT+9B,aAAah+B,GACX,IAAI1B,EAOJ,OAL4CA,EAAxC0B,EAAK1G,KAAK2kC,YAAchmC,KAAKiG,KAAKC,KAAa6B,EAAK1G,KAAK4kC,eACjDl+B,EAAK1G,KAAK6kC,cAAc7/B,KAE/BA,IAAMA,EAAO0B,EAAK1B,MAEhBA,EAGTgrB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAI1DypB,iBAAiB1pB,GACf,IAAIC,EAAS,GAKb,OAJID,EAAK1G,KAAKynB,SAAW,IACvB9gB,EAASD,EAAK1G,KAAKynB,UAGd9gB,EAIT0pB,aAAa3pB,GACX,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKuwB,KACrB,OAAKA,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,EAcpB2pB,gBAAgB5pB,EAAMoO,GACpB,IAAInO,EAAS,GAET6pB,EAAc9pB,EAAK1G,KAAKywB,SAAShvB,KACrC,GAAI+uB,GAA+B,KAAhBA,EAAoB,CACrC,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAC9B+sB,EAAWD,EAAU1R,OAAO,EAAG0R,EAAUE,YAAY,MACzD,GAAoB,cAAhBJ,EAA6B,CAC/B,IAAI5sB,EAASitB,YAAY/b,EAAO,aAAa4b,KAE7C,GAAI9sB,EAAQ,CACV,IAAIkhC,EAASjU,YAAY/b,EAAO,aAAa6b,KAC7ChqB,EAAS/C,EACHkhC,EAAO54B,MAAKvF,GAAU,IAAIm+B,EAAO54B,QAI3C,GAAoB,YAAhBskB,EAA2B,CAC7B,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAE9B2sB,EADSzb,EAAMsJ,MAAMvf,IAAI6xB,IACV1wB,KAAKA,KAAKuwB,KACzBA,GAAMvxB,QACR2H,EAAS4pB,EAAKvxB,MACVuxB,EAAKrkB,MAAKvF,GAAU,IAAI4pB,EAAKrkB,QAIrC,GAAsB,cAAhBskB,GAA+C,YAAhBA,EAA4B,CAC/D,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAE9B6jB,EADS3S,EAAMsJ,MAAMvf,IAAI6xB,IACN1wB,KAAKA,KAAKynB,SAC7BA,IACF9gB,EAAS8gB,IAKf,OAAO9gB,EAGT8hB,qBAAqBrK,GACnB,OAAIxX,IAAa,kBAA0BwX,EAEpCA,EAAM5Z,QAAQkV,IACnB,IAAI6W,EAAO7W,EAAE1Z,KAAKuwB,KAElB,OAAKA,KAGDA,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,UAO9B2oB,gBAAgBvJ,GACd,IAAIzX,EAASyP,OAAOiE,OAAO+D,GAI3B,OAFAzX,EAAOwE,MAAK,CAACC,EAAGC,IAAMD,EAAED,KAAOE,EAAEF,OAE1BxE,EAIT8mB,oBAAoBvD,GAOlB,MANc,CACZ,EAAG,GACH,GAAK,gCACL,EAAG,+BACH,EAAG,uCAEQA,GAGf+F,eAAe1lB,GAab,MAZY,CAEVw6B,UAAW,8BACX5T,SAAU,8BACV6T,KAAM,8BACNC,MAAO,8BACPC,KAAM,gCACNC,MAAO,yCACP9T,OAAQ,wCACRC,KAAM,uCACNF,QAAS,+BAEA7mB,ICjjCR,MAAM66B,2BAA2BjmB,YACtCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEP,UAAZ9O,EACFG,OAAOjG,OAAO2H,WAAW1N,SAASkM,IAChC,IAAIshB,EAAUthB,EAAEzS,KAAKyF,IACrB1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,YAG1CrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIxD4S,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,OAAQ/b,GACN,IAAK,UACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,gBACHrhB,KAAKslC,uBAAuB3hC,EAAO0O,EAASgP,GAC5C,MACF,IAAK,MACHrhB,KAAKulC,aAAa5hC,EAAO0O,EAASgP,GAClC,MACF,IAAK,QACHrhB,KAAKwlC,qBAAqB7hC,EAAO0O,EAASgP,GAC1C,MACF,IAAK,SACHrhB,KAAKylC,sBAAsB9hC,EAAO0O,EAASgP,GAC3C,MACF,IAAK,MACHrhB,KAAK0lC,QAAQ/hC,EAAO0O,EAASgP,GAC7B,MACF,IAAK,QACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,cACHrhB,KAAKo0B,qBAAqBzwB,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACHrhB,KAAKq0B,sBAAsB1wB,EAAO0O,EAASgP,GAC3C,MACF,IAAK,aACGrhB,KAAK2lC,WAAWhiC,EAAO0O,EAASgP,GACtC,MACF,IAAK,kBACGrhB,KAAK4lC,gBAAgBjiC,EAAO0O,EAASgP,GAC3C,MACF,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,SACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,GACxC,MACF,IAAK,WACHrhB,KAAK6lC,aAAaliC,EAAO0O,EAASgP,GAClC,MACF,IAAK,gBACGrhB,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,IAOrDkkB,aAAa5hC,EAAO0O,EAASoiB,GACb10B,MAAMue,SAASjM,GACvByzB,QAAQniC,GAGhB6hC,qBAAqB7hC,EAAO0O,EAASoiB,GACrB10B,MAAMue,SAASjM,GACvB4jB,WAAW,CAAEtyB,MAAOA,EAAOoiC,OAAO,IAG1CN,sBAAsB9hC,EAAO0O,EAASoiB,GACtB10B,MAAMue,SAASjM,GACvB4jB,WAAW,CAAEtyB,MAAOA,EAAOoiC,OAAO,IAG1CL,QAAQ/hC,EAAO0O,EAASoiB,GACR10B,MAAMue,SAASjM,GACvBqzB,QAAQ,CAAE/hC,MAAOA,IAGzB2hC,uBAAuB3hC,EAAO0O,EAASoiB,GACvB10B,MAAMue,SAASjM,GACvB2zB,kBAAkBvR,GAG1BP,iBAAiBvwB,EAAO0O,EAASoiB,GACjB10B,MAAMue,SAASjM,GACvBqiB,YAAYD,EAAS,CAAE9wB,MAAOA,IAGtC0wB,sBAAsB1wB,EAAO0O,EAASoiB,GACtB10B,MAAMue,SAASjM,GACvBsiB,gBAAgBF,EAAS,CAAE9wB,MAAOA,IAG1CywB,qBAAqBzwB,EAAO0O,EAASoiB,GACrB10B,MAAMue,SAASjM,GACvB4zB,gBAAgBxR,EAAS,CAAE9wB,MAAOA,IAG1CwwB,eAAexwB,EAAO0O,EAASoiB,GACf10B,MAAMue,SAASjM,GACvBwiB,UAAUJ,EAAS,CAAE9wB,MAAOA,IAGpC6hB,cAAc7hB,EAAO0O,EAASkN,GAC5B,MAAMxK,EAAQhV,MAAMue,SAASjM,GAChBtS,MAAMuf,QAAQvK,EAAOwK,GAE7B2mB,IAAI,CAAEh2B,GAAIvM,EAAOwiC,YAAY,IAGpCN,aAAaliC,EAAO0O,EAASkN,GACbxf,MAAMue,SAASjM,GACvBwzB,eAGRF,iBAAiBhiC,EAAO0O,EAAS+zB,GAC/B,IAAIrxB,EAAQhV,MAAMue,SAASjM,GACvBg0B,EAAOtmC,MAAMuf,QAAQvK,EAAOqxB,GAE5Bh5B,EAAS,CAAEnN,KAAM,CAAEke,QAASkoB,EAAKpmC,KAAKA,KAAKke,eAEzCkoB,EAAKj5B,OAAOA,GAGpBw4B,sBAAsBjiC,EAAO0O,EAASi0B,GACpC,IAAIvxB,EAAQhV,MAAMue,SAASjM,GAE3B,MAAMpT,EAAQ8V,EAAM9U,KAAKA,KAAK6kB,WAAWsK,WAAWkX,GAEpD,IAAIl5B,EAAS,CAAEnN,KAAM,CAAE6kB,WAAY,CAAEsK,WAAY,MACjDhiB,EAAOnN,KAAK6kB,WAAWsK,WAAWkX,IAAiBrnC,QAE7C8V,EAAM3H,OAAOA,GAGrBknB,0BAA0B3wB,EAAO0O,EAASgP,GACxC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvBE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,OACHtM,EAAM6L,MAAM2lB,QAAQ5iC,GACpB,MACF,IAAK,eACH4O,EAAMgP,eACNrf,MAAMyF,QAAQ,6BACd,MACF,IAAK,mBACH4K,EAAM+O,mBACN,MACF,IAAK,mBACGthB,KAAKo1B,uBAAuB/iB,IAKxC+iB,6BAA6B/iB,GAC3B,IAAI0C,EAAQhV,MAAMue,SAASjM,SAErB0C,EAAMsgB,eAAe,CAAEC,kBAAkB,IAE/CpzB,MAAMyF,QAAQ,8BCrLX,MAAM6+B,yBAAyB3jB,cACpCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,iBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,YAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,mBAIb5B,mBAAmB3kB,EAASJ,IC7BvB,SAASwkB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,qBAAsB,CAChD6C,KAAMrG,KAAKY,KAAKE,SACd,yDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,yDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,mBAAoB,CAC9C6C,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,iBAAkB,CAC5C6C,KAAMrG,KAAKY,KAAKE,SACd,qDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,qDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,sBAAuB,CACjD6C,KAAMrG,KAAKY,KAAKE,SAAS,iDACzB+jB,KAAM7kB,KAAKY,KAAKE,SAAS,iDACzBgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MD3BjB+/B,CAAkB5/B,EAASJ,IE3BxB,MAAMynC,0BAA0B9pB,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,kBAAkB1K,EAAO4B,GACvB,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,OAAKA,GAELnO,EAAO4N,QAAUO,EAAMrP,IAEvB1F,KAAKk/B,gBAAgBt4B,EAAQmO,EAAO1C,GACpCrS,KAAKm/B,cAAcv4B,EAAQmO,EAAO1C,GAClCrS,KAAKq/B,cAAcz4B,EAAQmO,EAAO1C,GAClCrS,KAAKs/B,eAAe14B,EAAQmO,EAAO1C,GACnCrS,KAAKu/B,cAAc34B,EAAQmO,EAAO1C,GAClCrS,KAAKw/B,eAAe54B,EAAQmO,EAAO1C,GACnCrS,KAAKy/B,cAAc74B,EAAQmO,EAAO1C,GAClCrS,KAAK0/B,eAAe94B,EAAQmO,EAAO1C,GACnCrS,KAAK2/B,gBAAgB/4B,EAAQmO,EAAO1C,GAEhCxL,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,GAhBYA,EAmBrBkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,aAC7B,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAErBrS,KAAKknB,gBAAgBnB,EAAM1T,GAE3B,IAAIsU,EAAa3mB,KAAKR,KAAK,wBACvBsnB,EAAc9mB,KAAKR,KAAK,yBAE5BQ,KAAK4/B,eAAe7Z,EAAM1T,EAAS,QAASsU,EAAY,eACxD3mB,KAAKmnB,mBACHpB,EACA1T,EACA,SACAyU,EACA,gBAGF9mB,KAAKmc,mBAAmB4J,EAAM1T,EAAS4U,GAGzCiY,gBAAgBt4B,EAAQmO,EAAO1C,GAC7B,IAAIwtB,EAAU7/B,KAAK8/B,gBAAgB/qB,EAAO1C,GACtC0tB,EAAc//B,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQm5B,EAAaF,GAGrDV,cAAcv4B,EAAQmO,EAAO1C,GAC3B,IAAI2tB,EAAQhgC,KAAKigC,cAAclrB,EAAO1C,GAClC6tB,EAAalgC,KAAKR,KAAK,wBAC3BQ,KAAKqZ,yBAAyBzS,EAAQs5B,EAAYF,GAGpDX,cAAcz4B,EAAQmO,EAAO1C,GAC3B,IAAIgM,EAAQre,KAAKsgC,aAAavrB,EAAO1C,GACjCkuB,EAAavgC,KAAKR,KAAK,4BAC3BQ,KAAKqZ,yBAAyBzS,EAAQ25B,EAAYliB,GAGpDihB,eAAe14B,EAAQmO,EAAO1C,GAC5B,IAAI2X,EAAShqB,KAAKwgC,eAAezrB,EAAO1C,GACpCouB,EAAczgC,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQ65B,EAAazW,GAGrDuV,cAAc34B,EAAQmO,EAAO1C,GAC3B,IAAIua,EAAQ5sB,KAAK0gC,cAAc3rB,EAAO1C,GAClCsuB,EAAa3gC,KAAKR,KAAK,2BAC3BQ,KAAKqZ,yBAAyBzS,EAAQ+5B,EAAY/T,GAGpD4S,eAAe54B,EAAQmO,EAAO1C,GAC5B,IAAI4S,EAASjlB,KAAK4gC,eAAe7rB,EAAM9U,KAAKA,KAAKglB,OAAQ5S,GACrDub,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKqZ,yBAAyBzS,EAAQgnB,EAAa3I,GAGrDwa,cAAc74B,EAAQmO,EAAO1C,GAC3B,IAAIsU,EAAa3mB,KAAKR,KAAK,wBACvBqhC,EAAQ7gC,KAAK8gC,cACfzuB,EACA0C,EACA,QACA4R,EACA,eAEF3mB,KAAKqZ,yBAAyBzS,EAAQ+f,EAAYka,GAGpDnB,eAAe94B,EAAQmO,EAAO1C,GAC5B,IAAIyU,EAAc9mB,KAAKR,KAAK,yBACxBuhC,EAAS/gC,KAAK6mB,gBAChBxU,EACA0C,EAAM9U,KAAKA,KAAKymB,UAChB,SACAI,EACA,gBAEF9mB,KAAKqZ,yBAAyBzS,EAAQkgB,EAAaia,GAGrDpB,gBAAgB/4B,EAAQmO,EAAO1C,GAC7B,IAAIgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,GACtC2uB,EAAehhC,KAAKR,KAAK,0BAC7BQ,KAAKqZ,yBAAyBzS,EAAQo6B,EAAc3kB,GAItDyjB,gBAAgB/qB,EAAO1C,GACrB,IAAI4uB,EAAelsB,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,WAAXA,EAAEjY,OAChDw/B,EAAgBlhC,KAAK4nB,gBAAgBqZ,GACrC37B,EAAY,SAEZsB,EAAS5G,KAAKoZ,wBAAwB,WAEtCstB,EAAS1mC,KAAKqX,6BACd8pB,EAAW,MAGXC,EAAY,CAAC,CAAEn8B,KAFRjF,KAAKR,KAAK,+BAEUiG,aADZ,CAAC07B,EAAU9uB,EAAS8uB,GAAUx7B,KAAK3F,KAAKoF,WACA3D,GAAI0/B,IAC/DuF,EAAOp9B,QAAU83B,EACjBphC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+BACVknC,GAGF,IAAI3e,EAAgBmZ,EAAc3/B,KAAKymB,GACrChoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW0iB,KAEzCE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EACrB,IAAIe,EAAe9oB,KAAKR,KAAK,yBAE7BQ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAE3D,IAAIye,EAAmB5xB,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,gBAAXA,EAAEjY,OAEpDklC,EADoB5mC,KAAK4nB,gBAAgB+e,GACHplC,KAAKymB,GAC7ChoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW0iB,KAEzC6e,EAAY7mC,KAAKqX,6BACrBwvB,EAAUv9B,QAAUs9B,EACpB,IAAI7G,EAAc//B,KAAKR,KAAK,6BAI5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQm5B,EAAa8G,GAEnDjgC,EAITq5B,cAAclrB,EAAO1C,GACnB,IAAIwvB,EAAY9sB,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,SAAXA,EAAEjY,OAC7CogC,EAAc9hC,KAAK4nB,gBAAgBia,GAGnCE,EAAcD,EAAYvgC,KAAKymB,IACjC,IAAIxd,EAASxK,KAAK8rB,WAAWzZ,EAAS0C,EAHxB,OAG0CiT,GAExD,OADAxd,EAAO4Q,SAAW4M,EAAE/nB,KAAKA,KAAKke,OAAS,SAAW,GAC3C3T,KAELw3B,EAAUhiC,KAAKqX,6BACnB2qB,EAAQ14B,QAAUy4B,EAClB,IAAIE,EAAYjiC,KAAKR,KAAK,wBAEtBoH,EAAS5G,KAAKoZ,wBAAwB,SAG1C,OAFApZ,KAAKwX,gCAAgC5Q,EAAQq7B,EAAWD,GAEjDp7B,EAMT05B,aAAavrB,EAAO1C,GAClB,IAAIkV,EAAaxS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKynB,SAAW,IACnEC,EAAc3nB,KAAK4nB,gBAAgBL,GACnCjiB,EAAY,OAEZgiB,EAAWK,EAAYljB,QACxBkV,GAAiB,eAAXA,EAAEjY,MAAyBiY,EAAE1Z,KAAKA,KAAKqnB,WAI5CS,EADUT,EAAS7iB,QAAQkV,GAAgB,UAAVA,EAAEjY,OACXH,KAAKymB,GAC/BhoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW0iB,KAEzCE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYb,EAAS7iB,QAAQkV,GAAgB,aAAVA,EAAEjY,OACRH,KAAKiE,GACpCxF,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWE,KAEzC4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAGIE,EAHQf,EAAS7iB,QAClBkV,GAAgB,UAAVA,EAAEjY,MAA8B,aAAViY,EAAEjY,OAERH,KAAK+mB,GAC5BtoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWgjB,KAEzCC,EAAWvoB,KAAKqX,6BACpBkR,EAASjf,QAAU+e,EAEnB,IAAIG,EAAiBb,EAAYljB,QAAQkV,GAAgB,cAAVA,EAAEjY,OAQ7C+mB,EANmBzoB,KAAK0oB,qBAAqBF,GACf/jB,QAC/BjD,GACEA,EAAEvB,KAAKA,KAAKuwB,MAAMvxB,OAASuC,EAAEvB,KAAKA,KAAKuwB,MAAMvxB,OAAS,GACtDuC,EAAEvB,KAAKA,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKA,KAAKuwB,MAAMrkB,KAAO,IAEpB5K,KAAKC,GACtCxB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW9D,KAEzCmnB,EAAiB3oB,KAAKqX,6BAC1BsR,EAAerf,QAAUmf,EAEzB,IAKIyZ,EALe1Z,EAAe/jB,QAC/BjD,KACGA,EAAEvB,KAAKA,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKA,KAAKuwB,MAAMvxB,QACf,QAA9BuC,EAAEvB,KAAKA,KAAKkiC,iBAEuB5gC,KAAKoY,GAC1C3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCyoB,EAAmBpiC,KAAKqX,6BAC5B+qB,EAAiB94B,QAAU44B,EAE3B,IACItZ,EADQrB,EAAW9iB,QAAQiO,GAAiB,SAAXA,EAAEhR,OACdH,KAAKoY,GAC5B3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCkP,EAAW7oB,KAAKqX,6BACpBwR,EAASvf,QAAUsf,EAEnB,IAAIE,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAC3BwpB,EAAahpB,KAAKR,KAAK,wBACvBypB,EAAmBjpB,KAAKR,KAAK,8BAC7B6iC,EAAqBriC,KAAKR,KAAK,gCAC/B0pB,EAAalpB,KAAKR,KAAK,wBAEvBoH,EAAS5G,KAAKoZ,wBAAwB,aAiB1C,OAfApZ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAC7DpoB,KAAKwX,gCAAgC5Q,EAAQoiB,EAAYT,GACzDvoB,KAAKwX,gCACH5Q,EACAqiB,EACAN,GAEF3oB,KAAKwX,gCACH5Q,EACAy7B,EACAD,GAEFpiC,KAAKwX,gCAAgC5Q,EAAQsiB,EAAYL,GAElDjiB,EAMT45B,eAAezrB,EAAO1C,GACpB,IAAIsX,EAAc5U,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OAKnD,OAJAioB,EAAc3pB,KAAK0oB,qBAAqBiB,GAE3B3pB,KAAK+pB,kBAAkBhV,EAAO1C,EAASsX,GAMtDI,kBAAkBhV,EAAO1C,EAAS2X,GAChC,MAAM1kB,EAAY,QAClB,IAAIsB,EAAS5G,KAAKqX,2BAA2B,UACzCirB,EACFtiC,KAAKqX,2BAA2B,iBAClCirB,EAAyBr9B,KAAOjF,KAAKR,KAAK,gCAoF1C,MAlFmB,IACd,IAAI4yB,IAAIpI,EAAOzoB,KAAKoY,GAAMA,EAAE1Z,KAAKA,KAAKsiC,cACzCn3B,OAES5E,SAASg8B,IAClB,MAAMC,EACJ1tB,EAAM9U,KAAKA,KAAK6kB,WAAWkF,OAAO0Y,WAAWF,GAAIG,YACnD,IAAIC,EAAgBJ,EAAGpW,OAAO,GAAGhC,cAAgBoY,EAAG/U,MAAM,GAE1D6U,EAAyBh5B,QAAQ5C,KAC/B1G,KAAK6iC,2BAA2BxwB,EAASuwB,IAG3C,MAWM5G,EAXWhS,EACdvlB,QAAQgC,GAAMA,EAAExG,KAAKA,KAAKsiC,YAAcC,IACxCp3B,MAAK,CAACC,EAAGC,IACRD,EAAEpG,KACCmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,WAGlBlf,MAAK,CAACC,EAAGC,IAAMD,EAAEpL,KAAKA,KAAKkqB,MAAQ7e,EAAErL,KAAKA,KAAKkqB,QAEnB/jB,QAAO,CAAC08B,EAAKr8B,KACrCq8B,EAAIC,eAAet8B,EAAExG,KAAKA,KAAKkqB,SAAQ2Y,EAAIr8B,EAAExG,KAAKA,KAAKkqB,OAAS,IAErE2Y,EAAIr8B,EAAExG,KAAKA,KAAKkqB,OAAOzjB,KAAKD,GAErBq8B,IACN,IAEH,IAAIE,GAAmB,EACvB3sB,OAAO7R,QAAQw3B,GAAex1B,SAAS2jB,IACrC,IAAIhhB,EAAWnJ,KAAKqX,6BAEhB/P,EACF6iB,EAAM,GAAK,EACP,GAAGnqB,KAAKR,KAAK,2BAA2B2qB,EAAM,KAC9CnqB,KAAKR,KAAK,2BACZyjC,EACFluB,EAAM9U,KAAKA,KAAK6kB,YAAYkF,QAAQ0Y,WAAWF,GAAY,OACzD,QAAUrY,EAAM,IAEpB,GAAI8Y,GAAaA,EAAU92B,IAAM,EAAG,CAClC,IAAI+2B,EAAe,GAAGD,EAAUhkC,MAAQgkC,EAAUhkC,MAAQ,IAAM,KAC9DgkC,EAAU92B,MAEZhD,EAASmS,MAAQ4nB,EAGfF,IACF17B,EAAe,GAAGs7B,OAAmBt7B,IACrC07B,GAAmB,GAGrB7Y,EAAM,GAAG3jB,SAASqlB,IAChB,IAAK7rB,KAAKmjC,iBAAiBpuB,EAAO8W,GAAQ,OAE1C,IAAI5mB,EAAO4mB,EAAM5mB,KACjBA,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhsB,EAAKoqB,EAAMnmB,IACXD,EAAe,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACtD,IAAIoF,EAAS,CACXvF,KAAMA,EACNxD,GAAIA,EACJgE,aAAcA,EACdiW,MAAO,IAETlR,EAAO5E,IAAM5F,KAAKiwB,UAAUpE,GAC5B7rB,KAAK+rB,cAAcF,EAAO4W,EAAej4B,GAEzCrB,EAASG,QAAQ5C,KAAK8D,MAGxBxK,KAAKwX,gCAAgC5Q,EAAQU,EAAc6B,SAI3Dm5B,EAAyBh5B,SAASzH,OAAS,GAC7C+E,EAAOgS,cAAc+E,QAAQ2kB,GAExB17B,EAITmlB,cAAcF,EAAO4W,EAAerG,GAClC,IAAI56B,EAAIqqB,EAAM5rB,KAAKA,KAAKisB,WAExB,IAAKuW,GAAiB5W,EAAM5rB,KAAKA,KAAKirB,YAAa,CACjD,IAAID,EAAOY,EAAM5rB,KAAKA,KAAKirB,aACvBD,EAAKmY,WAAanY,EAAKoY,kBACzBjH,EAAY9gB,MAAQ,GAAG2P,EAAKoY,kBAAkBpY,EAAKmY,aAGnD5hC,GAAG8hC,SACLlH,EAAY1gB,OAAS1b,KAAKR,KAAK,6BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG6qB,UACL+P,EAAY1gB,OAAS1b,KAAKR,KAAK,8BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG8qB,WACL8P,EAAY1gB,OAAS1b,KAAKR,KAAK,+BAC5B4sB,OAAO,GACPhC,eAED5oB,GAAG+hC,QACLnH,EAAYzgB,MAAQ3b,KAAKR,KAAK,4BAC3B4sB,OAAO,GACPhC,eAIP+Y,iBAAiBpuB,EAAO8W,GACtB,MAAM0W,EAAY1W,EAAM5rB,KAAKA,KAAKsiC,UAC5BE,EACJ1tB,EAAM9U,KAAKA,KAAK6kB,WAAWkF,OAAO0Y,WAAWH,GAAWI,YAE1D,QAAI9W,EAAM5rB,KAAKA,KAAKujC,WAEhBf,GAE+C,IAA/C5W,EAAM5rB,KAAKA,KAAKirB,YAAYmY,gBAKlCR,2BAA2BxwB,EAASqxB,GAClC,IAAIC,EAAqB,gBAKzB,MAAO,CAAE1+B,KAJEy+B,EAIUj+B,aAHF,CAACk+B,EAAoBtxB,EAASqxB,EAAO7E,eAAel5B,KACrE3F,KAAKoF,WAE0C3D,GAAIkiC,GAMvDjD,cAAc3rB,EAAO1C,GACnB,IAAIoa,EAAa1X,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAgB,QAAVA,EAAEjY,OAC9CgrB,EAAc1sB,KAAK4nB,gBAAgB6E,GAGvC,OAFYzsB,KAAK2sB,iBAAiBta,EAAS0C,EAAO2X,GAMpDC,iBAAiBta,EAAS0C,EAAO6X,GAC/B,IAAIzO,EAASne,KAAKqX,6BACdwV,EAAU7sB,KAAKqX,6BAELuV,EAAMxmB,OAClB,SAAU2kB,EAASpV,GACjB,MAAMqX,EAAiBrX,EAAE1V,KAAKA,KAAKypB,WAAWhoB,KAG9C,IAAIurB,EAAOjtB,KAAK8rB,WAAWzZ,EAAS0C,EAFlB,OAEoCY,GAGnDqX,GACkB,KAAnBA,GACmB,YAAnBA,EAMF7O,EAAO7U,QAAQ5C,KAAKumB,GAJlBJ,EAAQvjB,QAAQ5C,KAAKumB,IAOvBxpB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,SAEtC8T,EAAcltB,KAAKR,KAAK,yBAG5B,GAFAQ,KAAKwX,gCAAgC5Q,EAAQsmB,EAAa/O,IAErDtX,IAAa,sBAAuB,CACvC,IAAIwmB,EAAertB,KAAKR,KAAK,0BAC7BQ,KAAKwX,gCAAgC5Q,EAAQymB,EAAcR,GAG7D,OAAOjmB,EAITg6B,eAAe3b,EAAQ5S,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpBg9B,EAAY,IAAIzR,IAEpB/b,OAAO7R,QAAQygB,GAAQze,SAASsgC,IAC9B,IAAIrgC,EAAIsgC,UAAUD,GACdrgC,EAAE,GAAGmkB,WAAW,WAAUnkB,EAAE,GAAGq9B,eAAgB,KAC/Cr9B,EAAE,GAAGy9B,IAAOz9B,EAAE,GAAG8xB,MAAS9xB,EAAE,GAAGs9B,aAC9Bt9B,EAAE,GAAGs9B,WAAWF,EAAUxR,IAAI5rB,GAE/BA,EAAE,GAAGs9B,WACP1tB,OAAO7R,QAAQiC,EAAE,GAAGs9B,WAAWv9B,SAASw9B,IAClCA,EAAG,GAAGE,KAAOF,EAAG,GAAGzL,OACvByL,EAAG,GAAGF,eAAgB,EACtBE,EAAG,GAAGC,UAAYx9B,EAAE,GACpBu9B,EAAG,GAAG/+B,KAAO,GAAGgqB,OAAO+X,KAAK/hB,OAAOxe,EAAE,SAASu9B,EAAG,GAAG/+B,OACpD4+B,EAAUxR,IAAI2R,WAKpB,IAAIzW,EAAgB,IAAIsW,GAAWtiC,KAAKiE,IACtC,IAAI/D,EAAK+D,EAAE,GACPvF,EAAOuF,EAAE,GACTP,EAAOqoB,EAAO7rB,EAAKwtB,OAAO+X,KAAK/hB,OAAOxjB,IAEtCxB,EAAK6jC,eAAkB7+B,IACzBA,EAAOhF,EAAKgF,MAAQ,IACpBxD,EAAK,GAAGxB,EAAKgkC,uBAAuBxiC,KAEtCwD,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WAKtD,MAAO,CACLH,KAAMA,EACNxD,GAAIA,EACJgE,aAAcA,EACd6V,MARUtb,KAAKokC,kBAAkBnkC,EAAKs4B,MAStC7c,MARU,CAACzb,EAAKikC,GAAK,KAAO,GAAIjkC,EAAKgnC,IAAM,MAAQ,IAClDxiC,QAAQ4G,GAAY,KAANA,IACd1F,KAAK,SASNgoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAAcniB,MAAK,SAAUC,EAAGC,GACvD,OAAID,EAAEpG,KAAOqG,EAAErG,KACN,EAELoG,EAAEpG,KAAOqG,EAAErG,MACL,EAGH,KAGT,IAAI2oB,EAAc5tB,KAAKR,KAAK,yBAG5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAEnD/mB,EAGTw9B,kBAAkB7L,GAChB,OAAIA,GAAQ,EAAU,GAEf,IAAIA,IAGbrR,gBAAgBnB,EAAM1T,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQyqB,OAAO+X,KAAK/hB,QAAQ1jB,KAAKiE,IAC1D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CkoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAC1D3tB,KAAKqZ,yBAAyB0M,EAAM6H,EAAahnB,GAAQ,GAI3DigB,gBAAgBxU,EAASqU,EAAWrf,EAAYC,EAAchC,GAC5D,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAEtCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAO+X,KAAKtgB,WAAWnlB,KAAKiE,IACvD,GAA8B,IAA1BkhB,EAAUlhB,EAAE,IAAIvG,MAAa,OAEjC,IAAIgG,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IACIzsB,EADAyE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAKxD,OAH6BpE,EAAV,WAAfqG,EAAgC,GACxBrH,KAAK0tB,oBAAoBhH,EAAUlhB,EAAE,IAAIqoB,YAE9C,CAAE5oB,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAAMA,MAE/D8sB,EAAkB9tB,KAAKqX,6BAK3B,OAJAyW,EAAgBxkB,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAElDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcwmB,GAEpDlnB,EAITk6B,cAAczuB,EAAS0C,EAAO1N,EAAYC,EAAchC,GACtD,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAEtCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAO+X,KAAK3C,cAAc9iC,KAAKiE,IAC1D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3C6+B,EAAgBtkC,KAAKqX,6BACzBitB,EAAch7B,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAEhDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcg9B,GAE3D,IAAIC,EAAcvkC,KAAKqX,6BACnBmtB,EAAgB,WAKhBC,EAAiB,CACnB,CAAEx/B,KALejF,KAAKR,KAAK,2BAKLiG,aAJJ,CAAC++B,EAAenyB,EAASmyB,GAAe7+B,KAC1D3F,KAAKoF,WAG8C3D,GAAI+iC,IASzD,OAPAD,EAAYj7B,QAAUm7B,EACtBzkC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACV+kC,GAGK39B,EAGTugB,mBAAmBpB,EAAM1T,EAAShL,EAAYC,EAAchC,GAC1D,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GAEnCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAO+X,KAAKtgB,WAAWnlB,KAAKiE,IACvD,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CqoB,EAAkB9tB,KAAKqX,6BAC3ByW,EAAgBxkB,QAAUA,EAE1BtJ,KAAKwX,gCAAgC6C,EAAK/S,EAAcwmB,GACxD9tB,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAGzDulB,eAAe7Z,EAAM1T,EAAShL,EAAYC,EAAchC,GACtD,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GACnCi9B,EAAgBtkC,KAAKqX,6BAErBiW,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQyqB,OAAO+X,KAAK3C,cAAc9iC,KAAKiE,IAC1D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAG/C6+B,EAAch7B,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAEhDrL,KAAKwX,gCAAgC6C,EAAK/S,EAAcg9B,GACxDtkC,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAIzD+B,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BAEjB,GAAwB,cAApBtC,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIwsB,EAAgB,CAAC5oB,EAAW+M,EAAS,QAAQ1M,KAAK3F,KAAKoF,WAC3D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,yBAUpB,OANAQ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAGKnnB,EAITuV,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WACxC9T,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BAEjB,GAAI4P,EAAOvK,OAAOrR,GAAsB,cAAhBA,EAAEpL,KAAKyB,OAAuB,CACpD,IAAIwsB,EAAgB,CAAC5oB,EAAW+M,EAAS,QAAQ1M,KAAK3F,KAAKoF,WAC3D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,OACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,yBAIpBQ,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,wBACVuuB,GAKJjC,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,WACxDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,MAAMypB,YAAYhoB,MAElDkF,EAAS,CACX3B,KAFSjF,KAAK2kC,aAAah+B,GAG3BlF,GAAIkF,EAAKjB,IACTD,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GAiBR,OAbE2F,EAAK1G,KAAKA,KAAKkwB,WACdxpB,EAAK1G,KAAKA,KAAKkwB,SAASC,SACzBzpB,EAAK1G,KAAKA,KAAKkwB,SAASlxB,QAExB2H,EAAO3B,MAAQ,KAAKjF,KAAKR,KAAK,+BAGhCoH,EAAO0U,MAAQtb,KAAKqwB,iBAAiB1pB,GAErCC,EAAO8U,MAAQ1b,KAAKswB,aAAa3pB,GAEjCC,EAAO+U,MAAQ3b,KAAKuwB,gBAAgB5pB,EAAMoO,GAEnCnO,EAGT+9B,aAAah+B,GACX,IAAI1B,EAQJ,OALEA,EADE0B,EAAK1G,KAAKA,KAAK2kC,YAAchmC,KAAKiG,KAAKC,KAClC6B,EAAK1G,KAAKA,KAAK4kC,eACZl+B,EAAK1G,KAAKA,KAAK6kC,cAAc7/B,KAEpCA,IAAMA,EAAO0B,EAAK1B,MAEhBA,EAGTgrB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAI1DypB,iBAAiB1pB,GACf,IAAIC,EAAS,GAKb,OAJID,EAAK1G,KAAKA,KAAKynB,SAAW,IAC5B9gB,EAASD,EAAK1G,KAAKA,KAAKynB,UAGnB9gB,EAIT0pB,aAAa3pB,GACX,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKA,KAAKuwB,KAC1B,OAAKA,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,EAcpB2pB,gBAAgB5pB,EAAMoO,GACpB,IAAInO,EAAS,GAET6pB,EAAc9pB,EAAK1G,KAAKA,KAAKywB,SAAShvB,KAC1C,GAAI+uB,GAA+B,KAAhBA,EAAoB,CACrC,IAAIE,EAAYhqB,EAAK1G,KAAKA,KAAKywB,QAAQ7sB,OACnC+sB,EAAWD,EAAU1R,OAAO,EAAG0R,EAAUE,YAAY,MACzD,GAAoB,cAAhBJ,EAA6B,CAC/B,IAAI5sB,EAASitB,YAAY/b,EAAO,aAAa4b,KAE7C,GAAI9sB,EAAQ,CACV,IAAIkhC,EAASjU,YAAY/b,EAAO,aAAa6b,KAC7ChqB,EAAS/C,EACHkhC,EAAO54B,MAAKvF,GAAU,IAAIm+B,EAAO54B,QAI3C,GAAoB,YAAhBskB,EAA2B,CAC7B,IAAIE,EAAYhqB,EAAK1G,KAAKA,KAAKywB,QAAQ7sB,OAEnC2sB,EADSzb,EAAMsJ,MAAMvf,IAAI6xB,IACV1wB,KAAKA,KAAKuwB,KACzBA,GAAMvxB,QACR2H,EAAS4pB,EAAKvxB,MACVuxB,EAAKrkB,MAAKvF,GAAU,IAAI4pB,EAAKrkB,QAIrC,GAAsB,cAAhBskB,GAA+C,YAAhBA,EAA4B,CAC/D,IAAIE,EAAYhqB,EAAK1G,KAAKA,KAAKywB,QAAQ7sB,OAEnC6jB,EADS3S,EAAMsJ,MAAMvf,IAAI6xB,IACN1wB,KAAKA,KAAKynB,SAC7BA,IACF9gB,EAAS8gB,IAKf,OAAO9gB,EAGT8hB,qBAAqBrK,GACnB,OAAIxX,IAAa,kBAA0BwX,EAEpCA,EAAM5Z,QAAQkV,IACnB,IAAI6W,EAAO7W,EAAE1Z,KAAKA,KAAKuwB,KAEvB,OAAKA,KAGDA,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,UAO9B2oB,gBAAgBvJ,GACd,IAAIzX,EAASyP,OAAOiE,OAAO+D,GAI3B,OAFAzX,EAAOwE,MAAK,CAACC,EAAGC,IAAMD,EAAED,KAAOE,EAAEF,OAE1BxE,EAIT8mB,oBAAoBvD,GAOlB,MANc,CACZ,EAAG,GACH,GAAK,gCACL,EAAG,+BACH,EAAG,uCAEQA,GAGf+F,eAAe1lB,GAUb,MATY,CAEVw6B,UAAW,8BACXE,MAAO,8BACPC,KAAM,gCACNC,MAAO,yCACP9T,OAAQ,wCACRC,KAAM,wCAEG/mB,ICh5BR,MAAM08B,4BAA4B9nB,YACvCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEP,UAAZ9O,EACFG,OAAOjG,OAAO2H,WAAW1N,SAASkM,IAChC,IAAIshB,EAAUthB,EAAEzS,KAAKyF,IACrB1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,YAG1CrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIxD4S,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,OAAQ/b,GACN,IAAK,UACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,gBACHrhB,KAAKslC,uBAAuB3hC,EAAO0O,EAASgP,GAC5C,MACF,IAAK,MACHrhB,KAAKulC,aAAa5hC,EAAO0O,EAASgP,GAClC,MACF,IAAK,QACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,cACHrhB,KAAKo0B,qBAAqBzwB,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACHrhB,KAAKq0B,sBAAsB1wB,EAAO0O,EAASgP,GAC3C,MACF,IAAK,aACGrhB,KAAK2lC,WAAWhiC,EAAO0O,EAASgP,GACtC,MACF,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,SACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,GACxC,MACF,IAAK,WACHrhB,KAAK6lC,aAAaliC,EAAO0O,EAASgP,GAClC,MACF,IAAK,UACHrhB,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,IAM/CkkB,aAAa5hC,EAAO0O,EAASoiB,GACb10B,MAAMue,SAASjM,GACvByzB,QAAQniC,GAGhB2hC,uBAAuB3hC,EAAO0O,EAASoiB,GACvB10B,MAAMue,SAASjM,GACvB2zB,kBAAkBvR,GAG1BP,iBAAiBvwB,EAAO0O,EAASoiB,GACjB10B,MAAMue,SAASjM,GACvBqiB,YAAYD,EAAS,CAAE9wB,MAAOA,IAGtC0wB,sBAAsB1wB,EAAO0O,EAASoiB,GACtB10B,MAAMue,SAASjM,GACvBsiB,gBAAgBF,EAAS,CAAE9wB,MAAOA,IAG1CywB,qBAAqBzwB,EAAO0O,EAASoiB,GACrB10B,MAAMue,SAASjM,GACvB4zB,gBAAgBxR,EAAS,CAAE9wB,MAAOA,IAG1CwwB,eAAexwB,EAAO0O,EAASoiB,GACf10B,MAAMue,SAASjM,GACvBwiB,UAAUJ,EAAS,CAAE9wB,MAAOA,IAGpC6hB,cAAc7hB,EAAO0O,EAASkN,GAC5B,MAAMxK,EAAQhV,MAAMue,SAASjM,GAChBtS,MAAMuf,QAAQvK,EAAOwK,GAE7B2mB,IAAI,CAAEh2B,GAAIvM,EAAOwiC,YAAY,IAGpCN,aAAaliC,EAAO0O,EAASkN,GACbxf,MAAMue,SAASjM,GACvBwzB,eAGRF,iBAAiBhiC,EAAO0O,EAAS+zB,GAC/B,IAAIrxB,EAAQhV,MAAMue,SAASjM,GACvBg0B,EAAOtmC,MAAMuf,QAAQvK,EAAOqxB,GAE5Bh5B,EAAS,CAAE,eAAgBi5B,EAAKpmC,KAAKA,KAAKke,cAExCkoB,EAAKj5B,OAAOA,GAGpBknB,oBAAoB3wB,EAAO0O,EAASgP,GAClC,IAAItM,EAAQhV,MAAMue,SAASjM,GAG3B,OAFYtS,MAAMyf,SAASnN,GAEnBgP,GACN,IAAK,OACHtM,EAAM6L,MAAM2lB,QAAQ5iC,KC1HrB,MAAMwjC,0BAA0BtkB,cACrCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,aAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,oBAIb5B,mBAAmB3kB,EAASJ,IC7BvB,SAASwkB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,qBAAsB,CAChD6C,KAAMrG,KAAKY,KAAKE,SACd,yDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,yDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,mBAAoB,CAC9C6C,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,iBAAkB,CAC5C6C,KAAMrG,KAAKY,KAAKE,SACd,qDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,qDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MDfjB+/B,CAAkB5/B,EAASJ,IE5BxB,MAAMooC,oBACX5nC,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3CG,YAAYynC,GACVrnC,KAAK6b,YAAcwrB,EAGrBjzB,gBAAgBxN,EAAQyL,EAAS0C,GAElB,aADAA,EAAM9U,KAAKyB,KAEtB1B,KAAKsnC,aAAa1gC,EAAQyL,EAAS0C,GAEnC/U,KAAKunC,cAAc3gC,EAAQyL,EAAS0C,GAGtC,IAAIkQ,EAASjlB,KAAK4gC,eAAe7rB,EAAO1C,GACpCwuB,EAAQ7gC,KAAK6b,YAAY2rB,aAAazyB,EAAO1C,GAC7CyS,EAAa9kB,KAAKynC,kBAAkB1yB,EAAO1C,GAC3Cq1B,EAAY1nC,KAAK6b,YAAYO,gBAAgBrH,EAAO1C,GAExDrS,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,wBACVqhC,GAGF7gC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVkoC,GAKJJ,aAAa1gC,EAAQyL,EAAS0C,GAC5B,IAAI4yB,EAAS3nC,KAAK4nC,mBAAmB7yB,EAAO1C,GACxCgM,EAAQre,KAAK6b,YAAYwb,cAActiB,EAAO1C,GAC9Coc,EAAUzuB,KAAK6b,YAAYgsB,gBAAgB9yB,EAAO1C,GACtDrS,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,4BACV6e,GAEFre,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,yBACVmoC,GAEF3nC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVivB,GAKJ8Y,cAAc3gC,EAAQyL,EAAS0C,GAC7B,IAAI+yB,EAAU9nC,KAAK+nC,oBAAoBhzB,EAAO1C,GAC1C21B,EAAUhoC,KAAKioC,gBAAgBlzB,EAAO1C,GACtC/I,EAAUtJ,KAAK6b,YAAYqsB,gBAAgBnzB,EAAO1C,GAClDgM,EAAQre,KAAK6b,YAAYwb,cAActiB,EAAO1C,GAC9C2X,EAAShqB,KAAK6b,YAAY2kB,eAAezrB,EAAO1C,GAChDoc,EAAUzuB,KAAK6b,YAAYgsB,gBAAgB9yB,EAAO1C,GAClDua,EAAQ5sB,KAAK6b,YAAY6kB,cAAc3rB,EAAO1C,GAElDrS,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVsoC,GAEF9nC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVwoC,GAEFhoC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACV8J,GAEFtJ,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVivB,GAEFzuB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,4BACV6e,GAEFre,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,yBACVwqB,GAEFhqB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,2BACVotB,GAKJmb,oBAAoBhzB,EAAO1C,GACzB,IAAKxL,IAAa,2BAA4B,OAE9C,IAAID,EAAS5G,KAAK6b,YAAYzC,wBAAwB,WAGtD,OAFApZ,KAAKmoC,sBAAsBpzB,EAAO1C,EAASzL,GAEpCA,EAITqhC,gBAAgBlzB,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,WAQtD,OAPAxS,EAAOwU,SAAW,UAEbvU,IAAa,4BAChB7G,KAAKmoC,sBAAsBpzB,EAAO1C,EAASzL,GAE7C5G,KAAK6b,YAAYusB,sBAAsBrzB,EAAO1C,EAASzL,GAEhDA,EAITuhC,sBAAsBpzB,EAAO1C,EAASlJ,GACpC,MAAM7D,EAAY,SACZ+iC,EAAgBtzB,EAAM9U,KAAKA,KAAK6nC,SAASx+B,QAE/C,IAAK++B,EAAe,OAEpB,IAAIjxB,EAAcpX,KAAK6b,YAAYxE,6BACnCD,EAAYkxB,aAAe,8BAE3BD,EAAc7hC,SAASkM,IACrB,IAAI61B,EAAYvoC,KAAKwoC,cAAc91B,EAAE+1B,WACrC,IAAKF,EAAW,OAEhB,IASI/9B,EAAS,CACX/I,GAVO8mC,EAWP9iC,aAViB,CAACH,EAAW+M,EAASk2B,GAAW5iC,KACjD3F,KAAK6b,YAAYzW,WAUjBH,KARSyN,EAAEzR,MAAM2pB,WAAW,SAC1B5qB,KAAK6b,YAAYrc,KAAKkT,EAAEzR,OACxByR,EAAEzR,MAOJma,SANa1I,EAAEg2B,QAAU,SAAW,IAStCtxB,EAAY9N,QAAQ5C,KAAK8D,MAG3BxK,KAAK6b,YAAYrE,gCACfrO,EACAnJ,KAAK6b,YAAYrc,KAAK,0BACtB4X,GAKJoxB,cAAcC,GACZ,MAAME,EAAmB,0BACzB,OAAKF,EAAU1kC,SAAS4kC,GAEjBF,EAAUG,UAAUD,EAAiB9mC,QAFM,GAMpD+lC,mBAAmB7yB,EAAO1C,GACxB,IAAI/M,EAAY,iBACZsB,EAAS5G,KAAK6b,YAAYzC,wBAAwB,UAElDhC,EAAcpX,KAAK6b,YAAYxE,6BAEnC,MAAMwxB,EAAM9zB,EAAM9U,KAAKA,KAAK0nC,OAC5B,GAAIkB,EAAK,CACP,MAAMC,EACJD,EAAIE,cAAgB,EAAIF,EAAIE,cAAgB,IAAIF,EAAIE,gBAEtD,IAAI9jC,EAAO4jC,EAAI5jC,KAAKmnB,OAAO,GAAGhC,cAAgBye,EAAI5jC,KAAKwoB,MAAM,GAEzDhoB,EAAe,CAACH,EAAW+M,EAASw2B,EAAI5jC,MAAMU,KAChD3F,KAAK6b,YAAYzW,WAGfoF,EAAS,CACXvF,KAAMA,EACNQ,aAAcA,EACdA,aAAAA,EACA6V,MAAOwtB,GAGT1xB,EAAY9N,QAAU,CAACkB,GASzB,OANAxK,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,yBACV4X,GAGKxQ,EAITg6B,eAAe7rB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,UAElD4vB,EAAcniC,IAAa,oBAE3BoiC,EAAc5yB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKglB,QAE7CikB,EAAWD,EACZxkC,QAAQgC,IAAOA,EAAE,GAAG0iC,OACpB5nC,KAAKkF,GACJzG,KAAK6b,YAAYutB,eAAe/2B,EAAS,QAAS5L,EAAGuiC,KAErD/jB,EAASjlB,KAAK6b,YAAYxE,6BAC9B4N,EAAO3b,QAAU4/B,EAEjB,IAAIG,EAAUJ,EACXxkC,QAAQgC,GAAMA,EAAE,GAAG0iC,OACnB/9B,KAAKpL,KAAK6d,cACVtc,KAAKkF,GACJzG,KAAK6b,YAAYutB,eAAe/2B,EAAS,QAAS5L,EAAGuiC,KAErDG,EAAOnpC,KAAK6b,YAAYxE,6BAc5B,OAbA8xB,EAAK7/B,QAAU+/B,EAEfrpC,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,uBACV2pC,GAGKviC,EAIT6gC,kBAAkB1yB,EAAO1C,GACvB,IACIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,cAClD0L,EAAa9kB,KAAK6b,YAAYxE,6BAK9BsgB,EAHqBthB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YAAYrgB,QACjE4G,KAAQA,EAAE,IAAIoa,OAEsBlkB,KAAK8J,IAC1C,IAAIzH,EAAMyH,EAAE,GACRpL,EAAOoL,EAAE,GACTpG,EAAOhF,EAAKgB,MACZhB,EAAKgB,MACL2C,EAAIwoB,OAAO,GAAGhC,cAAgBxmB,EAAI6pB,MAAM,GAC5C,MAAO,CAAEhsB,GAAI4J,EAAE,GAAIpG,KAAMA,MAe3B,OAZA6f,EAAWxb,QAAUtJ,KAAK6b,YAAYytB,kBACpCj3B,EACAslB,EAlBc,aAsBhB33B,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,6BACVslB,GAGKle,EAITiX,aAAaxS,EAAGC,GACd,OAAMD,GAAGpL,MAAMmL,MAAQE,GAAGrL,MAAMmL,KAEzBC,EAAEpL,KAAKmL,KAAOE,EAAErL,KAAKmL,KAFkB,GCtS3C,MAAMm+B,qBACX/pC,KAAQC,GAAgBb,KAAKY,KAAKE,SAASD,GAE3CG,YAAYynC,GACVrnC,KAAK6b,YAAcwrB,EAGrBjzB,gBAAgBxN,EAAQyL,EAAS0C,GAC/B,IAAIizB,EAAUhoC,KAAKwpC,mBAAmBz0B,EAAO1C,GACzC/I,EAAUtJ,KAAK6b,YAAYqsB,gBAAgBnzB,EAAO1C,GAClDgM,EAAQre,KAAK6b,YAAYwb,cAActiB,EAAO1C,GAC9C2X,EAAShqB,KAAK6b,YAAY2kB,eAAezrB,EAAO1C,GAChDua,EAAQ5sB,KAAK6b,YAAY6kB,cAAc3rB,EAAO1C,GAC9C4S,EAASjlB,KAAK4gC,eAAe7rB,EAAO1C,GACpCwuB,EAAQ7gC,KAAK6b,YAAY2rB,aAAazyB,EAAO1C,GAC7CyS,EAAa9kB,KAAKypC,qBAAqB10B,EAAO1C,GAC9Coc,EAAUzuB,KAAK6b,YAAYgsB,gBAAgB9yB,EAAO1C,GAClDq1B,EAAY1nC,KAAK6b,YAAYO,gBAAgBrH,EAAO1C,GAExDrS,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVwoC,GAEFhoC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACV8J,GAEFtJ,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVivB,GAEFzuB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,4BACV6e,GAEFre,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,yBACVwqB,GAEFhqB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,2BACVotB,GAEF5sB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,wBACVqhC,GAEF7gC,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAK6b,YAAYxC,yBACfzS,EACA5G,KAAKR,KAAK,0BACVkoC,GAKJ8B,mBAAmBz0B,EAAO1C,GACxB,IAAIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,WACtDxS,EAAOwU,SAAW,UAEbvU,IAAa,4BAChB7G,KAAKmoC,sBAAsBpzB,EAAO1C,EAASzL,GAE7C,MAAMtI,EAAO0B,KAAK6b,YAAYrc,KAAK,+BAInC,OAFAQ,KAAK6b,YAAYusB,sBAAsBrzB,EAAO1C,EAASzL,EAAQtI,GAExDsI,EAITuhC,sBAAsBpzB,EAAO1C,EAASlJ,GACpC,MAAM7D,EAAY,SACZ+iC,EAAgBtzB,EAAM9U,KAAKA,KAAK6nC,SAASx+B,QAE/C,IAAK++B,EAAe,OAEpB,IAAIjxB,EAAcpX,KAAK6b,YAAYxE,6BACnCD,EAAYkxB,aAAe,8BAE3BD,EAAc7hC,SAASkM,IACrB,IAAI61B,EAAYvoC,KAAKwoC,cAAc91B,EAAE+1B,WACrC,IAAKF,EAAW,OAEhB,IASI/9B,EAAS,CACX/I,GAVO8mC,EAWP9iC,aAViB,CAACH,EAAW+M,EAASk2B,GAAW5iC,KACjD3F,KAAK6b,YAAYzW,WAUjBH,KARSyN,EAAEzR,MAAM2pB,WAAW,SAC1B5qB,KAAK6b,YAAYrc,KAAKkT,EAAEzR,OACxByR,EAAEzR,MAOJma,SANa1I,EAAEg2B,QAAU,SAAW,IAStCtxB,EAAY9N,QAAQ5C,KAAK8D,MAG3BxK,KAAK6b,YAAYrE,gCACfrO,EACAnJ,KAAK6b,YAAYrc,KAAK,0BACtB4X,GAKJoxB,cAAcC,GACZ,MAAME,EAAmB,0BACzB,OAAKF,EAAU1kC,SAAS4kC,GAEjBF,EAAUG,UAAUD,EAAiB9mC,QAFM,GAMpD++B,eAAe7rB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,UAElD4vB,EAAcniC,IAAa,oBAE3BoiC,EAAc5yB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKglB,QAAQxgB,QACtDgC,KAAQA,EAAE,GAAGxB,MAAQwB,EAAE,GAAGxB,KAAKpD,OAAS,IAGvCqnC,EAAWD,EACZxkC,QAAQgC,IAAOA,EAAE,GAAG0iC,OACpB5nC,KAAKkF,GACJzG,KAAK6b,YAAYutB,eAAe/2B,EAAS,QAAS5L,EAAGuiC,KAErD/jB,EAASjlB,KAAK6b,YAAYxE,6BAC9B4N,EAAO3b,QAAU4/B,EAEjB,IAAIG,EAAUJ,EACXxkC,QAAQgC,GAAMA,EAAE,GAAG0iC,OACnB/9B,KAAKpL,KAAK6d,cACVtc,KAAKkF,GACJzG,KAAK6b,YAAYutB,eAAe/2B,EAAS,QAAS5L,EAAGuiC,KAErDG,EAAOnpC,KAAK6b,YAAYxE,6BAc5B,OAbA8xB,EAAK7/B,QAAU+/B,EAEfrpC,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,uBACV2pC,GAGKviC,EAIT6iC,qBAAqB10B,EAAO1C,GAC1B,IACIzL,EAAS5G,KAAK6b,YAAYzC,wBAAwB,cAClD0L,EAAa9kB,KAAK6b,YAAYxE,6BAmBlC,OAZAyN,EAAWxb,QAAUtJ,KAAK6b,YAAYytB,kBACpCj3B,EANkB,CAClB,CAAE5Q,GAAI,aAAcwD,KAAM,cAC1B,CAAExD,GAAI,aAAcwD,KAAM,eANZ,aAehBjF,KAAK6b,YAAYrE,gCACf5Q,EACA5G,KAAKR,KAAK,6BACVslB,GAGKle,EAITiX,aAAaxS,EAAGC,GACd,OAAMD,GAAGpL,MAAMmL,MAAQE,GAAGrL,MAAMmL,KAEzBC,EAAEpL,KAAKmL,KAAOE,EAAErL,KAAKmL,KAFkB,GCxM3C,MAAMs+B,0BAA0B/sB,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GACrBpH,KAAK2pC,gBAAkB,IAAIvC,oBAAoBpnC,MAC/CA,KAAK4pC,iBAAmB,IAAIL,qBAAqBvpC,MAInDid,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IACzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAClB,IAAKA,EAAO,OAAOnO,EAEnB,IACI8yB,EAAY3kB,EAAM9U,KAAKyB,KAC3B,MAFkB,CAAC,YAAa,MAAO,YAEtBqC,SAAS21B,IAE1B9yB,EAAO4N,QAAUO,EAAMtT,GAEL,cAAdi4B,GAA2C,aAAdA,GAC/B15B,KAAK2pC,gBAAgBv1B,gBAAgBxN,EAAQyL,EAAS0C,GAEtC,QAAd2kB,GACF15B,KAAK4pC,iBAAiBx1B,gBAAgBxN,EAAQyL,EAAS0C,GAErDlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,GAZsCA,EAe/Ckf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,YAAa,YAC1C,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAErBrS,KAAKknB,gBAAgBnB,EAAM1T,EAAS4U,GACpCjnB,KAAK4/B,eAAe7Z,EAAM1T,EAAS4U,GACnCjnB,KAAK43B,oBAAoB7R,EAAM1T,EAAS4U,GACxCjnB,KAAKmc,mBAAmB4J,EAAM1T,EAAS4U,GAGzCC,gBAAgBnB,EAAM1T,EAAS4U,GAC7B,MAAM3hB,EAAY,QACZ6D,EAAWnJ,KAAKoZ,wBAAwB9T,GACxC8R,EAAcpX,KAAKqX,2BAA2B/R,GAE9CukC,EAAe5iB,EAAO1lB,KAAK8J,GAC/BgL,OAAO7R,QAAQ6G,EAAEpL,KAAKA,KAAKglB,QAAQxgB,QAAQgC,KAAQA,EAAE,GAAGgf,SAEpDqkB,EAAkBh+B,KAAKuY,OAAOwlB,EAAatoC,KAAKkF,GAAMA,EAAE5E,UACrCgoC,EAAajoC,MACnC4Z,GAAQA,EAAI3Z,SAAWioC,IAEiBrlC,QAAQygB,GACjD2kB,EAAantB,OAAOlB,GAClBA,EAAI9G,MAAMq1B,GAAaA,EAAS,KAAO7kB,EAAM,SAI/B1e,SAAS0e,IACzB,MAAMthB,EAAMshB,EAAM,GACZjlB,EAAOilB,EAAM,GAEnB,IAAIjgB,EAAOgqB,OAAO+a,KAAK/kB,OAAOrhB,GACzBqB,IAAMA,EAAOhF,EAAKgF,MAEvB,MAAMQ,EAAe,CAACH,EAAW+M,EAASzO,GAAK+B,KAAK3F,KAAKoF,WACnDoF,EAAS,CACbvF,KAAMrG,KAAKY,KAAKE,SAASuF,GACzBQ,aAAcA,EACdhE,GAAImC,GAENwT,EAAY9N,QAAQ5C,KAAK8D,MAG3B,MAAMy/B,EAAajqC,KAAKR,KAAK,+BAC7BQ,KAAKwX,gCAAgCrO,EAAU8gC,EAAY7yB,GAC3DpX,KAAKqZ,yBAAyB0M,EAAMkkB,EAAY9gC,GAGlDy2B,eAAe7Z,EAAM1T,EAAS4U,GAC5B,MAAM3hB,EAAY,OACZ6D,EAAWnJ,KAAKoZ,wBAAwB9T,GACxC8R,EAAcpX,KAAKqX,2BAA2B/R,GAEpD+Q,OAAO7R,QAAQyqB,OAAO+a,KAAKnJ,OAAOr6B,SAASmwB,IACzC,MAAM/yB,EAAM+yB,EAAK,GACX1xB,EAAO0xB,EAAK,GACZlxB,EAAe,CAACH,EAAW+M,EAASzO,GAAK+B,KAAK3F,KAAKoF,WACnDoF,EAAS,CACbvF,KAAMrG,KAAKY,KAAKE,SAASuF,GACzBQ,aAAcA,EACdhE,GAAImC,GAENwT,EAAY9N,QAAQ5C,KAAK8D,MAG3B,MAAMy/B,EAAajqC,KAAKR,KAAK,wBAC7BQ,KAAKwX,gCAAgCrO,EAAU8gC,EAAY7yB,GAC3DpX,KAAKqZ,yBAAyB0M,EAAMkkB,EAAY9gC,GAGlDyuB,oBAAoB7R,EAAM1T,EAAS4U,GACjC,IACIrgB,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa9kB,KAAKqX,6BAOtByN,EAAWxb,QAAUtJ,KAAKspC,kBACxBj3B,EANkB,CAClB,CAAE5Q,GAAI,aAAcwD,KAAM,cAC1B,CAAExD,GAAI,aAAcwD,KAAM,eANZ,aAehB,MAAMilC,EAAiBlqC,KAAKR,KAAK,6BACjCQ,KAAKwX,gCAAgC5Q,EAAQsjC,EAAgBplB,GAC7D9kB,KAAKqZ,yBAAyB0M,EAAMmkB,EAAgBtjC,GAGtDuV,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAKA,EAAOvK,OAAO3H,GAA8B,cAApBA,EAAM9U,KAAKyB,OAAuB,OAE/D,IAAIkF,EAAS5G,KAAKoZ,wBAAwB,WAGtC2U,EAAQ/tB,KAAKqX,6BAEb8yB,EAAc,GACdC,EAAmB,CAAC,UAAW/3B,EAAS,eAAe1M,KACzD3F,KAAKoF,WAEHilC,EAAoB,CACtB5oC,GAAI,cACJwD,KAAMjF,KAAKR,KAAK,8BAChBiG,aAAc2kC,GAEhBD,EAAYzjC,KAAK2jC,GAEjB,IAAInc,EAAgB,CAAC,UAAW7b,EAAS,YAAY1M,KAAK3F,KAAKoF,WAC3DklC,EAAiB,CACnB7oC,GAAI,WACJwD,KAAMjF,KAAKR,KAAK,4BAChBiG,aAAcyoB,GAIhB,GAFAic,EAAYzjC,KAAK4jC,GAEb1rC,KAAKC,SAASC,IAAI,OAAQ,kBAAmB,CAC/C,IAAIyrC,EAAoB,CAAC,UAAWl4B,EAAS,iBAAiB1M,KAC5D3F,KAAKoF,WAEHolC,EAAqB,CACvB/oC,GAAI,gBACJwD,KAAMjF,KAAKR,KAAK,+BAChBiG,aAAc8kC,GAGhBJ,EAAYzjC,KAAK8jC,GAGnBzc,EAAMzkB,QAAU6gC,EAEhB,MAAMM,EAAczqC,KAAKR,KAAK,0BAC9BQ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKqZ,yBAAyB0M,EAAM0kB,EAAa7jC,GAInDywB,cAActiB,EAAO1C,GACnB,IAAI/M,EAAY,OACZsB,EAAS5G,KAAKoZ,wBAAwB,SAEtC3U,EAAS,CAAC,SAAU,YAAa,aAAc,QAAS,YACxD4Z,GAAStJ,EAAMsJ,OAAS,IACzB5Z,QACE4G,GACCA,EAAEpL,KAAKA,KAAKqnB,UAAUroB,QAAUoM,EAAEpL,KAAKA,KAAKyqC,aAAazrC,OAAO4C,SAEnE4C,QAAQkV,GAAMlV,EAAOV,SAAS4V,EAAE1Z,KAAKyB,QACrC0J,KAAKpL,KAAK6d,cAET8sB,EAAatsB,EAAM5Z,QAAQkV,GAAiB,WAAXA,EAAEjY,OACf,cAApBqT,EAAM9U,KAAKyB,OACbipC,EAAaA,EAAWlmC,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKqnB,SAASroB,SAC7D,IAAI8oB,EAAgB/nB,KAAK4qC,kBAAkBv4B,EAAS/M,EAAWqlC,GAC3DvT,EAAUp3B,KAAKqX,6BACnB+f,EAAQ9tB,QAAUye,EAElB,IAAI8iB,EAAaxsB,EAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OACf,cAApBqT,EAAM9U,KAAKyB,OACbmpC,EAAaA,EAAWpmC,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKqnB,SAASroB,SAC7D,IAAI6rC,EAAgB9qC,KAAK4qC,kBAAkBv4B,EAAS/M,EAAWulC,GAC3DE,EAAS/qC,KAAKqX,6BAClB0zB,EAAOzhC,QAAUwhC,EAEjB,IAAIE,EAAgB3sB,EAAM5Z,QACvBkV,GAAiB,cAAXA,EAAEjY,MAAmC,aAAXiY,EAAEjY,OAEjCymB,EAAmBnoB,KAAK4qC,kBAC1Bv4B,EACA/M,EACA0lC,GAEE7hB,EAAYnpB,KAAKqX,6BACrB8R,EAAU7f,QAAU6e,EAEpB,IAAI8iB,EAAkB5sB,EAAM5Z,QAAQkV,GAAiB,eAAXA,EAAEjY,OACxC+mB,EAAoBzoB,KAAK4qC,kBAC3Bv4B,EACA/M,EACA2lC,GAEEC,EAAclrC,KAAKqX,6BAyBvB,OAxBA6zB,EAAY5hC,QAAUmf,EAEtBzoB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV43B,GAEFp3B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACVurC,GAEF/qC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,4BACV2pB,GAEFnpB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,8BACV0rC,GAEFlrC,KAAKmrC,2BAA2B94B,EAAS/M,EAAWsB,EAAQmO,EAAOsJ,GAE5DzX,EAITukC,2BAA2B94B,EAAS/M,EAAW6D,EAAU4L,EAAOsJ,GAC9D,MAAM+sB,EAAkB,IACnB,IAAIhZ,IACLrd,EAAMsJ,MACH5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKyqC,aAAazrC,QACvCsC,KAAKoY,GAAMA,EAAE1Z,KAAKA,KAAKyqC,YAAYzrC,WAGtBof,GAAS,IAAI5Z,QAAQkV,GACvCyxB,EAAgBrnC,SAAS4V,EAAElY,MAGlB+E,SAAS6kC,IAClB,MAAMX,EAAcW,EAAU5pC,GACxBqV,EAAW/B,EAAMsJ,MACpB5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKyqC,aAAazrC,QAAUyrC,IACjDt/B,KAAKpL,KAAK6d,cACb,GAAwB,IAApB/G,EAASjV,OAAc,OAE3B,MAAMypC,EAAoBtrC,KAAKqX,2BAA2BqzB,GAC1D,IAAIa,EAAmBvrC,KAAK4qC,kBAC1Bv4B,EACA/M,EACAwR,GAEFw0B,EAAkBhiC,QAAUiiC,EAC5BD,EAAkBhwB,MAAQ+vB,EAAUprC,KAAKA,KAAKurC,aAAavsC,MAE3De,KAAKwX,gCACHrO,EACAkiC,EAAUpmC,KACVqmC,MAMNzD,gBAAgB9yB,EAAO1C,GACrB,IACIzL,EAAS5G,KAAKoZ,wBAAwB,WAEtC3U,EAAS,CAAC,UAKVgnC,GAJS12B,EAAMsJ,OAAS,IACzB5Z,QAAQkV,GAAMlV,EAAOV,SAAS4V,EAAE1Z,KAAKyB,QACrC0J,KAAKpL,KAAK6d,cAEWpZ,QAAQkV,GAAiB,WAAXA,EAAEjY,OACpCgqC,EAAgB1rC,KAAK4qC,kBAAkBv4B,EAT3B,OAS+Co5B,GAC3Dhd,EAAUzuB,KAAKqX,6BASnB,OARAoX,EAAQnlB,QAAUoiC,EAElB1rC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACVivB,GAGK7nB,EAITwhC,sBAAsBrzB,EAAO1C,EAASlJ,GACpC,IAAI7D,EAAY,SACZ0iC,EAAUjzB,EAAM9U,KAAKA,KAAKqJ,SAAS7E,QAAQ4G,GAAMA,EAAE3J,OAAS4D,IAKhE,GAJwB,cAApByP,EAAM9U,KAAKyB,MAA0BsmC,IACvCA,EAAUA,EAAQvjC,QAAQgC,GAAMA,EAAEklC,UAG/B3D,EAAS,OAEd,IAAI4D,EAAyB/kC,IAAa,0BAE1CmhC,EAAQxhC,SAASC,IACf,IAAI2Q,EAAcpX,KAAKqX,6BACnBw0B,EAAQplC,EAAEolC,MACVA,IACFz0B,EAAYpW,KAAO,oDAAoD6qC,YAEzE,IAAItqC,EAAMuK,KAAKC,IAAIvD,SAAS/B,EAAEqlC,SAAS,GAAG7qC,MAAMmgB,MAAM,KAAK,KACvD2qB,EAAYtlC,EAAEsiC,cAEdiD,EAAa,EACbC,EAAeF,EACfG,EAAmBN,EAEnBO,EAAc1lC,EAAEqlC,SAASvqC,IAC3B,SAAU6qC,GACR,IAAInnC,EAQJ,OANEA,EADEgnC,IAAiBF,GAAaG,EACzBD,GAAgB,EAAI,IAAIA,IAAiB,GAAGA,IAE5CD,GAAc,EAAI,IAAIA,IAAe,GAAGA,IAEjDA,GAAczqC,EACd0qC,GAAgB1qC,EACT,CACLE,GAAIq7B,mBAAmB,GAAG98B,KAAKiF,QAAQjF,KAAK8rC,SAAS5/B,QAAQkgC,MAC7DnnC,KAAMA,IAERxB,KAAKgD,IAGT0lC,EAAY,GAAGvmC,IAAMa,EAAE4lC,SACvBj1B,EAAY9N,QAAUtJ,KAAKspC,kBACzBj3B,EACA85B,EACA7mC,GAGF,IAAIgnC,EAAqB,CACvBhnC,EACA+M,EACAyqB,mBAAmBr2B,EAAExB,KAAO,YAC5BU,KAAK3F,KAAKoF,WACRmnC,EAAmB,CACrBjnC,EACA+M,EACAyqB,mBAAmBr2B,EAAExB,KAAO,cAC5BU,KAAK3F,KAAKoF,WACZgS,EAAY9N,QAAQ5C,KAAK,CACvBzB,KAAMjF,KAAKR,KAAK,yBAChBiG,aAAc6mC,EACd7qC,GAAIq7B,mBAAmBr2B,EAAExB,KAAO,aAElCmS,EAAY9N,QAAQ5C,KAAK,CACvBzB,KAAMjF,KAAKR,KAAK,2BAChBiG,aAAc8mC,EACd9qC,GAAIq7B,mBAAmBr2B,EAAExB,KAAO,eAGlC,IAAIunC,EAAaxsC,KAAKysC,UAAUp6B,EAAS0C,EAAOtO,GAC1C+lC,GACJp1B,EAAY9N,QAAQ5C,KAAK8lC,GAG3BxsC,KAAKwX,gCAAgCrO,EAAU1C,EAAExB,KAAMmS,MAK3Dq1B,UAAUp6B,EAAS0C,EAAO23B,GACxB,IAAKA,EAAOC,eAAgB,OAE5B,MAAMhmC,EAAOoO,EAAMsJ,MAAMvf,IAAI4tC,EAAOC,gBAEpC,IAAKhmC,EACH,MAAO,CACL1B,KAAMjF,KAAKR,KAAK,yBAChBiG,aAAc,SACdhE,GAAI,UAIR,IAAIgE,EAAe,CAAC,OAAQ4M,EAAS1L,EAAKlF,IAAIkE,KAAK3F,KAAKoF,WACpDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB6D,EAAS,CACXvF,KAAM0B,EAAK1B,KACXQ,aAAcA,EACdhE,GAAIkF,EAAKlF,GACTmE,IAAKA,GAIP,OAFA4E,EAAO8Q,MAAQ3U,EAAK1G,KAAKA,KAAKynB,UAAUzoB,MAEjCuL,EAIT09B,gBAAgBnzB,EAAO1C,GACrB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,WAEtCwzB,GAAmB73B,EAAMsJ,OAAS,IACnC5Z,QAAQ4G,GAAMA,EAAE3J,OAAS4D,GAAwB,SAAX+F,EAAE3J,OACxC0J,KAAKpL,KAAK6d,cAEThX,IAAa,0BACf+lC,EAAkBA,EAAgBnoC,QAC/B4G,GAAuC,YAAjCA,EAAEpL,KAAKA,KAAK4sC,WAAW5tC,SAGlC,IAAIqK,EAAUtJ,KAAKqX,6BACnB/N,EAAQA,QAAUtJ,KAAKspC,kBACrBj3B,GACCu6B,GAAmB,IAAInoC,QACrB4G,GACmC,WAAlCA,EAAEpL,KAAKA,KAAK4sC,YAAY5tC,OAAsBe,KAAK8sC,eAAezhC,KAEtE/F,GAGF,IAAIynC,EAAY/sC,KAAKqX,6BACrB01B,EAAUzjC,QAAUtJ,KAAKspC,kBACvBj3B,GACCu6B,GAAmB,IAAInoC,QACrB4G,GACmC,aAAlCA,EAAEpL,KAAKA,KAAK4sC,YAAY5tC,OAAwBe,KAAK8sC,eAAezhC,KAExE/F,GAGF,IAAI2/B,EAAOjlC,KAAKqX,6BAChB4tB,EAAK37B,QAAUtJ,KAAKspC,kBAClBj3B,GACCu6B,GAAmB,IAAInoC,QACrB4G,GACmC,SAAlCA,EAAEpL,KAAKA,KAAK4sC,YAAY5tC,OAAoBe,KAAK8sC,eAAezhC,KAEpE/F,GAGF,IAAIunB,EAAU7sB,KAAKqX,6BACnBwV,EAAQvjB,QAAUtJ,KAAKspC,kBACrBj3B,GACCu6B,GAAmB,IAAInoC,QACrB4G,GACmC,YAAlCA,EAAEpL,KAAKA,KAAK4sC,YAAY5tC,OACxBe,KAAK8sC,eAAezhC,IACT,SAAXA,EAAE3J,OAEN4D,GAGF,IAAI0nC,EAAchtC,KAAKqX,6BACvB21B,EAAY1jC,QAAUtJ,KAAKspC,kBACzBj3B,GACCu6B,GAAmB,IAAInoC,QAAQ4G,GAC9BA,EAAEpL,KAAKA,KAAKgtC,QAAQhuC,MAAM8E,SAAS,iBAErCuB,GAGF,IAAI4nC,EAAWltC,KAAKqX,6BAwCpB,OAvCA61B,EAAS5jC,QAAUtJ,KAAKspC,kBACtBj3B,GACCu6B,GAAmB,IAAInoC,QAAQ4G,GAC9BA,EAAEpL,KAAKA,KAAKgtC,QAAQhuC,MAAM8E,SAAS,cAErCuB,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV8J,GAEFtJ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,4BACVutC,GAEF/sC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACVylC,GAEFjlC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACVqtB,GAEF7sB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,8BACVwtC,GAEFhtC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACV0tC,GAGKtmC,EAITkmC,eAAetiC,GACb,QACEA,EAAOvK,KAAKA,KAAKgtC,QAAQhuC,MAAM8E,SAAS,gBACxCyG,EAAOvK,KAAKA,KAAKgtC,QAAQhuC,MAAM8E,SAAS,aAK5Cy8B,eAAezrB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UAEtC3U,EAAS,CAAC,qBACV4Z,GAAStJ,EAAMsJ,OAAS,IAAI5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChE,MAAM4D,EAAY,QAElB,IAAIgzB,EAAkBt4B,KAAKqX,6BAsF3B,OApFAgH,EAAM7X,SAAS2mC,IAEb,MAAMC,EAAWD,EAAkBltC,KAAKgF,KACxC,IAAIooC,EAA4BrtC,KAAKqX,2BAA2B+1B,GAChEC,EAA0BpoC,KAAOmoC,EACjC9U,EAAgB1f,cAAclS,KAAK2mC,GAEnC,MAAMpK,EAAYkK,EAAkBG,eACpBrK,EAAUsK,YAAetK,EAAUuK,WAEnDvK,EAAUwK,OAAOhpC,QAAQ0lB,GAAUA,EAAMhM,OAAOtc,OAAS,IAAG2E,SAAQ,CAAC2jB,EAAOxQ,KAE1Enb,QAAQC,IAAI,QAAQ0uC,EAAkBltC,KAAKgF,SAASklB,EAAMA,SAE1D,IAAIqB,EAAY,GAAG5sB,KAAKY,KAAKE,SAASyqB,EAAMlpB,SAExCi3B,EAAmBl4B,KAAKqX,6BAErB,GAAHsC,GACF6R,EAAY,GAAG4hB,OAAc5hB,IACL,cAApBzW,EAAM9U,KAAKyB,MACb1B,KAAK0tC,kBACH34B,EACA1C,EACA6lB,EACA/N,EACA8Y,GACA,GAEJ/K,EAAiBxc,MAAQ1b,KAAK2tC,gBAAgBR,IAEtB,cAApBp4B,EAAM9U,KAAKyB,MACb1B,KAAK0tC,kBACH34B,EACA1C,EACA6lB,EACA/N,EACA8Y,GACA,GAIN9Y,EAAMhM,OAAO1Z,QAAO,EAAEonB,MAAAA,KAAWA,EAAM+hB,WAAY,IAAiBpnC,SAAQ,EAAEqlB,MAAAA,MAC5E,IAAIpmB,EAAe,CACjBH,EACA+M,EACA,GAAG4wB,EAAUxhC,MAAM0oB,EAAMA,SAAS0B,EAAM5rB,KAAKyF,OAC7CC,KAAK3F,KAAKoF,WACRg3B,EAAc,CAChBn3B,KAAM4mB,EAAM5mB,KACZQ,aAAcA,EACdhE,GAAIoqB,EAAM5rB,KAAKyF,KAQjB,GANA02B,EAAYx2B,IAAM5F,KAAKiwB,UAAUpE,GACjCuQ,EAAYp7B,KAAOhB,KAAKkwB,eAAerE,EAAM5rB,KAAKA,MAAM4tC,MAAM5uC,OAC9Dm9B,EAAYH,WAAa9R,EAAMA,MAE/BnqB,KAAK+rB,cAAcF,EAAOuQ,GAC1BlE,EAAiB5uB,QAAQ5C,KAAK01B,IACP,IAAnBvQ,EAAM+hB,SAAoB,CAC5B,IAAIE,EAAc,CAChB7oC,KAAM,IACNQ,aAAcA,EAAe,UAC7BhE,GAAIoqB,EAAM5rB,KAAKwB,GACf2Z,SAAU,aAEZ8c,EAAiB5uB,QAAQ5C,KAAKonC,OAIlC9tC,KAAKwX,gCACH61B,EACA7hB,EACA0M,SAMNl4B,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACV84B,GAEK1xB,EA6MT+mC,gBAAgBR,GACd,IAAIvmC,EAAS,GAETmnC,EAAUZ,EAAkBltC,KAAKA,KAAK8tC,QAW1C,OAFAnnC,EAAS,GAPPmnC,EAAQ9uC,OAAS,EACb,GAAGe,KAAKR,KAAK,0BAA0BuuC,EAAQ9uC,QAC/C,GAAGe,KAAKR,KAAK,0BAA0BuuC,EAAQ9uC,WACxC,GAAGe,KAAKR,KAAK,uBACxB2tC,EAAkBltC,KAAKA,KAAK8tC,QAAQC,OAK/BpnC,EAIT8mC,kBACE34B,EACA1C,EACAlJ,EACAghB,EACA8Y,EACAgL,GAGA,IAAIC,EAAUC,EAAYC,EAAYC,EACtC,GAAIJ,GAAoBhL,EAAUqL,YAAa,CAC7C,IAAI/K,EAAQxuB,EAAM9U,KAAKA,KAAKsuC,UAAUhL,MAItC,GAHA2K,EAAW3K,EAAMp3B,IACjBgiC,EAAa5K,EAAMtkC,MAEfivC,EAAW,EAAG,CAChB/kC,EAASmS,MAAQ,GAAG6yB,KAAcD,IAElCE,EAAa,GAAGnL,EAAUxhC,wBAC1B,IAAI+sC,EAAuB,CAAC,YAAan8B,EAAS+7B,GAAYzoC,KAC5D3F,KAAKoF,WAEP+D,EAASG,QAAQqU,QAAQ,CACvBlc,GAAI2sC,EACJnpC,KAAM,IACNQ,aAAc+oC,EACdpzB,SAAU,WAGZizB,EAAa,GAAGpL,EAAUxhC,wBAC1B,IAAIgtC,EAAuB,CAAC,YAAap8B,EAASg8B,GAAY1oC,KAC5D3F,KAAKoF,WAEP+D,EAASG,QAAQqU,QAAQ,CACvBlc,GAAI4sC,EACJ5oC,aAAcgpC,EACdxpC,KAAM,IACNmW,SAAU,YAKhB,GAAI+O,EAAMqG,MAAMrkB,IAAM,GAAM82B,EAAUsK,aAAetK,EAAUuK,WAAa,CAC1E,IAAIjiB,EAAQpB,EAAMqG,KACdke,EAAY,OAAOvkB,IAIvB,GAHA+jB,EAAW3iB,EAAMpf,IACjBgiC,EAAa5iB,EAAMtsB,MAEfivC,EAAW,EAAG,CAChB/kC,EAASmS,MAAQ,GAAG6yB,KAAcD,IAElCE,EAAa,GAAGnL,EAAUxhC,MAAMitC,iBAChC,IAAIF,EAAuB,CAAC,YAAan8B,EAAS+7B,GAAYzoC,KAC5D3F,KAAKoF,WAEP+D,EAASG,QAAQqU,QAAQ,CACvBlY,aAAc+oC,EACdvpC,KAAM,IACNxD,GAAI2sC,EACJhzB,SAAU,WAGZizB,EAAa,GAAGpL,EAAUxhC,MAAMitC,iBAChC,IAAID,EAAuB,CAAC,YAAap8B,EAASg8B,GAAY1oC,KAC5D3F,KAAKoF,WAEP+D,EAASG,QAAQqU,QAAQ,CACvBlY,aAAcgpC,EACdxpC,KAAM,IACNxD,GAAI2sC,EACJhzB,SAAU,aAOlB2Q,cAActlB,EAAGolB,GACf7rB,KAAK2uC,mBAAmBloC,EAAGolB,GACtBhlB,IAAa,mBAAmB7G,KAAK4uC,qBAAqBnoC,EAAGolB,GAGpE8iB,mBAAmBloC,EAAGolB,GACpB,IAAIK,EAAazlB,EAAEylB,WACfA,EACFL,EAAMvQ,MAAQ4Q,EAAWjtB,OAEzBitB,EAAazlB,EAAExG,KAAKA,KAAKisB,YAAYjtB,MAAMmiB,MAAM,KACjDyK,EAAMvQ,MAAQ4Q,EACX3qB,KAAKC,GAAMA,EAAE87B,OAAOlR,OAAO,GAAGhC,gBAC9BzkB,KAAK,KAIZipC,qBAAqBnoC,EAAGolB,GACtB,IAAIvtB,EAAO,GACyB,WAAhCmI,EAAExG,KAAKA,KAAK4uC,UAAU5vC,OACxBX,EAAKoI,KAAK1G,KAAKR,KAAK,uBAElBiH,EAAExG,KAAKA,KAAK05B,OAAO16B,OAAOX,EAAKoI,KAAK1G,KAAKR,KAAK,uBAElDqsB,EAAMnQ,MAAQpd,EAAKqH,KAAK,MAI1B+6B,cAAc3rB,EAAO1C,GACnB,IAAI/M,EAAY,OAEZsB,EAAS5G,KAAKoZ,wBAAwB,SAEtC3U,EAAS,CAACa,GACV+Y,GAAStJ,EAAMsJ,OAAS,IACzB5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChC0J,KAAKpL,KAAK6d,cAETM,EAASne,KAAKqX,6BAClB8G,EAAO7U,QAAUtJ,KAAKspC,kBACpBj3B,GACCgM,GAAS,IAAI5Z,QAAQ4G,GAAuC,YAAjCA,EAAEpL,KAAKA,KAAK4sC,WAAW5tC,QACnDqG,GAGF,IAAIunB,EAAU7sB,KAAKqX,6BAmBnB,OAlBAwV,EAAQvjB,QAAUtJ,KAAKspC,kBACrBj3B,GACCgM,GAAS,IAAI5Z,QAAQ4G,GAAuC,YAAjCA,EAAEpL,KAAKA,KAAK4sC,WAAW5tC,QACnDqG,GACA,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACV2e,GAEFne,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACVqtB,GAGKjmB,EAIT4gC,aAAazyB,EAAO1C,GAClB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,SAEtC01B,EAAa/5B,EAAM9U,KAAKA,KAAK4gC,MAC7BkO,EAAU14B,OAAOgT,KAAKylB,GAAYvtC,KAAKytC,IAClC,CAAEvtC,GAAIutC,EAAG/pC,KAAMrG,KAAKY,KAAKE,SAASuvB,OAAO+a,KAAKnJ,MAAMmO,QAGzDnO,EAAQ7gC,KAAKqX,6BASjB,OARAwpB,EAAMv3B,QAAUtJ,KAAKspC,kBAAkBj3B,EAAS08B,EAAS,QAEzD/uC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVqhC,GAGKj6B,EAITwiC,eAAe/2B,EAAS/M,EAAW2pC,EAAYjG,GAC7C,IAAIplC,EAAMqrC,EAAW,GACjBhvC,EAAOgvC,EAAW,GAElBhqC,EACF+jC,IAAgB/oC,EAAKgF,KACjBrB,EAAIwoB,OAAO,GAAGhC,cAAgBxmB,EAAI6pB,MAAM,GACxCxtB,EAAKgF,MAAMmnB,OAAO,GAAGhC,cAAgBnqB,EAAKgF,MAAMwoB,MAAM,GAExDxuB,EAAQgB,EAAKhB,MACbX,EAAO,GACE,GAATW,IACaX,EAAXW,EAAQ,EAAU,IAAIA,IACd,GAAGA,KAGjB,IAAIuL,EAASxK,KAAKspC,kBAChBj3B,EACA,CAAC,CAAE5Q,GAAImC,EAAKqB,KAAMA,IAClBK,GAGF,OADAkF,EAAO,GAAG8Q,MAAQhd,EACXkM,EAAO,GAIhB4R,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAG1C,GAAwB,cAApBrE,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIojB,EAAa9kB,KAAKqX,6BAClB63B,EAAmB,GAEnBC,EAAap6B,EAAM9U,KAAKA,KAAK6kB,YAAYqqB,WACzCA,GACFD,EAAiBxoC,KACf1G,KAAKovC,oBACH/8B,EACA,YACArS,KAAKR,KAAK,6BACV2vC,EAAW5W,KACX4W,EAAWhjC,MAIjB,IAAIkjC,EAAet6B,EAAM9U,KAAKA,KAAK6kB,YAAYwqB,OAC3CC,EAAcx6B,EAAM9U,KAAKA,KAAK6kB,YAAY0qB,MAC9C,GAAID,EAAa,CACf,IAAIE,EAAWF,EAAYtwC,MACvBywC,EAAWH,EAAYpjC,IACvBkjC,IAAcK,GAAYL,EAAapwC,OAC3CiwC,EAAiBxoC,KACf1G,KAAKovC,oBACH/8B,EACA,QACArS,KAAKR,KAAK,wBACViwC,EACAC,IAKN,IAAIC,EAAgB56B,EAAM9U,KAAKA,KAAK6kB,YAAY8qB,QAC5CD,GACFT,EAAiBxoC,KACf1G,KAAKovC,oBACH/8B,EACA,UACArS,KAAKR,KAAK,0BACVmwC,EAAc1wC,MACd0wC,EAAcxjC,MAIhBkjC,GACFH,EAAiBxoC,KACf1G,KAAKovC,oBACH/8B,EACA,SACArS,KAAKR,KAAK,yBACV6vC,EAAapwC,MACbowC,EAAaljC,MAInB2Y,EAAWxb,QAAU4lC,EAErBlvC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACVslB,GAGF,IAAIiJ,EAAQ/tB,KAAKqX,6BAEb8yB,EAAc,GACdC,EAAmB,CAAC,UAAW/3B,EAAS,eAAe1M,KACzD3F,KAAKoF,WAEHilC,EAAoB,CACtB5oC,GAAI,cACJwD,KAAMjF,KAAKR,KAAK,8BAChBiG,aAAc2kC,GAEhBD,EAAYzjC,KAAK2jC,GAEjB,IAAInc,EAAgB,CAAC,UAAW7b,EAAS,YAAY1M,KAAK3F,KAAKoF,WAC3DklC,EAAiB,CACnB7oC,GAAI,WACJwD,KAAMjF,KAAKR,KAAK,4BAChBiG,aAAcyoB,GAIhB,GAFAic,EAAYzjC,KAAK4jC,GAEb1rC,KAAKC,SAASC,IAAI,OAAQ,kBAAmB,CAC/C,IAAIyrC,EAAoB,CAAC,UAAWl4B,EAAS,iBAAiB1M,KAC5D3F,KAAKoF,WAEHolC,EAAqB,CACvB/oC,GAAI,gBACJwD,KAAMjF,KAAKR,KAAK,+BAChBiG,aAAc8kC,GAGhBJ,EAAYzjC,KAAK8jC,GAGnBzc,EAAMzkB,QAAU6gC,EAEhBnqC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAIJ,OAAOnnB,EAGTwoC,oBAAoB/8B,EAAS/M,EAAWuqC,EAAUC,EAASC,GACzD,IAAItuC,EAAKouC,EAASl4B,QAAQ,CAAEC,YAAa,IAAKC,QAAQ,IAElDm4B,EAAkB,CAAE/qC,KAAM4qC,EAAUpqC,aADvB,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACc3D,GAAIA,GAGtE,OAFAuuC,EAAgB10B,MAAQ,GAAGw0B,KAAWC,IAE/BC,EAITpF,kBAAkBv4B,EAAS/M,EAAW2qC,EAAUC,GAAY,GAC1D,IAAItpC,EAAS5G,KAAKspC,kBAChBj3B,EACA49B,EACA3qC,EACA4qC,GAUF,OAPAtpC,EAAOJ,SAASmT,GACd3Z,KAAK+vB,aACHkgB,EAASruC,MAAM+E,GAASA,EAAK1G,KAAKyF,MAAQiU,EAAElY,KAC5CkY,KAIG/S,EAITmpB,aAAappB,EAAMwpC,GACjBA,EAAW70B,MAAQtb,KAAKqwB,iBAAiB1pB,GAI3C0pB,iBAAiB1pB,GACf,IAAIC,EAAS,GACT8gB,EAAW/gB,EAAK1G,KAAKA,KAAKynB,UAAUzoB,MAKxC,OAJIyoB,EAAW,IACb9gB,EAAS8gB,GAGJ9gB,EAIT0iC,kBAAkBj3B,EAAS0mB,EAASr3B,EAAMwuC,GAAY,GACpD,OAAOnX,EAAQx3B,KAAKoY,GAAM3Z,KAAKowC,eAAe/9B,EAASsH,EAAGjY,EAAMwuC,KAIlEE,eAAe/9B,EAAS1L,EAAMjF,EAAMwuC,GAAY,GAC9C,IACIlvC,EADAyE,EAAe,CAAC/D,EAAM2Q,EAAS1L,EAAKlF,IAAIkE,KAAK3F,KAAKoF,WAElDkE,EAAU3C,EAAK1G,MAAMA,MAAMqJ,QAC3BujC,EAAalmC,EAAK1G,MAAMA,MAAM4sC,YAAY5tC,MAC9C,GAAI,CAAC,OAAQ,WAAY,WAAW8E,SAAS8oC,GAC3C7rC,EAAOhB,KAAKkwB,eAAe2c,QACtB,GAAIvjC,IAAY4mC,EAAW,CAChC,IAAIG,EAAc7nC,UAAUc,GAAW,IAAIrK,MAAO,KAAO,EACzD+B,EAAOhB,KAAKkwB,eAAemgB,GAG7B,IAAIzqC,EAAM5F,KAAKiwB,UAAUtpB,GACzB,MAAO,CACL1B,KAAM0B,EAAK1B,KACXQ,aAAcA,EACdhE,GAAIkF,EAAKlF,GACTmE,IAAKA,EACL5E,KAAMA,GAIVkvB,eAAe1lB,GASb,MARY,CACV,EAAG,8DACH,EAAG,8DACH,EAAG,8DACHy6B,KAAM,8DACN7T,SAAU,8DACVvE,QAAS,IAEAriB,GAGbylB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,GC5uCrD,MAAM0pC,4BAA4BlxB,YACvCmxB,gBAAkB,YAElB3wC,cACEG,QAGFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KACjC5S,OAAgB7P,MAAM8G,GACA,GAAlB0b,EAAQtf,QACV9B,MAAM0f,uBAGR,IAQI+wB,EARAlrC,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAGvB,GADiB,CAAC,OAAQ,OAAQ,SAAU,OAAQ,QACrCpd,SAASuB,IAActF,KAAK6gB,eACzC,OAAO7gB,KAAK2gB,aAAatO,EAASgP,GAGhCrhB,KAAKywC,kBAAkB9sC,KACzB6sC,EAAkB5xC,KAAKC,SAASC,IAAI,OAAQ,kBACtCkB,KAAK0wC,gBAAgB1wC,KAAKuwC,kBAGlC,IACE,MAAMI,EAAkB,CAAC,YAAa,WAAY,OAClD,GAAgB,UAAZt+B,EAAqB,CACvB,MAAM6B,EAAa1B,OAAOjG,OAAO2H,WAAWzP,QAAQiO,GAClDi+B,EAAgB5sC,SAAS2O,EAAEqC,OAAO9U,KAAKyB,QAEzC,IAAK,IAAI6Q,KAAS2B,EAAY,CAC5B,IAAI8f,EAAUzhB,EAAMtS,KAAKyF,UACnB1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,eAGhDrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAEtD,MAAO7b,GACP,MAAMA,UAEFxF,KAAKywC,kBAAkB9sC,IACrB6sC,SACIxwC,KAAK0wC,gBAAgBF,IAMnCvc,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,IACIuc,EADA7oB,EAAQhV,MAAMue,SAASjM,GAEvB0C,IAAO6oB,EAAW7oB,EAAM9U,KAAKyB,MAYjC,IAVoB,CAClB,UACA,QACA,OACA,QACA,OACA,UACA,SACA,UAEiBqC,SAASuB,GAC1B,OAAQs4B,GACN,IAAK,YACG59B,KAAK4wC,wBACTtrC,EACA3B,EACA0O,EACA0C,EACAsM,GAEF,MACF,IAAK,YACL,IAAK,iBACGrhB,KAAK6wC,yBACTvrC,EACA3B,EACA0O,EACA0C,EACAsM,GAMR,OAAQ/b,GACN,IAAK,UACHtF,KAAK8wC,aAAantC,EAAOoR,EAAOsM,GAChC,MACF,IAAK,cACGrhB,KAAK+wC,WAAWptC,EAAOoR,EAAOsM,GACpC,MACF,IAAK,SACL,IAAK,OACL,IAAK,OACHrhB,KAAKgxC,UAAUrtC,EAAOoR,EAAOsM,GAC7B,MACF,IAAK,cACGrhB,KAAKixC,WAAWttC,EAAO0O,EAAS0C,EAAOsM,GAC7C,MACF,IAAK,UACHrhB,KAAKkxC,qBAAqBvtC,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACGrhB,KAAKmxC,oBAAoBxtC,EAAO0O,EAASgP,GAC/C,MACF,IAAK,SACHrhB,KAAKoxC,gBAAgBztC,EAAO0O,EAAS0C,EAAOsM,IAMlDovB,kBAAkB9sC,GAChB,OACE3D,KAAKsgB,OAAO3c,MACV3D,KAAKogB,aAAazc,IAAU3D,KAAKwgB,MAAM7c,IAAU3D,KAAK0gB,QAAQ/c,IAKpEktC,+BAA+BvrC,EAAW3B,EAAO0O,EAAS0C,EAAOsM,GAC/D,OAAQ/b,GACN,IAAK,OACHtF,KAAKqxC,cAAc1tC,EAAOoR,EAAOsM,GACjC,MACF,IAAK,YACHrhB,KAAKsxC,mBAAmB3tC,EAAOoR,EAAOsM,GACtC,MACF,IAAK,kBACGrhB,KAAKuxC,iBAAiB5tC,EAAOoR,EAAOsM,GAC1C,MACF,IAAK,kBACGrhB,KAAKwxC,iBACT7tC,EACAoR,EACA,aACA,OACAsM,GAEF,MACF,IAAK,SACL,IAAK,UACL,IAAK,cACGrhB,KAAKyxC,iBAAiB9tC,EAAOoR,EAAOzP,GAC1C,MACF,IAAK,iBACHtF,KAAK0xC,oBAAoB/tC,EAAOoR,IAMtC67B,8BAA8BtrC,EAAW3B,EAAO0O,EAAS0C,EAAOsM,GAC9D,OAAQ/b,GACN,IAAK,OACHtF,KAAK2xC,aAAahuC,EAAOoR,EAAOsM,GAChC,MACF,IAAK,YACHrhB,KAAK4xC,eAAejuC,EAAO0O,EAAS0C,EAAOsM,GAC3C,MACF,IAAK,kBACGrhB,KAAK6xC,kBAAkBluC,EAAO0O,EAAS0C,EAAOsM,IAM1D0vB,WAAWptC,EAAOoR,EAAOsM,GACvB,IAAI6D,EAAQnQ,EAAM9U,KAAKA,KAAKglB,OAAO5D,GAEnC,GAAK6D,GAAUA,EAAMO,KAEd,CACL,IAAIqsB,EAAe,GAAG5sB,EAAMyZ,gBAC5B,MAAM7+B,EAAUiV,EAAMg9B,eAAe,CACnC,MACA,cACAD,EACA7iB,OAAO+a,KAAK/kB,OAAO5D,IAAaA,IAElC6D,EAAMO,KAAK,CAAE9hB,MAAAA,EAAO7D,QAAAA,SATpBiV,EAAM8f,UAAUlxB,EAAO0d,GAc3ByvB,aAAantC,EAAOoR,EAAOsM,GACzBtM,EAAM2f,YAAY/wB,EAAO0d,GAI3BiwB,mBAAmB3tC,EAAOoR,EAAOsM,GAC/B,IAAIwD,EAAY9P,EAAM9U,KAAKA,KAAK6kB,WAAWzD,GAC3C,GAAKwD,EAEE,CACL,MAAM/kB,EAAUiV,EAAMg9B,eAAe,CAAC,MAAOltB,IAC7CA,EAAUY,KAAK,CAAE9hB,MAAAA,EAAO7D,QAAAA,SAHxBiV,EAAMi9B,cAAcruC,EAAO0d,GAQ/BwwB,wBAAwBluC,EAAO0O,EAAS0C,EAAOsM,GAC5B,eAAbA,QACItM,EAAMsgB,eAAe,CAAEC,kBAAkB,IAC5CvgB,EAAMi9B,cAAcruC,EAAO0d,GAIlCgwB,cAAc1tC,EAAOoR,EAAOsM,GAC1B,IAAIsV,EAAO5hB,EAAM9U,KAAKA,KAAK4gC,MAAMxf,GACjC,GAAKsV,EAEE,CACL,MAAM72B,EAAUiV,EAAMg9B,eAAe,CAAC,MAAO,eAAgBpb,IAC7DA,EAAKlR,KAAK,CAAE9hB,MAAAA,EAAO7D,QAAAA,SAHnBiV,EAAMk9B,SAAStuC,EAAO0d,GAO1BkwB,uBAAuB5tC,EAAOoR,EAAOsM,GACnC,IAQIpiB,EAAOkN,EAsBPiB,EA9BAolB,EAAcsM,mBAAmBzd,GAAUD,MAAM,KAEjD8wB,EAAc1f,EAAY,GAC1B2f,EAAO3f,EAAY,GACnBe,EAASf,EAAY,GAErB+P,EAAYxtB,EAAMsJ,MAAMvf,IAAIozC,GAGhC,GAAa,UAATC,EACFlzC,EAAQ8V,EAAM9U,KAAKA,KAAKsuC,UAAUhL,MAAMtkC,MACxCkN,EAAM4I,EAAM9U,KAAKA,KAAKsuC,UAAUhL,MAAMp3B,QACjC,CACL,IAAIof,EAAQgX,EAAUtiC,KAAKA,KAAKsrB,MAChCtsB,EAAQssB,EAAM4mB,GAAMlzC,MACpBkN,EAAMof,EAAM4mB,GAAMhmC,IAGpB,OAAQonB,GACN,IAAK,eACH,GAAIt0B,GAASkN,EAAK,MAElBlN,IACA,MACF,IAAK,eACH,GAAIA,GAAS,EAAG,MAEhBA,IAIS,UAATkzC,EACFp9B,EAAM3H,OAAO,CAAE,6BAA8BnO,KAE7CmO,EAAS,CACP,CAAE1H,IAAK68B,EAAU9gC,GAAIxB,KAAM,CAAEsrB,MAAO,CAAE4mB,CAACA,GAAO,CAAElzC,MAAOA,aAEnDmzC,KAAKC,gBAAgBjlC,EAAQ,CAAE23B,OAAQhwB,KAG/C7S,MAAMyF,QAAQ,6BAIhBgqC,aAAahuC,EAAOoR,EAAOsM,GACzBtM,EAAM9U,KAAKA,KAAK4gC,MAAMxf,GAAUoE,KAAK,CAAE9hB,MAAAA,IAGzC+sC,sBAAsB4B,SACd1zC,KAAKC,SAAS2c,IAAI,OAAQ,WAAY82B,GAI9ClB,gBAAgBztC,EAAO0O,EAAS0C,EAAOsM,GACrC,IAAImR,EAAcsM,mBAAmBzd,GAAUD,MAAM,KAEjDmxB,EAAa/f,EAAY,GACzBggB,EAAahgB,EAAY,GAE7B,GAAIxyB,KAAK6gB,eAAgB,CACvB,IAAIla,EAAOoO,EAAMsJ,MAAMzc,MACpB+X,GAKU,IAJT44B,EACGnoB,cACAC,cAAc1Q,EAAE1U,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,WAGrB,GAAI3jB,EAAM,OAAO3G,KAAK2gB,aAAatO,EAAS1L,EAAK1G,KAAKwB,IAGxD,IAII3B,EAJA4sC,EAAS33B,EAAM9U,KAAKA,KAAKqJ,QAC1B7E,QAAQ4G,GAAiB,WAAXA,EAAE3J,OAChBE,MAAM6E,GAAMA,EAAExB,OAASstC,IAG1B,OAAQC,GACN,IAAK,SACH1yC,EAAUiV,EAAMg9B,eAAe,CAAC,MAAO,gBACvCrF,EAAO/S,OAAO,CAAEh2B,MAAAA,EAAO7D,QAAAA,IACvB,MACF,IAAK,WACHA,EAAUiV,EAAMg9B,eAAe,CAAC,MAAO,gBACvCrF,EAAO+F,SAAS,CAAE9uC,MAAAA,EAAO7D,QAAAA,IACzB,MACF,QACEA,EAAUiV,EAAMg9B,eAAe,CAAC,MAAO,gBACvCrF,EAAOZ,SAAS0G,IAAa/sB,KAAK,CAAE9hB,MAAAA,EAAO7D,QAAAA,IAC3CE,KAAK0yC,aAAa39B,EAAO23B,IAM/BgG,aAAa39B,EAAO23B,GAClB,IAAKA,EAAOC,eAAgB,OAE5B,MAAMgG,EAAO59B,EAAMsJ,MAAMvf,IAAI4tC,EAAOC,gBAEhCgG,EAAKjrB,SAAW,EAClBkrB,GAAGC,cAAcn0C,MACfE,KAAKY,KAAKE,SAAS,oCAKvBizC,EAAKjiB,UAIPkhB,eAAejuC,EAAO0O,EAAS0C,EAAOsM,GACpC,IAAImR,EAAcsM,mBAAmBzd,GAAUD,MAAM,KAEjD0xB,EAAWtgB,EAAY,GACvBggB,EAAahgB,EAAY,GAE7B,GAAiB,SAAbsgB,EAAqB,CACvB,IAAInsC,EAAOoO,EAAMsJ,MAAMzc,MACpB+X,GAKU,IAJT64B,EACGpoB,cACAC,cAAc1Q,EAAE1U,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,WAIrB,OAAItqB,KAAK6gB,eAAuB7gB,KAAK2gB,aAAatO,EAAS1L,EAAKlF,SAEhEkF,EAAKosC,SAIP,GAAI/yC,KAAK6gB,eAAgB,OAAO7gB,KAAK2gB,aAAatO,EAASygC,GAE3D,IAAIpG,EAAS33B,EAAMsJ,MAAMvf,IAAIg0C,GAE7B,OAAQN,GACN,IAAK,SACH9F,EAAOsG,cAAcrvC,GACrB,MACF,IAAK,WACH+oC,EAAOsG,cAAcrvC,GAAO,GAC5B,MACF,IAAK,IACH+oC,EAAOuG,cAActvC,GACrB,MACF,IAAK,IACH+oC,EAAOuG,cAActvC,EAAO,GAC5B,MACF,IAAK,IACH+oC,EAAOuG,cAActvC,EAAO,IAMlCqtC,UAAUrtC,EAAOoR,EAAOsM,GACXtM,EAAMsJ,MAAMvf,IAAIuiB,GAEtB0xB,SAIPrB,oBAAoB/tC,EAAOoR,GACzB,MAAMjV,EAAUiV,EAAMg9B,eAAe,CAAC,MAAO,WAC7Ch9B,EAAM9U,KAAKA,KAAK0nC,OAAOliB,KAAK9hB,EAAO7D,GAIrCmxC,iBAAiBttC,EAAO0O,EAAS0C,EAAOsM,GACtC,IAAImR,EAAcsM,mBAAmBzd,GAAUD,MAAM,KAEjD8wB,EAAc1f,EAAY,GAC1BrI,EAAQqI,EAAY,GACpB0gB,EAAU1gB,EAAY,GAG1B,GAFaA,EAAY,KAAM,EAI7B,kBADMxyB,KAAKmzC,aAAap+B,EAAOm9B,EAAa/nB,EAAO+oB,GAIrD,IAAIE,EAAYvsC,IAAa,kBAC7B,GAAI7G,KAAK6gB,gBAAkBuyB,EACzB,OAAOpzC,KAAK2gB,aAAatO,EAAS6gC,GAEpC,IAAIrnB,EAAQ9W,EAAMsJ,MAAMvf,IAAIo0C,GAExBE,EACFpzC,KAAKqzC,qBAAqBt+B,EAAO8W,EAAO1B,GAIzBnqB,KAAKmgB,WAGhB0L,EAAM5rB,KAAKA,KAAK05B,OAAO16B,MAAO4sB,EAAMynB,gBAAgB3vC,GAC/C3D,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAAS6gC,GACZ,WAApCrnB,EAAM5rB,KAAKA,KAAK4uC,UAAU5vC,MACjC4sB,EAAM0nB,gBAAgB5vC,GAEtB3D,KAAKqzC,qBAAqBt+B,EAAO8W,EAAO1B,GAGF,WAApC0B,EAAM5rB,KAAKA,KAAK4uC,UAAU5vC,MAC5B4sB,EAAM0nB,gBAAgB5vC,GACbkoB,EAAM5rB,KAAKA,KAAK05B,OAAO16B,MAChC4sB,EAAMynB,gBAAgB3vC,GAEtB3D,KAAKqzC,qBAAqBt+B,EAAO8W,EAAO1B,GAK9CgpB,mBAAmBp+B,EAAOm9B,EAAa/nB,EAAO+oB,GAC5C,IAAI3Q,EAAYxtB,EAAMsJ,MAAMvf,IAAIozC,GAC5BsB,EAAYn9B,OAAO7R,QACrB+9B,EAAUtiC,KAAKA,KAAKsrB,MAAM,OAAOpB,KAAS8G,UAC1CrvB,MACC6E,GAAMA,EAAE,GAAGhF,KAAOyxC,KAA8B,IAAlBzsC,EAAE,GAAGmnC,WAAuBnnC,EAAE,GAAGmnC,YAChE,GAEF,IAAmB,IAAf4F,EAAkB,OAEtB,MACM1zC,EAAU,CACd4F,IAAKwsC,GAEPpyC,EAJY,kBAAkBqqB,cAAkBqpB,KAIjC,CACb5F,UAAU,GAGZ,IAAI6F,EAAU,CAAC3zC,SAETsyC,KAAKC,gBAAgBoB,EAAS,CAAE1O,OAAQhwB,IAC9C7S,MAAMyF,QAAQ,6BAGhB0rC,2BAA2Bt+B,EAAOpO,EAAMs1B,GACtC,IAAIh8B,EAAO0G,EAAK+sC,iBAAYh2B,EAAW,CAAEi2B,SAAU1X,IAC/C1pB,EAAQC,OAAOjG,OAAOkG,WAAW7Q,MAAM8C,GAAMA,EAAEqQ,OAAOtT,KAAOsT,EAAMtT,KACnEmyC,EAAYprC,SAASyzB,GACrBt1B,EAAK1G,KAAKA,KAAKkqB,MAAMlrB,MAAQ20C,IAC/B3zC,EAAKk2B,WAAWzvB,KACd,iBAAgBktC,EAAYjtC,EAAK1G,KAAKA,KAAKkqB,MAAMlrB,QAE9C0H,EAAK1G,KAAK8iC,eAAe,oBAC5Bp8B,EAAK1G,KAAK4zC,eAAiB,IAC7BltC,EAAK1G,KAAK4zC,eAAeF,SAAWC,EACpC3zC,EAAK0zC,SAAWC,GAGlB,MAAM/yC,EAAW,+BAA+B8F,EAAK1G,KAAKyB,iBACpD88B,EAAe,CACnBzpB,MAAOA,EACP1C,QAASE,EAAQ,GAAGA,EAAMgB,MAAM9R,MAAM8Q,EAAM9Q,KAAO,KACnDkF,KAAMA,EACN1G,KAAMA,GAIF6zC,EAAW,CACfjvC,KAAMjG,KAAKiG,KAAKpD,GAChBsyC,QAAS,CACPh/B,MAAOA,EAAMtT,GACb8Q,MAAOwC,EAAMi/B,kBAAkB,IAAIvyC,IAErCqQ,MAAO,CACL+G,KAAM,CACJo7B,WAAW,GAEbC,KAAM,CACJC,OAAQ,CAAEC,KAAMztC,EAAKytC,KAAM1yC,KAAMiF,EAAKjF,QAG1CA,KAAM2yC,MAAMC,mBAAmBC,OAI3BjC,EAAW1zC,KAAKC,SAASC,IAAI,OAAQ,YAW3C,MAVI,CAAC,SAAU,aAAaiF,SAASuuC,KACnCwB,EAASU,QAAUC,YAAYC,qBAAqB,MAAMnzC,KACvDozC,GAAMA,EAAElzC,MAEI,cAAb6wC,IAA0BwB,EAASc,OAAQ,GAG/Cd,EAASpzC,cAAgBm0C,eAAeh0C,EAAU29B,GAG3CiW,YAAYK,OAAOhB,EAAU,CAAEiB,aAAa,IAGrD7D,qBAAqBvtC,EAAO0O,EAASgP,GACvBthB,MAAMue,SAASjM,GAC3B,IAAIE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,cACHrhB,KAAKg1C,kBAAkB,oBACvB,MACF,IAAK,WACHh1C,KAAKg1C,kBAAkB,oBACvB,MACF,IAAK,gBACHh1C,KAAKg1C,kBAAkB,oBACvB,MACF,IAAK,eACHziC,EAAMgP,eACNrf,MAAMyF,QAAQ,6BACd,MACF,IAAK,mBACH4K,EAAM+O,oBAKZ0zB,wBAAwBvzC,GACX7C,KAAK2F,MAAMzF,IAAI,oBACrBm2C,YAAYxzC,GAAIugB,MAAMxc,GAAMA,EAAEyc,YAGrCuvB,uBAAuB7tC,EAAOoR,EAAOmgC,EAAUC,EAAW9zB,GACxD,IAAIpiB,EAAQ8V,EAAM9U,KAAKA,KAAK6kB,WAAWowB,GAAUC,GAC7ChpC,EAAM4I,EAAM9U,KAAKA,KAAK6kB,WAAWowB,GAAe,IAEpD,GAAIl1C,KAAKmgB,WAAY,CACnB,GAAIlhB,GAAS,EAAG,OAChBA,QACK,CACL,GAAIA,GAASkN,EAAK,OAClBlN,IAGF,IAAImO,EAAS,CACX,CACE1H,IAAKqP,EAAMtT,GACXxB,KAAM,CAAE6kB,WAAY,CAAEowB,CAACA,GAAW,CAAEC,CAACA,GAAYl2C,aAI/Cm2C,MAAM/C,gBAAgBjlC,GAC5BlL,MAAMyF,QAAQ,6BAGhB8pC,uBAAuB9tC,EAAOoR,EAAOmgC,GACnC,IAAI/oC,EAAM4I,EAAM9U,KAAKA,KAAK6kB,WAAWowB,GAAe,IAEhDl1C,KAAKmgB,iBACDpL,EAAMsgC,kBAAkBH,SAExBngC,EAAMugC,kBAAkBJ,EAAU,CAAE/oC,IAAKA,IAGjDjK,MAAMyF,QAAQ,6BAGhBwpC,0BAA0BxtC,EAAO0O,EAASgP,GACxC,MAAMtM,EAAQhV,MAAMue,SAASjM,GAEvBkjC,EAAQl0B,EAASD,MAAM,KAE7B,GAAsB,IAAlBm0B,GAAO1zC,OAAc,OAEzB,MAAM2zC,EAAWD,EAAM,GACjBE,EAAaF,EAAM,SAEnBxgC,EAAM2gC,iBAAiBF,EAAUC,IC/kBpC,MAAME,0BAA0B9yB,cACrCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,aAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,oBAIb5B,mBAAmB3kB,EAASJ,IC7BvB,SAASwkB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,uBAAwB,CAClD6C,KAAMrG,KAAKY,KAAKE,SACd,0DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,0DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,0BAA2B,CACrD6C,KAAMrG,KAAKY,KAAKE,SACd,6DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,6DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,yBAA0B,CACpD6C,KAAMrG,KAAKY,KAAKE,SACd,4DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,4DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,iBAAkB,CAC5C6C,KAAMrG,KAAKY,KAAKE,SACd,oDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,oDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,mBAAoB,CAC9C6C,KAAMrG,KAAKY,KAAKE,SACd,sDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,sDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MD/CjB+/B,CAAkB5/B,EAASJ,IE3BxB,MAAM42C,2BAA2Bj5B,cACtC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAI4E,EAAa/Y,KAAKud,4BAEtB,IAAKhL,EAAO,OAAOwG,EAEnB,IAAI1G,EAAUE,EAAMtS,KAAKyF,IAEzBqT,EAAW1G,QAAUA,EAErB,IAAI0C,EAAQxC,EAAMwC,MAElB,OAAKA,GAELgE,EAAWvE,QAAUO,EAAMtT,GAEH,aAApBsT,EAAM9U,KAAKyB,MACb1B,KAAK61C,mBAAmBtjC,EAAOwG,GAC/B/Y,KAAKmmB,qBAAqB5T,EAAOwG,GACjC/Y,KAAK81C,oBAAoBvjC,EAAOwG,GAChC/Y,KAAK+1C,oBAAoBxjC,EAAOwC,EAAOgE,GACvC/Y,KAAKsmB,wBAAwB/T,EAAOwG,GACpC/Y,KAAKg2C,oBAAoBzjC,EAAOwG,KAEhC/Y,KAAKi2C,oBAAoB1jC,EAAOwC,EAAOgE,SACjC/Y,KAAKk2C,gBAAgB3jC,EAAOwC,EAAOgE,GACzC/Y,KAAKm2C,YAAY5jC,EAAOwC,EAAOgE,IAGjCvK,OAAgB7P,MAAM,oBAAqBoa,GAEvClS,IAAa,kBAAiBkS,EAAWzG,SAAWC,EAAMtS,MAAMgF,MAE7D8T,GArBYA,EAwBrB88B,mBAAmBtjC,EAAOwG,GACxB,IAAIk3B,EAAW19B,EAAMwC,MAAM9U,KAAKoe,MAChC,IAAIhM,EAAUE,EAAMtS,KAAKyF,IAEzB,IAAI0wC,EAAoBp2C,KAAKR,KAAK,4BAC9B62C,EAAiB,OACrB,IAAIC,EAAgBt2C,KAAKoZ,wBAAwB,aAEjDk9B,EAAgBt2C,KAAKu2C,sBACnBv2C,KAAKR,KAAK,0BACV,SACA62C,EACApG,EACA59B,EACAikC,GAEFA,EAAgBt2C,KAAKu2C,sBACnBv2C,KAAKR,KAAK,8BACV,aACA62C,EACApG,EACA59B,EACAikC,GAGFt2C,KAAKqZ,yBAAyBN,EAAYq9B,EAAmBE,GAG/DR,oBAAoBvjC,EAAOwG,GACzB,IAAIk3B,EAAW19B,EAAMwC,MAAM9U,KAAKoe,MAAM5Z,QAAQkC,GAAsB,QAAbA,EAAKjF,OAC5D,IAAI2Q,EAAUE,EAAMtS,KAAKyF,IAEzB,IAAI0wC,EAAoBp2C,KAAKR,KAAK,2BAC9B62C,EAAiB,OACrB,IAAIC,EAAgBt2C,KAAKoZ,wBAAwBg9B,GA2CjD,GAzCAp2C,KAAKw2C,4BACHx2C,KAAKR,KAAK,sBACV,OACA62C,EACApG,EACA59B,EACAikC,GAEFt2C,KAAKw2C,4BACHx2C,KAAKR,KAAK,sBACV,OACA62C,EACApG,EACA59B,EACAikC,GAEFt2C,KAAKw2C,4BACHx2C,KAAKR,KAAK,sBACV,OACA62C,EACApG,EACA59B,EACAikC,GAEFt2C,KAAKw2C,4BACHx2C,KAAKR,KAAK,sBACV,OACA62C,EACApG,EACA59B,EACAikC,GAEFt2C,KAAKw2C,4BACHx2C,KAAKR,KAAK,0BACV,OACA62C,EACApG,EACA59B,EACAikC,GAGEzvC,IAAa,iBAAkB,CACjC,MAAM4vC,EAAYxG,EAASxrC,QACxBkV,IACE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQ5V,SAAS4V,EAAE1Z,KAAK4sC,cAE9D7sC,KAAK02C,0BACH12C,KAAKR,KAAK,uBACV62C,EACAI,EACApkC,EACAikC,GAIJt2C,KAAKqZ,yBAAyBN,EAAYq9B,EAAmBE,GAG/DnwB,qBAAqB5T,EAAOwG,GAC1B,IAAIk3B,EAAW19B,EAAMwC,MAAM9U,KAAKoe,MAAM5Z,QACnCkC,GAAsB,SAAbA,EAAKjF,OAEjB,IAAI2Q,EAAUE,EAAMtS,KAAKyF,IAEzB,IAAI4B,EAAetH,KAAKR,KAAK,4BAE7B,IAAI2J,EAAWnJ,KAAKoZ,wBAAwB9R,GAI5C,IAAK,IAAI6iB,EAAQ,EAAGA,EAFL,EAEuBA,IACpChhB,EAAWnJ,KAAK22C,uBACd,GAAG32C,KAAKR,KAAK,2BAA6B2qB,EAC1CA,EARY,QAUZ8lB,EACA59B,EACAlJ,GAIJnJ,KAAKqZ,yBAAyBN,EAAYzR,EAAc6B,GAI1D4sC,oBAAoBxjC,EAAOwC,EAAOgE,GAChC,IAAKhE,EAAM9U,KAAKA,KAAKglB,OAAQ,OAAOlM,EAEpC,IAAI5P,EAAWnJ,KAAKoZ,wBAAwB,UACxC9T,EAAY,QAEhB,MAAM2jC,EAAc5yB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKglB,QAC7C2xB,EAAa3nB,OAAO4nB,MAAM5xB,OAEhC,IAAIsI,EAAgB0b,EACjB1nC,KAAKkF,IACJ,IAEIxB,EAFArB,EAAM6C,EAAE,GACRxG,EAAOwG,EAAE,GAET7C,EAAIgnB,WAAW,QACjB3lB,EAAO2xC,EAAgB,IACjB32C,EAAK62C,UAAS7xC,GAAQ,KAAKhF,EAAK62C,aAEtC7xC,EAAO2xC,EAAWhzC,GAGpB,IAAI6B,EAAe,CAACH,EAAWiN,EAAMtS,KAAKyF,IAAK9B,GAAK+B,KAClD3F,KAAKoF,WAGP,MAAO,CAAEH,KAAMA,EAAMxD,GAAImC,EAAK6B,aAAcA,EAAczE,KAD/ChB,KAAK+2C,mBAAmB92C,EAAKhB,WAGzCmM,MAAK,CAACC,EAAGC,IACDD,EAAEpG,KACNmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,WAIjBqD,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgCrO,EAAUykB,EAAaD,GAC5D3tB,KAAKqZ,yBAAyBN,EAAY6U,EAAazkB,GAIzDmd,wBAAwB/T,EAAOwG,GAC7B,IAAI5P,EAAWnJ,KAAKoZ,wBAAwB,aACxC9T,EAAY,UAEZ0xC,EAAmB3gC,OAAO7R,QAAQyqB,OAAO4nB,MAAMnwB,WAAWnlB,KAAKiE,IACjE,IAAIP,EAAOO,EAAE,GACTC,EAAe,CAACH,EAAWiN,EAAMtS,KAAKyF,IAAKF,EAAE,IAAIG,KAAK3F,KAAKoF,WAC/D,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3C62B,EAAoBt8B,KAAKqX,6BAC7BilB,EAAkBhzB,QAAU0tC,EAE5B,IAAI5vB,EAAiBpnB,KAAKR,KAAK,4BAC/BQ,KAAKwX,gCACHrO,EACAie,EACAkV,GAEFt8B,KAAKqZ,yBAAyBN,EAAYqO,EAAgBje,GAI5D6sC,oBAAoBzjC,EAAOwG,GACzB,IAAI5P,EAAWnJ,KAAKoZ,wBAAwB,SACxC9T,EAAY,OAEZ2xC,EAAc5gC,OAAO7R,QAAQyqB,OAAO4nB,MAAMhW,OAAOt/B,KAAKiE,IACxD,IAAIP,EAAOO,EAAE,GACTC,EAAe,CAACH,EAAWiN,EAAMtS,KAAKyF,IAAKF,EAAE,IAAIG,KAAK3F,KAAKoF,WAC/D,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3C6+B,EAAgBtkC,KAAKqX,6BACzBitB,EAAch7B,QAAU2tC,EAExB,IAAItwB,EAAa3mB,KAAKR,KAAK,wBAC3BQ,KAAKwX,gCAAgCrO,EAAUwd,EAAY2d,GAC3DtkC,KAAKqZ,yBAAyBN,EAAY4N,EAAYxd,GAGxDqtC,4BACEU,EACArK,EACAvnC,EACA2qC,EACA59B,EACAlJ,GAEA,IAAIguC,EAAcn3C,KAAKqX,6BAEnB+/B,EAAcnH,EAASxrC,QACxBkC,GAASA,EAAK1G,KAAKA,KAAK4sC,YAAcA,IAYzC,OAVAsK,EAAY7tC,QAAU8tC,EAAY71C,KAAKoF,GACrC3G,KAAKq3C,iBAAiBhlC,EAAS/M,EAAWqB,KAG5C3G,KAAKwX,gCACHrO,EACA+tC,EACAC,GAGKhuC,EAGTutC,0BACEQ,EACA5xC,EACA2qC,EACA59B,EACAlJ,GAEA,IAAIguC,EAAcn3C,KAAKqX,6BAYvB,OAVA8/B,EAAY7tC,QAAU2mC,EAAS1uC,KAAKoF,GAClC3G,KAAKq3C,iBAAiBhlC,EAAS/M,EAAWqB,KAG5C3G,KAAKwX,gCACHrO,EACA+tC,EACAC,GAGKhuC,EAGTotC,sBACEW,EACAx1C,EACA4D,EACA2qC,EACA59B,EACAlJ,GAEA,IAAIguC,EAAcn3C,KAAKqX,6BAEnB+/B,EAAcnH,EAASxrC,QAAQkC,GAASA,EAAKjF,MAAQA,IAWzD,OAVAy1C,EAAY7tC,QAAU8tC,EAAY71C,KAAKoF,GACrC3G,KAAKq3C,iBAAiBhlC,EAAS/M,EAAWqB,KAG5C3G,KAAKwX,gCACHrO,EACA+tC,EACAC,GAGKhuC,EAGTwtC,uBACEO,EACA/sB,EACA7kB,EACA2qC,EACA59B,EACAlJ,GAEA,IAAIguC,EAAcn3C,KAAKqX,6BAEnB+/B,EAAcnH,EAASxrC,QAAQkC,GAASA,EAAK1G,KAAKA,KAAKkqB,QAAUA,IAarE,OAZAgtB,EAAY7tC,QAAU8tC,EAAY71C,KAAKoF,IACrC,IAAI6D,EAASxK,KAAKq3C,iBAAiBhlC,EAAS/M,EAAWqB,GAEvD,OADIE,IAAa,kBAAkB7G,KAAK+rB,cAAcplB,EAAM6D,GACrDA,KAGTxK,KAAKwX,gCACHrO,EACA+tC,EACAC,GAGKhuC,EAIT4iB,cAActlB,EAAGolB,GACf,IAAI5rB,EAAOwG,EAAExG,KAQb,GANIA,GAAMq3C,KAAIzrB,EAAMnQ,OAAS,MAEzBzb,GAAMs3C,cAAa1rB,EAAMnQ,OAAS,KAElCzb,GAAMssB,gBAAeV,EAAMnQ,OAAS,KAEpCzb,GAAM02B,MAAMj1B,KAAM,CACpB,IAAIA,EAAOzB,EAAK02B,KAAKj1B,KACrBmqB,EAAMlQ,OAASja,GAAM0qB,OAAO,GAAGhC,cAAgB1oB,GAAM+rB,MAAM,IAI/D4pB,iBAAiBhlC,EAAS/M,EAAWqB,GACnC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKlF,IAAIkE,KAAK3F,KAAKoF,WACvDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,KAAKA,KAAKypB,YAAYhoB,MACtDkF,EAAS,CACX3B,KAAM0B,EAAK1B,KACXxD,GAAIkF,EAAKlF,GACTgE,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GASR,OANA4F,EAAO0U,MAAQtb,KAAKqwB,iBAAiB1pB,GAErCC,EAAO8U,MAAQ1b,KAAKw3C,oBAAoB7wC,GAExCC,EAAO+U,MAAQ3b,KAAKy3C,iBAAiB9wC,GAE9BC,EAITypB,iBAAiB1pB,GACf,IAAIC,EAAS,GAKb,OAJID,EAAK1G,KAAKA,KAAKynB,SAAW,IAC5B9gB,EAASD,EAAK1G,KAAKA,KAAKynB,UAGnB9gB,EAIT4wC,oBAAoB7wC,GAClB,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKA,KAAKuwB,KAC1B,GAAIA,GAAMrkB,KAAOqkB,GAAMvxB,MAMrB,OALA2H,EAAS4pB,EAAKvxB,OAAS,GAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAEdvF,EAGT,IAAI8wC,EAAQ/wC,EAAK1G,KAAKy3C,MACtB,OAAIA,GAAOz4C,OACT2H,EAAS8wC,EAAMz4C,OAAS,GAEpBy4C,EAAMz4C,MAAQ,IAChB2H,GAAU,IAAI8wC,EAAMC,OAEf/wC,GAGFA,EAIT6wC,iBAAiB9wC,GACf,IAAIC,EAAS,GAETgxC,EAAWjxC,EAAK1G,KAAKA,KAAK23C,SAC9B,OAAKA,GAELhxC,EAASgxC,EAAS34C,OAAS,GACrB24C,EAASzrC,MAAKvF,GAAU,IAAIgxC,EAASzrC,OAEpCvF,GALeA,EAQxBqpB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAG1DmwC,mBAAmB5sB,GAKjB,MAJc,CACZ,EAAG,gCAGQA,GAGf+F,eAAe1lB,GAab,MAZa,CAEX4wB,KAAM,qCACN8J,MAAO,8BACPC,KAAM,gCACNrT,MAAO,gCACPV,SAAU,kCACVC,QAAS,8BACThN,IAAK,yCACLkN,KAAM,wCACNC,IAAK,wCAEKhnB,GAIdyrC,oBAAoB1jC,EAAOwC,EAAOgE,GAChC,MAAM8+B,EAAW,iBACXzgB,EAAUriB,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAMA,EAAEjY,OAASm2C,IAC1D,GAAuB,IAAnBzgB,EAAQv1B,OAAc,OAE1B,MAAMsH,EAAWnJ,KAAKoZ,wBAAwBy+B,GAExCC,EAAiB1gB,EAAQhxB,QAAO,CAAC2xC,EAAS/vB,KAC9C,MAAMgwB,EAAYhwB,EAAE/nB,KAAKA,KAAKg4C,MAAMC,IAKpC,OAJKH,EAAQhV,eAAeiV,KAAYD,EAAQC,GAAa,IAE7DD,EAAQC,GAAWtxC,KAAKshB,GAEjB+vB,IACN,IAEGzyC,EAAY,OACJ,CAAC,UAAW,YAAa,OAAQ,MAAO,UAChDkB,SAASyxC,IACb,MAAME,EAAeL,EAAeG,GACpC,IAAKE,EAAc,OAEnB,MAAM/gC,EAAcpX,KAAKqX,2BAA2B4gC,GAEpDE,EAAa3xC,SAAS6E,IACpB,MAEMb,EAAS,CACbvF,KAHiBoG,EAAEpG,KAInBQ,aAHmB,CAACH,EAAWiN,EAAM9Q,GAAI4J,EAAE5J,IAAIkE,KAAK3F,KAAKoF,WAIzD3D,GAAI4J,EAAE5J,GACNmE,IAAK5F,KAAKiwB,UAAU5kB,IAEtBb,EAAO8Q,MAAQjQ,EAAEpL,KAAKA,KAAKm4C,KAAO,GAElChhC,EAAY9N,QAAQ5C,KAAK8D,MAG3B,MAAM6tC,EAAeJ,EAAM7rB,OAAO,GAAGhC,cAAgB6tB,EAAMxqB,MAAM,GAC3D6qB,EAAUt4C,KAAKR,KACnB,kCAAoC64C,GAEtCr4C,KAAKwX,gCAAgCrO,EAAUmvC,EAASlhC,MAG1D,IAAI9P,EAAetH,KAAKR,KAAK,0BAC7BQ,KAAKqZ,yBAAyBN,EAAYzR,EAAc6B,GAI1D+sC,sBAAsB3jC,EAAOwC,EAAOgE,GAClC,IAAKhE,EAAMwjC,kBAAmB,OAE9B,MAAMjzC,EAAY,aACZ6D,EAAWnJ,KAAKoZ,wBAAwB9T,GAKxCkzC,SAJgB55C,KAAK2F,MACxBzF,IAAI,0BACJ25C,gBAE4BryC,QAAO,CAAC2xC,EAAS1sC,KAC9C,MAAMqtC,EAAOrtC,EAAEpL,KAAKA,KAAKy4C,KAKzB,OAJKX,EAAQhV,eAAe2V,KAAOX,EAAQW,GAAQ,IAEnDX,EAAQW,GAAMhyC,KAAK2E,GAEZ0sC,IACN,IAEW,CACZ,UACA,QACA,SACA,WACA,iBACA,YACA,eACA,WACA,aAGIvxC,SAASkyC,IACb,MAAMvnB,EAAOpc,EAAM9U,KAAKA,KAAKkxB,KACvBwnB,EAAWxnB,EAAKunB,GAChBE,EAAUznB,EAAK0nB,QAAQH,GAE7B,IAAK14C,KAAK84C,uBAAuB3nB,EAAMwnB,EAAUC,GAAU,OAE3D,MAAMG,EAAeP,EAAeE,GAC9BthC,EAAcpX,KAAKqX,2BAA2BqhC,GAEpDK,EAAavyC,SAAS6E,IACpB,MAEMb,EAAS,CACbvF,KAHiBoG,EAAEpG,KAInBQ,aAHmB,CAACH,EAAWiN,EAAM9Q,GAAI4J,EAAE5J,IAAIkE,KAAK3F,KAAKoF,WAIzD3D,GAAI4J,EAAE5J,GACNmE,IAAK5F,KAAKiwB,UAAU5kB,IAEtBb,EAAO8Q,MAAQjQ,EAAEpL,KAAKA,KAAK+4C,kBAAoB,GAE/C5hC,EAAY9N,QAAQ5C,KAAK8D,MAGvBmuC,IACExnB,EAAK8nB,WACP7hC,EAAYkE,MAAQ6V,EAAK0nB,QAAQH,GAAMQ,aAEvC9hC,EAAYkE,MACVq9B,EAASQ,MAAQ,EACb,GAAGR,EAAS1xB,OAAOplB,UAAU82C,EAASQ,QACtCR,EAAS1xB,OAAOplB,QAI1B,MAAMu3C,EAAcV,EAAKtsB,OAAO,GAAGhC,cAAgBsuB,EAAKjrB,MAAM,GACxD6qB,EAAUt4C,KAAKR,KAAK,4BAA8B45C,GACxDp5C,KAAKwX,gCAAgCrO,EAAUmvC,EAASlhC,MAG1D,MAAMiiC,EAAUr5C,KAAKR,KAAK,8BAC1BQ,KAAKqZ,yBAAyBN,EAAYsgC,EAASlwC,GAGrD2vC,uBAAuB3nB,EAAMwnB,EAAUC,GACrC,OAAKD,IAEDA,EAAS1xB,QAAQplB,OAAS,IAAMsvB,EAAK8nB,eAErC9nB,EAAK8nB,YAAcL,GAASM,aAAe,IAMjD/C,YAAY5jC,EAAOwC,EAAOgE,GACxB,MAAMzT,EAAY,UACZ6D,EAAWnJ,KAAKqX,2BAA2B/R,GAE3Cg0C,EAAUvkC,EAAM9U,KAAKA,KAAK6kB,YAAYw0B,QAC5C,IAAKA,EAAS,OAAOvgC,EAErB5P,EAASmS,MAAQ,GAAGg+B,EAAQr6C,SAASq6C,EAAQntC,MAE7C,MACMotC,EAAU,CACd,CAAEt0C,KAAM,MAAOhG,MAAO,OACtB,CAAEgG,KAAM,KAAMhG,MAAO,MACrB,CAAEgG,KAAM,KAAMhG,MAAO,MACrB,CAAEgG,KAAM,KAAMhG,MAAO,MACrB,CAAEgG,KAAM,KAAMhG,MAAO,MACrB,CAAEgG,KAAM,MAAOhG,MAAO,QAGlBu6C,EAAYzkC,EAAM9U,KAAKA,KAAKu5C,UAVpB,CAAC,UAAW,YAAa,MAAO,QAWxChzC,SAASizC,IACb,MAAMC,EAAcF,EAAUC,GAAe,QAC7C,IAAKC,EAAa,OAElB,MAAMtiC,EAAcpX,KAAKqX,2BAA2BoiC,GACpDriC,EAAYkE,MAAQ,GAAGo+B,EAAYz6C,SAASq6C,EAAQH,QAEpDI,EAAQ/yC,SAASmzC,IACf,MAAMl0C,EAAe,CACnBH,EACAiN,EAAM9Q,GACN,GAAGg4C,KAAQE,EAAO16C,SAClB0G,KAAK3F,KAAKoF,WACNoF,EAAS,CACbvF,KAAM00C,EAAO10C,KACbQ,aAAcA,EACdhE,GAAIk4C,EAAO16C,MACXmc,SAAU,UAEZhE,EAAY9N,QAAQ5C,KAAK8D,MAG3B,MAAMovC,EAAcH,EAAKrtB,OAAO,GAAGhC,cAAgBqvB,EAAKhsB,MAAM,GACxD6qB,EAAUt4C,KAAKR,KAAK,6BAA+Bo6C,GACzD55C,KAAKwX,gCAAgCrO,EAAUmvC,EAASlhC,MAG1D,MAAMiiC,EAAUr5C,KAAKR,KAAK,0BAC1BQ,KAAKqZ,yBAAyBN,EAAYsgC,EAASlwC,ICroBhD,MAAM0wC,6BAA6Bz6B,YACxCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEvB,OAAQ7b,GACN,IAAK,UACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,QACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,OACHrhB,KAAK85C,cAAcn2C,EAAO0O,EAASgP,GACnC,MACF,IAAK,cACHrhB,KAAKo0B,qBAAqBzwB,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACHrhB,KAAKq0B,sBAAsB1wB,EAAO0O,EAASgP,GAC3C,MACF,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,iBACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,GACxC,MACF,IAAK,UACHrhB,KAAK+5C,eAAep2C,EAAO0O,EAASgP,GACpC,MACF,IAAK,aACHrhB,KAAKg6C,kBAAkBr2C,EAAO0O,EAASgP,IAM7C6S,iBAAiBvwB,EAAO0O,EAASoiB,GAC/B10B,MAAMue,SAASjM,GAASqiB,YAAYD,EAAS,CAAE9wB,MAAOA,IAGxD0wB,sBAAsB1wB,EAAO0O,EAASoiB,GACpC10B,MAAMue,SAASjM,GAASsiB,gBAAgBF,EAAS,CAAE9wB,MAAOA,IAG5DywB,qBAAqBzwB,EAAO0O,EAASoiB,GACnC10B,MAAMue,SAASjM,GAASuiB,gBAAgBH,EAAS,CAAE9wB,MAAOA,IAG5Dm2C,cAAcn2C,EAAO0O,EAASoiB,GAC5B10B,MAAMue,SAASjM,GAAS4/B,SAASxd,EAAS,CAAE9wB,MAAOA,IAGrDwwB,eAAexwB,EAAO0O,EAASoiB,GAC7B10B,MAAMue,SAASjM,GAASwiB,UAAUJ,EAAS,CAAE9wB,MAAOA,IAGtD6hB,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAOoO,EAAMsJ,MAAMvf,IAAIygB,GAE3B,IAAIvf,KAAK80B,cAAcnuB,GAKvB,MAAuB,UAAnBA,EAAK1G,KAAKyB,KAAyBqT,EAAMggB,SAASpuB,GAE/CA,EAAK8e,OANV9e,EAAKquB,eASTF,cAAcnuB,GACZ,OACEA,EAAK1G,KAAKA,KAAKkwB,WACdxpB,EAAK1G,KAAKA,KAAKkwB,SAASC,SACzBzpB,EAAK1G,KAAKA,KAAKkwB,SAASlxB,MAI5B86C,qBAAqBp2C,EAAO0O,EAASgP,GACnC,MAAMtM,EAAQhV,MAAMue,SAASjM,GAC7B,IAAI8O,EAAUE,EAASD,MAAM,KAE7B,MAAMq4B,EAAOt4B,EAAQ,GACrB,IAAI84B,EAAezxC,SAAS2Y,EAAQ,IACpC,GAAqB+4B,MAAjBD,EAAsB,OAE1B,MAAMX,EAAUvkC,EAAM9U,KAAKA,KAAK6kB,WAAWw0B,QACrCa,EAASplC,EAAM9U,KAAKA,KAAKu5C,UAAUC,GAAe,QAExD,IAAIW,EAOJ,GALEA,EADEH,EAAe,EACNnuC,KAAKuuC,QAAQF,EAAOl7C,MAAQg7C,EAAc,EAAGX,EAAQntC,KAErDnM,KAAKs6C,sBAAsBhB,EAASa,EAAQF,GAGrDG,IAAaD,EAAOl7C,MAAO,OAE/B,MAAMmO,EAAS,CAAEnN,KAAM,CAAEu5C,UAAW,KACpCpsC,EAAOnN,KAAKu5C,UAAUC,GAAQ,CAAEH,QAAS,CAAEr6C,MAAOm7C,UAE5CrlC,EAAM3H,OAAOA,GAGrBktC,sBAAsBhB,EAASa,EAAQI,GACrC,MAAMC,EACJlB,EAAQntC,IAAMmtC,EAAQr6C,OAAS,EAAIq6C,EAAQntC,IAAMmtC,EAAQr6C,MAAQ,EAC7Dw7C,EACJnB,EAAQH,MAAQgB,EAAOl7C,OAAS,EAAIq6C,EAAQH,MAAQgB,EAAOl7C,MAAQ,EAErE,IAAIy7C,EAAiBH,EAMrB,OAJIA,EAASC,IAAiBE,EAAiBF,GAE3CD,EAASE,IAAeC,EAAiBD,GAEtCN,EAAOl7C,MAAQy7C,EAGxBV,kBAAkBr2C,EAAO0O,EAASgP,GAClBthB,MAAMue,SAASjM,GACvBkmC,kBAAkBl3B,ICrIrB,MAAMs5B,2BAA2B93B,cACtCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,mBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,mBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,qBAIb5B,mBAAmB3kB,EAASJ,IC7BvB,SAASwkB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,gBAAiB,CAC3C6C,KAAMrG,KAAKY,KAAKE,SACd,oDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,oDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,gBAAiB,CAC3C6C,KAAMrG,KAAKY,KAAKE,SACd,oDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,oDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MDCjB+/B,CAAkB5/B,EAASJ,IE3BxB,MAAM47C,0BAA0Bj+B,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,kBAAkB1K,EAAO4B,GACvB,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAMI0pB,EANA/Q,EAAQre,KAAKsgC,aAAavrB,EAAO1C,GACjCkY,EAASvqB,KAAK66C,eAAe9lC,EAAO1C,GACpCua,EAAQ5sB,KAAK0gC,cAAc3rB,EAAO1C,GAClCyoC,EAAgB96C,KAAK+6C,sBAAsBhmC,EAAO1C,GAClD4S,EAASjlB,KAAK4gC,eAAe7rB,EAAM9U,KAAKA,KAAKglB,OAAQ5S,GACrDgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,GAEtCxL,IAAa,4BACfuoB,EAAapvB,KAAKqgC,mBAAmBtrB,EAAO1C,IAE9C,IAAIkuB,EAAavgC,KAAKR,KAAK,4BACvBwsB,EAAchsB,KAAKR,KAAK,yBACxBmhC,EAAa3gC,KAAKR,KAAK,2BACvBw7C,EAAqBh7C,KAAKR,KAAK,gCAC/BouB,EAAc5tB,KAAKR,KAAK,yBACxB2gC,EAAkBngC,KAAKR,KAAK,6BAEhCQ,KAAKqZ,yBAAyBzS,EAAQ25B,EAAYliB,GAClDre,KAAKqZ,yBAAyBzS,EAAQolB,EAAazB,GACnDvqB,KAAKqZ,yBAAyBzS,EAAQ+5B,EAAY/T,GAClD5sB,KAAKqZ,yBAAyBzS,EAAQo0C,EAAoBF,GAC1D96C,KAAKqZ,yBAAyBzS,EAAQgnB,EAAa3I,GAEnD,IAAI0B,EAAa3mB,KAAKR,KAAK,wBACvBsnB,EAAc9mB,KAAKR,KAAK,yBACxBqhC,EAAQ7gC,KAAK6mB,gBACfxU,EACA0C,EAAM9U,KAAKA,KAAKymB,UAChB,QACAC,EACA,eAEEoa,EAAS/gC,KAAK6mB,gBAChBxU,EACA0C,EAAM9U,KAAKA,KAAKymB,UAChB,SACAI,EACA,gBAGF9mB,KAAKqZ,yBAAyBzS,EAAQ+f,EAAYka,GAClD7gC,KAAKqZ,yBAAyBzS,EAAQkgB,EAAaia,GACnD/gC,KAAKqZ,yBAAyBzS,EAAQu5B,EAAiB/Q,GAEvD,IAAI4R,EAAehhC,KAAKR,KAAK,0BAK7B,OAJAQ,KAAKqZ,yBAAyBzS,EAAQo6B,EAAc3kB,GAEhDxV,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGTkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,aAC7B,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAErBrS,KAAKknB,gBAAgBnB,EAAM1T,GAE3B,IAAIsU,EAAa3mB,KAAKR,KAAK,wBACvBsnB,EAAc9mB,KAAKR,KAAK,yBAC5BQ,KAAKmnB,mBAAmBpB,EAAM1T,EAAS,QAASsU,EAAY,eAC5D3mB,KAAKmnB,mBACHpB,EACA1T,EACA,SACAyU,EACA,gBAGEjgB,IAAa,2BACf7G,KAAKqnB,oBAAoBtB,EAAM1T,GAEjCrS,KAAKmc,mBAAmB4J,EAAM1T,EAAS4U,GAMzCqZ,aAAavrB,EAAO1C,GAClB,IAMIiV,EANAC,EAAavnB,KAAKwnB,qBACpBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKynB,SAAW,KAEpDC,EAAc3nB,KAAK4nB,gBAAgBL,GACnCjiB,EAAY,OAIdgiB,EADsB,QAApBvS,EAAM9U,KAAKyB,KACFimB,EAAYljB,QACpBkV,GACY,eAAXA,EAAEjY,MAAoC,UAAXiY,EAAEjY,MAA+B,SAAXiY,EAAEjY,OAG5CimB,EAAYljB,QACpBkV,GAAiB,eAAXA,EAAEjY,MAAyBiY,EAAE1Z,KAAKA,KAAKqnB,WAGlD,IAAIO,EAAiB7nB,KAAK8nB,oBAAoBR,GAG1CS,EADUF,EAAepjB,QAAQkV,GAAgB,UAAVA,EAAEjY,OACjBH,KAAKymB,GAC/BhoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW0iB,KAEzCE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYN,EAAepjB,QAAQkV,GAAgB,aAAVA,EAAEjY,OACdH,KAAKiE,GACpCxF,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWE,KAEzC4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAGIE,EAHQR,EAAepjB,QACxBkV,GAAgB,UAAVA,EAAEjY,MAA8B,aAAViY,EAAEjY,OAERH,KAAK+mB,GAC5BtoB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWgjB,KAEzCC,EAAWvoB,KAAKqX,6BACpBkR,EAASjf,QAAU+e,EAEnB,IAAIG,EAAiBb,EAAYljB,QAAQkV,GAAgB,cAAVA,EAAEjY,OAQ7C+mB,EANmBzoB,KAAK0oB,qBAAqBF,GACf/jB,QAC/BjD,GACEA,EAAEvB,KAAKuwB,MAAMvxB,OAASuC,EAAEvB,KAAKuwB,MAAMvxB,OAAS,GAC5CuC,EAAEvB,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKuwB,MAAMrkB,KAAO,IAEV5K,KAAKC,GACtCxB,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAW9D,KAEzCmnB,EAAiB3oB,KAAKqX,6BAC1BsR,EAAerf,QAAUmf,EAEzB,IAKIyZ,EALe1Z,EAAe/jB,QAC/BjD,KACGA,EAAEvB,KAAKuwB,MAAMrkB,KAAO3K,EAAEvB,KAAKuwB,MAAMvxB,QACV,QAAzBuC,EAAEvB,KAAKkiC,iBAE4B5gC,KAAKoY,GAC1C3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCyoB,EAAmBpiC,KAAKqX,6BAC5B+qB,EAAiB94B,QAAU44B,EAE3B,IACItZ,EADQrB,EAAW9iB,QAAQiO,GAAiB,SAAXA,EAAEhR,OACdH,KAAKoY,GAC5B3Z,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqU,KAEzCkP,EAAW7oB,KAAKqX,6BACpBwR,EAASvf,QAAUsf,EAEnB,IAAIE,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAC3BwpB,EAAahpB,KAAKR,KAAK,wBACvBypB,EAAmBjpB,KAAKR,KAAK,8BAC7B6iC,EAAqBriC,KAAKR,KAAK,gCAC/B0pB,EAAalpB,KAAKR,KAAK,wBAEvBoH,EAAS5G,KAAKoZ,wBAAwB,aAiB1C,OAfApZ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAC7DpoB,KAAKwX,gCAAgC5Q,EAAQoiB,EAAYT,GACzDvoB,KAAKwX,gCACH5Q,EACAqiB,EACAN,GAEF3oB,KAAKwX,gCACH5Q,EACAy7B,EACAD,GAEFpiC,KAAKwX,gCAAgC5Q,EAAQsiB,EAAYL,GAElDjiB,EAITkhB,oBAAoBqB,GAClB,MAAMC,EAAkB/S,OAAOgT,KAC7BzqB,KAAKq8C,KAAKt3B,OAAO4F,wBASnB,OANsBJ,EAAU1kB,QAAQe,KACjCA,EAAEvF,KAAKA,KAAKypB,YAEVN,EAAgBrlB,SAASyB,EAAEvF,KAAKA,KAAKypB,WAAWhoB,QAS3Dm5C,eAAe9lC,EAAO1C,GACpB,IAAI6oC,EAAcl7C,KAAKwnB,qBACrBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,QAEnCw5C,EAAcl7C,KAAK0oB,qBAAqBwyB,GAExC,IAAIC,EAAen7C,KAAKo7C,mBAAmBF,GAG3C,OAFal7C,KAAKq7C,kBAAkBtmC,EAAO1C,EAAS8oC,GAMtDC,mBAAmB7wB,GACjB,IAAI3jB,EAASyP,OAAOiE,OAAOiQ,GAY3B,OAVA3jB,EAAOwE,MAAK,CAACC,EAAGC,IACVD,EAAEpL,KAAKkqB,QAAU7e,EAAErL,KAAKkqB,MACnB9e,EAAEpG,KACNmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,SAEZjf,EAAEpL,KAAKkqB,MAAQ7e,EAAErL,KAAKkqB,QAGxBvjB,EAITy0C,kBAAkBtmC,EAAO1C,EAASkY,GAChC,MAAM+wB,EAAmBt7C,KAAKqX,6BACxBmT,EAAOxqB,KAAKqX,6BAIZkkC,EAAgBllC,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKsqB,QAAQnf,MAC3D,CAACC,EAAGC,IACKA,EAAE,GACN8e,cACAC,cAAchf,EAAE,GAAG+e,mBAAe1M,EAAW,CAC5C4M,YAAa,WAMrB,IAAIK,GAAiB,EACrB4wB,EAAc/0C,SAASC,IACjBA,EAAE,GAAGmkB,WAAW,WACbD,GAAkBlkB,EAAE,GAAG0F,IAAM,GAAK1F,EAAE,GAAGxH,MAAQ,IAClD0rB,GAAiB,GACnBlkB,EAAE,GAAGkkB,eAAiBA,IAEjBlkB,EAAE,KAAIA,EAAE,GAAK,IAElBA,EAAE,GAAGkkB,gBAAkBlkB,EAAE,GAAG0F,KAAO1F,EAAE,GAAGxH,MAAQ,MAItCsrB,EAAOnkB,OACnB,SAAU2kB,EAASrmB,GACjB,IAAIumB,EAAOvmB,EAAEzE,KAAKA,KAAKirB,YAAYC,KACnC,MAAMC,EAAWxsB,KAAKq8C,KAAKt3B,OAAO63B,sBAAsBvwB,GAExD,IAAId,EAAQzlB,EAAEzE,KAAKkqB,MACnB,IAAIsxB,EACO,SAATxwB,GAA4B,WAATA,GAA8B,WAATA,EAE1C,IAAI9e,EAAKof,EAAOC,EAAWC,EAAUC,EAEjC+vB,EACFhwB,EAAWR,GAEXQ,EAAW,QAAUtB,EACrBqB,EAAYrB,EACR,GAAGnqB,KAAKR,KAAK,2BAA2B2qB,IACxCnqB,KAAKR,KAAK,4BAGhBksB,EAAY6vB,EAAc35C,MAAM+pB,GAAQA,EAAI,KAAOF,MAAY,GAC/DF,EAAQG,GAAWzsB,MACnBkN,EAAMuf,GAAWvf,IAEjB,IAAIyf,EAAuB/kB,IAAa,kBACxC,GAAIsF,IAASuf,GAAWf,iBAAkBiB,EAAuB,OAEjE,IAKIxU,EALAkU,EAAQtrB,KAAK8rB,WAAWzZ,EAAS0C,EAtDvB,QAsDyCrQ,GAqCvD,OAnCA1E,KAAK07C,cAAch3C,EAAG4mB,GAKpBlU,EADEqkC,EACYH,EAAiB1iC,cAAchX,MAC1CyY,GAAQA,EAAIpV,OAASmmB,IAGVZ,EAAK5R,cAAchX,MAC9ByY,GAAQA,EAAIpV,OAASumB,IAIrBpU,IACHA,EAAcpX,KAAKqX,6BACflL,EAAM,IACRiL,EAAYkE,MAAQ,GAAGiQ,KAASpf,MAIpCiL,EAAY9N,QAAQ5C,KAAK4kB,GAGvBmwB,GACAH,EAAiB1iC,cAAc1M,QAAQkL,GAAe,EAEtDpX,KAAKwX,gCACH8jC,EACAlwB,EACAhU,IAEMqkC,GAAiBjxB,EAAK5R,cAAc1M,QAAQkL,GAAe,GACnEpX,KAAKwX,gCAAgCgT,EAAMgB,EAAWpU,GAEjD2T,GACPtnB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,UAEtC4S,EAAchsB,KAAKR,KAAK,yBACxBysB,EAAajsB,KAAKR,KAAK,wBAK3B,OAHAQ,KAAKwX,gCAAgC5Q,EAAQolB,EAAasvB,GAC1Dt7C,KAAKwX,gCAAgC5Q,EAAQqlB,EAAYzB,GAElD5jB,EAIT80C,cAAcj1C,EAAG6kB,GACP7kB,EAAExG,KAAKisB,YAERK,gBACLjB,EAAM5P,OAAS1b,KAAKR,KAAK,sBAAsB4sB,OAAO,GAAGhC,eAM7DsW,cAAc3rB,EAAO1C,GACnB,IAAIoa,EAAazsB,KAAKwnB,qBACpBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAgB,QAAVA,EAAEjY,QAE/BgrB,EAAc1sB,KAAK4nB,gBAAgB6E,GAGvC,OAFYzsB,KAAK2sB,iBAAiBta,EAAS0C,EAAO2X,GAMpDquB,sBAAsBhmC,EAAO1C,GAC3B,IAAIspC,EAAoB37C,KAAKwnB,qBAC3BzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAgB,gBAAVA,EAAEjY,QAE/Bk6C,EAAqB57C,KAAK4nB,gBAAgB+zB,GAO9C,OANoB37C,KAAK2sB,iBACvBta,EACA0C,EACA6mC,GAOJjvB,iBAAiBta,EAAS0C,EAAO6X,GAC/B,IAAIzO,EAASne,KAAKqX,6BACdwV,EAAU7sB,KAAKqX,6BACfyV,EAAO9sB,KAAKqX,6BACZ0V,EAAY/sB,KAAKqX,6BAEPuV,EAAMxmB,OAClB,SAAU2kB,EAASpV,GACjB,MAAMqX,EAAiBrX,EAAE1V,KAAKA,KAAKypB,WAAWhoB,KAG9C,IAAIurB,EAAOjtB,KAAK8rB,WAAWzZ,EAAS0C,EAFlB,OAEoCY,GAEjDqX,GAAqC,KAAnBA,EAKD,QAAlBA,EAKkB,aAAlBA,EAKJ7O,EAAO7U,QAAQ5C,KAAKumB,GAJlBF,EAAUzjB,QAAQ5C,KAAKumB,GALvBH,EAAKxjB,QAAQ5C,KAAKumB,GALlBJ,EAAQvjB,QAAQ5C,KAAKumB,IAiBvBxpB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,SAEtC8T,EAAcltB,KAAKR,KAAK,yBACxB2tB,EAAiBntB,KAAKR,KAAK,4BAC3B4tB,EAAYptB,KAAKR,KAAK,uBAK1B,GAJAQ,KAAKwX,gCAAgC5Q,EAAQsmB,EAAa/O,GAC1Dne,KAAKwX,gCAAgC5Q,EAAQumB,EAAgBJ,GAC7D/sB,KAAKwX,gCAAgC5Q,EAAQwmB,EAAWN,IAEnDjmB,IAAa,sBAAuB,CACvC,IAAIwmB,EAAertB,KAAKR,KAAK,0BAC7BQ,KAAKwX,gCAAgC5Q,EAAQymB,EAAcR,GAG7D,OAAOjmB,EAITg6B,eAAe3b,EAAQ5S,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQ5F,KAAKq8C,KAAKt3B,OAAOsB,QAAQ1jB,KAAKiE,IAC/D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACpDpE,EAAOhB,KAAK0tB,oBAAoBzI,EAAOzf,EAAE,IAAIvG,OACjD,MAAO,CAAEgG,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAAMA,MAE/D2sB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAG5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAEnD/mB,EAGTsgB,gBAAgBnB,EAAM1T,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC9T,EAAY,QAEZgoB,EAAOzmB,IAAa,oBAEpB0mB,EAAgBlX,OAAO7R,QAAQ5F,KAAKq8C,KAAKt3B,OAAOsB,QAAQ1jB,KAAKiE,IAC/D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CkoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAC1D3tB,KAAKqZ,yBAAyB0M,EAAM6H,EAAahnB,GAAQ,GAI3DigB,gBAAgBxU,EAASqU,EAAWrf,EAAYC,EAAchC,GAC5D,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAEtCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQ5F,KAAKq8C,KAAKt3B,OAAO+C,WAAWnlB,KAAKiE,IAC5D,GAA8B,IAA1BkhB,EAAUlhB,EAAE,IAAIvG,MAAa,OAEjC,IAAIgG,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IACIzsB,EADAyE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAKxD,OAH6BpE,EAAV,WAAfqG,EAAgC,GACxBrH,KAAK0tB,oBAAoBhH,EAAUlhB,EAAE,IAAIqoB,YAE9C,CAAE5oB,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAAMA,MAE/D8sB,EAAkB9tB,KAAKqX,6BAK3B,OAJAyW,EAAgBxkB,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAElDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcwmB,GAEpDlnB,EAGTugB,mBAAmBpB,EAAM1T,EAAShL,EAAYC,EAAchC,GAC1D,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GAEnCimB,EAAOzmB,IAAa,oBAEpByC,EAAU+M,OAAO7R,QAAQ5F,KAAKq8C,KAAKt3B,OAAO+C,WAAWnlB,KAAKiE,IAC5D,IAAIP,EAAOqoB,EAAO9nB,EAAE,GAAKA,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CqoB,EAAkB9tB,KAAKqX,6BAC3ByW,EAAgBxkB,QAAUA,EAE1BtJ,KAAKwX,gCAAgC6C,EAAK/S,EAAcwmB,GACxD9tB,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAIzD+B,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAEZyoB,EAAQ/tB,KAAKqX,6BACbgF,EAAUrc,KAAKqX,6BAInB,GAFArX,KAAKguB,yBAAyB1oB,EAAWsB,EAAQyL,GAEzB,cAApB0C,EAAM9U,KAAKyB,KAAsB,CACnC,IAAIusB,EAAiB,CAAC3oB,EAAW+M,EAAS,aAAa1M,KACrD3F,KAAKoF,WAEP2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,YACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,8BAElB,IAAI0uB,EAAgB,CAAC5oB,EAAW+M,EAAS,YAAY1M,KAAK3F,KAAKoF,WAO/D,GANA2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,WACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,6BAGduV,EAAM9U,KAAKA,KAAK6kB,WAAWqJ,GAAGlvB,OAAS,EAAG,CAC5C,IAGImvB,EAAkB,CACpB3sB,GAAI,YACJgE,aALmB,CAACH,EAAW+M,EAAS,aAAa1M,KACrD3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,6BAElB6c,EAAQ/S,QAAQ5C,KAAK0nB,GAGvB,IAGIC,EAAoB,CACtB5sB,GAAI,cACJgE,aALqB,CAACH,EAAW+M,EAAS,eAAe1M,KACzD3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,+BAElB6uB,EAAkBjT,SAAWrG,EAAM9U,KAAKA,KAAK6kB,YAAYwJ,YACrD,SACA,GACJjS,EAAQ/S,QAAQ5C,KAAK2nB,GAcvB,OAXAruB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV6c,GAGKzV,EAITuV,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WACxC9T,EAAY,UAEhBtF,KAAK6vB,8BAA8BvqB,EAAW+M,EAASlJ,GAEvD,IAAI4kB,EAAQ/tB,KAAKqX,6BACbgF,EAAUrc,KAAKqX,6BAEnB,GAAI4P,EAAOvK,OAAOrR,GAAsB,cAAhBA,EAAEpL,KAAKyB,OAAuB,CACpD,IAAIusB,EAAiB,CAAC3oB,EAAW+M,EAAS,aAAa1M,KACrD3F,KAAKoF,WAEP2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,YACJgE,aAAcwoB,EACdhpB,KAAMjF,KAAKR,KAAK,8BAElB,IAAI0uB,EAAgB,CAAC5oB,EAAW+M,EAAS,YAAY1M,KAAK3F,KAAKoF,WAC/D2oB,EAAMzkB,QAAQ5C,KAAK,CACjBjF,GAAI,WACJgE,aAAcyoB,EACdjpB,KAAMjF,KAAKR,KAAK,6BAGlB,IAGI6uB,EAAoB,CACtB5sB,GAAI,cACJgE,aALqB,CAACH,EAAW+M,EAAS,eAAe1M,KACzD3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,+BAElB6uB,EAAkBjT,SAAW6L,EAAOvK,OACjCrR,GAAMA,EAAEpL,KAAKA,KAAK6kB,YAAYwJ,cAE7B,SACA,GACJjS,EAAQ/S,QAAQ5C,KAAK2nB,GAGvBruB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,wBACVuuB,GAEF/tB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV2J,GAOJk3B,mBAAmBtrB,EAAO1C,GACxB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cAE1C,OADApZ,KAAKwuB,0BAA0BzZ,EAAO1C,EAASzL,GACxCA,EAIT4nB,0BAA0BzZ,EAAO1C,EAASlJ,GACxC,MAAM7D,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAG3B,IAAKutB,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAW/E,OAAO7R,QAAQuQ,EAAM0Z,SAAS/Z,MAC7C,CAACs6B,EAAGxpC,IAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,KAE1C,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1BxK,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACV4vB,GAKJpB,yBAAyB1oB,EAAW6D,EAAUkJ,GAC5C,MAAMkd,EAAS3wB,KAAK2wB,OACpB,IAAIC,EAAWC,EACXF,IACFC,EAAYD,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAYA,IACxDod,EAAoBD,GAAWG,YAGjC,IAAIA,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCAQ9BiwB,IAAmBG,EAAiBtU,MAAQmU,GAChDG,EAAiBxU,SAAWqU,EAAoB,SAAW,GAE3DE,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJE,8BAA8BvqB,EAAW+M,EAASlJ,GAChD,MAAMomB,EAAS3wB,KAAK2wB,OAEpB,IAaIO,EAbAH,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCASlC,GAAI+vB,EAAQ,CAKVO,EAJetd,OAAOjG,OAAO2H,WAAW3S,KAAKmR,GAAMA,EAAEjR,KACtBF,KAAKE,GAClC8tB,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAY5Q,MAEnBib,OAAOlb,KAAQA,GAAGmuB,aAG/CC,EAAiBxU,SAAW0U,EAAW,SAAW,GAElDH,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJtI,oBAAoBtB,EAAM1T,GACxB,MAAMlJ,EAAWnJ,KAAKoZ,wBAAwB,cACxC9T,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAErBwlB,EAASzU,OAAOjG,OAAO2H,WAC1BzP,QAAQiO,KAAQA,EAAEqC,QAClBxT,KAAKmR,GAAMA,EAAEqC,QAEhB,IAAKia,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAW6L,EAAOvK,OAAO3H,GAC7BsB,OAAO7R,QAAQuQ,EAAM0Z,SAAS/Z,MAC3BlP,GAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,OAGzC,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1B,MAAM8kB,EAAUtvB,KAAKR,KAAK,6BAC1BQ,KAAKwX,gCAAgCrO,EAAUmmB,EAASF,GACxDpvB,KAAKqZ,yBAAyB0M,EAAMuJ,EAASnmB,GAK/C2iB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,WACxDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,MAAMypB,YAAYhoB,MAClDkF,EAAS,CACX3B,KAAM0B,EAAK1B,KACXxD,GAAIkF,EAAKjB,IACTD,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GAiBR,OAbE2F,EAAK1G,KAAKkwB,WACTxpB,EAAK1G,KAAKkwB,SAASC,SACpBzpB,EAAK1G,KAAKkwB,SAASlxB,QAEnB2H,EAAO3B,MAAQ,KAAKjF,KAAKR,KAAK,+BAGhCoH,EAAO0U,MAAQtb,KAAKqwB,iBAAiB1pB,GAErCC,EAAO8U,MAAQ1b,KAAKswB,aAAa3pB,GAEjCC,EAAO+U,MAAQ3b,KAAKuwB,gBAAgB5pB,EAAMoO,GAEnCnO,EAGTqpB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAI1DypB,iBAAiB1pB,GACf,IAAIC,EAAS,GAKb,OAJID,EAAK1G,KAAKynB,SAAW,IACvB9gB,EAASD,EAAK1G,KAAKynB,UAGd9gB,EAIT0pB,aAAa3pB,GACX,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKuwB,KACrB,OAAKA,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,EAcpB2pB,gBAAgB5pB,EAAMoO,GACpB,IAAInO,EAAS,GAET6pB,EAAc9pB,EAAK1G,KAAKywB,SAAShvB,KACrC,GAAI+uB,GAA+B,KAAhBA,EAAoB,CACrC,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAC9B+sB,EAAWD,EAAU1R,OAAO,EAAG0R,EAAUE,YAAY,MACzD,GAAoB,cAAhBJ,EAA6B,CAC/B,IAAI5sB,EAASitB,YAAY/b,EAAO,aAAa4b,KAE7C,GAAI9sB,EAAQ,CACV,IAAIkhC,EAASjU,YAAY/b,EAAO,aAAa6b,KAC7ChqB,EAAS/C,EACHkhC,EAAO54B,MAAKvF,GAAU,IAAIm+B,EAAO54B,QAI3C,GAAoB,YAAhBskB,EAA2B,CAC7B,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAE9B2sB,EADSzb,EAAMsJ,MAAMvf,IAAI6xB,IACV1wB,KAAKA,KAAKuwB,KACzBA,GAAMvxB,QACR2H,EAAS4pB,EAAKvxB,MACVuxB,EAAKrkB,MAAKvF,GAAU,IAAI4pB,EAAKrkB,QAIrC,GAAsB,cAAhBskB,GAA+C,YAAhBA,EAA4B,CAC/D,IAAIE,EAAYhqB,EAAK1G,KAAKywB,QAAQ7sB,OAE9B6jB,EADS3S,EAAMsJ,MAAMvf,IAAI6xB,IACN1wB,KAAKA,KAAKynB,SAC7BA,IACF9gB,EAAS8gB,IAKf,OAAO9gB,EAIT4gB,qBAAqBnJ,GACnB,IAAIzX,EAaJ,OAXIC,IAAa,uBACfD,EAASyX,EAAM5Z,QACZkV,IACEA,EAAE1Z,KAAKypB,cAEqB,WAA3B/P,EAAE1Z,KAAKypB,WAAWhoB,MACS,SAA3BiY,EAAE1Z,KAAKypB,WAAWhoB,MACS,QAA3BiY,EAAE1Z,KAAKypB,WAAWhoB,SAInBkF,GAAkByX,EAI3BuL,yBAAyBI,GACvB,MAAMgH,EAAsB3a,OAAOgT,KACjCzqB,KAAKq8C,KAAKt3B,OAAO63B,uBACjB/2C,QAAQC,GAAW,YAALA,IAQhB,OAPaslB,EAAOvlB,QACjBkV,GACCA,EAAE1Z,KAAKirB,YAAY+F,UACnBD,EAAoBjtB,SAAS4V,EAAE1Z,KAAKirB,YAAYC,OAC/B,IAAjBxR,EAAE1Z,KAAKkqB,QAMbzB,qBAAqBrK,GACnB,OAAIxX,IAAa,kBAA0BwX,EAEpCA,EAAM5Z,QAAQkV,IACnB,IAAI6W,EAAO7W,EAAE1Z,KAAKuwB,KAElB,OAAKA,KAGDA,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,UAO9B2oB,gBAAgBvJ,GACd,IAAIzX,EAASyP,OAAOiE,OAAO+D,GAI3B,OAFAzX,EAAOwE,MAAK,CAACC,EAAGC,IAAMD,EAAED,KAAOE,EAAEF,OAE1BxE,EAIT8mB,oBAAoBvD,GAOlB,MANc,CACZ,EAAG,GACH,GAAK,gCACL,EAAG,+BACH,EAAG,uCAEQA,GAGf+F,eAAe1lB,GAcb,MAbY,CAEV0mB,MAAO,8BACPC,KAAM,+BACNpE,UAAW,8BACXqE,SAAU,8BAEVC,QAAS,8BACTvE,KAAM,8BACNwE,OAAQ,yCACRC,KAAM,wCACNC,IAAK,wCAEIhnB,IChgCR,MAAMqxC,4BAA4Bz8B,YACvCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEP,UAAZ9O,EACFG,OAAOjG,OAAO2H,WAAW1N,SAASkM,IAChC,IAAIshB,EAAUthB,EAAEzS,KAAKyF,IACrB1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,MAGhDrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIlD4S,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,OAAQ/b,GACN,IAAK,UACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,QACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,cACHrhB,KAAKo0B,qBAAqBzwB,EAAO0O,EAASgP,GAC1C,MACF,IAAK,eACHrhB,KAAKq0B,sBAAsB1wB,EAAO0O,EAASgP,GAC3C,MACF,IAAK,OACL,IAAK,QACL,IAAK,OAIL,IAAK,gBACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,GACxC,MACF,IAAK,gBACGrhB,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,GAC/C,MACF,IAAK,eACGrhB,KAAKu0B,aAAa5wB,EAAO0O,EAASgP,GACxC,MACF,IAAK,kBACGrhB,KAAKw0B,gBAAgB7wB,EAAO0O,EAASgP,IAMjD6S,iBAAiBvwB,EAAO0O,EAASoiB,GACjB10B,MAAMue,SAASjM,GACvBqiB,YAAYD,EAAS,CAAE9wB,MAAOA,IAGtC0wB,sBAAsB1wB,EAAO0O,EAASoiB,GACtB10B,MAAMue,SAASjM,GACvBsiB,gBAAgBF,EAAS,CAAE9wB,MAAOA,IAG1CywB,qBAAqBzwB,EAAO0O,EAASoiB,GACrB10B,MAAMue,SAASjM,GACvBuiB,gBAAgBH,EAAS,CAAE9wB,MAAOA,IAG1CwwB,eAAexwB,EAAO0O,EAASoiB,GACf10B,MAAMue,SAASjM,GACvBwiB,UAAUJ,EAAS,CAAE9wB,MAAOA,IAGpC6hB,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GACvB1L,EAAO5G,MAAMuf,QAAQvK,EAAOwK,GAEhC,IAAIvf,KAAK80B,cAAcnuB,GAKvB,MAAuB,UAAnBA,EAAK1G,KAAKyB,KAAyBqT,EAAM+mC,SAASn1C,GAE/CA,EAAK8e,KAAK,CAAE9hB,MAAAA,IANjBgD,EAAKquB,eASTF,cAAcnuB,GACZ,OACEA,EAAK1G,KAAKA,KAAKkwB,WACdxpB,EAAK1G,KAAKA,KAAKkwB,SAASC,SACzBzpB,EAAK1G,KAAKA,KAAKkwB,SAASlxB,MAI5Bq1B,0BAA0B3wB,EAAO0O,EAASgP,GACxC,IAAItM,EAAQhV,MAAMue,SAASjM,GACvBE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,YACHtM,EAAMkgB,YACN,MACF,IAAK,WACHlgB,EAAMmgB,WACN,MACF,IAAK,cACH,IAAI9nB,GAAU2H,EAAM9U,KAAKA,KAAK6kB,WAAWwJ,YACzCvZ,EAAM3H,OAAO,CAAE,8BAA+BA,IAC9C,MACF,IAAK,eACHmF,EAAMgP,eACNrf,MAAMyF,QAAQ,6BACd,MACF,IAAK,mBACH4K,EAAM+O,mBACN,MACF,IAAK,YACHvM,EAAMogB,cAAc,CAAExxB,MAAAA,IACtB,MACF,IAAK,mBACG3D,KAAKo1B,uBAAuB/iB,IAKxC+iB,6BAA6B/iB,GAC3B,IAAI0C,EAAQhV,MAAMue,SAASjM,SAErB0C,EAAMsgB,eAAe,CAAEC,kBAAkB,IAE/CpzB,MAAMyF,QAAQ,6BAGhB6sB,sBAAsB7wB,EAAO0O,EAASkjB,GACpC,MAAMhjB,EAAQxS,MAAMyf,SAASnN,GACvB+N,EAAepgB,KAAKogB,aAAazc,GACvC,GACE4xB,EAASxxB,SAAS,yBAClBnF,KAAK42B,MACJpV,EACD,CACA,MAAMqV,EAAez1B,KAAK01B,cAAcH,IAAWt0B,MACnD,IAAKw0B,EAAc,OAEnB72B,KAAK42B,IAAIG,aAAaF,EAAcljB,SAC1B3T,KAAK42B,IAAII,gBAAgBH,EAAcljB,SACvC3T,KAAK42B,IAAIK,aAAaJ,EAAcljB,OACzC,CACL,MAAM4c,EAAYnvB,KAAK01B,cAAcH,GACrC,IAAKpG,EAAW,OAEhB/O,QACU7N,EAAMujB,cAAc3G,SACpB5c,EAAMgiB,aAAapF,GAG/BjtB,MAAMyF,QAAQ,6BAGhB4sB,mBAAmB5wB,EAAO0O,EAASkjB,GACjC,MACMhC,EADQxzB,MAAMue,SAASjM,GACRoc,QAAQjqB,QAAQ5C,MAAM4D,GAAMA,EAAE/D,KAAO8zB,IAE1D,IAAKhC,EAAQ,OAEb,MAAMlE,EAAWkE,EAAOtzB,KAAK6R,MAAM+G,MAAMwW,SACrCA,QACIrvB,KAAKw0B,gBAAgB7wB,EAAO0O,EAASgd,UAIvCkE,EAAOnmB,OAAO,CAAEyhB,UAAW0E,EAAOtzB,KAAK4uB,WAC7C3sB,MAAMyF,QAAQ,8BAGhB+tB,cAAcj0B,GACZ,OAAOwtB,OAAOC,cAActtB,MAAM2xB,GAAWA,EAAO9xB,KAAOA,KC/LxD,SAAS+hB,WAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,qBAAsB,CAChD6C,KAAMrG,KAAKY,KAAKE,SACd,wDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,wDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,oBAAqB,CAC/C6C,KAAMrG,KAAKY,KAAKE,SACd,uDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,uDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,mBAAoB,CAC9C6C,KAAMrG,KAAKY,KAAKE,SACd,sDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,sDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,iBAAkB,CAC5C6C,KAAMrG,KAAKY,KAAKE,SACd,oDAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,oDAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTE,EAAeF,MAInBL,KAAKC,SAAS2kB,SAASphB,EAAK,yBAA0B,CACpD6C,KAAMrG,KAAKY,KAAKE,SACd,6DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,6DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,WAAWC,MCxEV,MAAM88C,0BAA0Bl5B,cACrCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,qBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,oBAIb5B,mBAAmB3kB,EAASJ,GAC1BggC,WAAkB5/B,EAASJ,IC3BxB,MAAMg9C,0BAA0Br/B,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GACrBpH,KAAKgH,cAAcuP,kBAAkB,UAIvC0G,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAM9Q,GAEpBmF,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMtT,GAEvB,IAAI21B,EAAUp3B,KAAKq3B,cAActiB,EAAO1C,EAAS,UAC7C4pC,EAAkBj8C,KAAKk8C,oBAAoBnnC,EAAO1C,GAClD4S,EAASjlB,KAAKm8C,WAAWpnC,EAAO1C,GAEhC+pC,EAAQp8C,KAAKw3B,WAAWziB,EAAO1C,GAC/BgqC,EAAUr8C,KAAKs8C,YAAYvnC,EAAO1C,GAClCilB,EAAUt3B,KAAKu3B,YAAYxiB,EAAO1C,GAClC46B,EAASjtC,KAAKu8C,WAAWxnC,EAAO1C,GA0CpC,OAxCArS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAEFp3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,kCACVy8C,GAEFj8C,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACV48C,GAEFp8C,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2BACV68C,GAEFr8C,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV83B,GAEFt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVytC,GAGFjtC,KAAKy3B,sBAAsB1iB,GAEvBlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGTywB,cAActiB,EAAO1C,EAAS3Q,GAC5B,IAAI86C,EAAQ96C,EAAO,IACfkF,EAAS5G,KAAKoZ,wBAAwB,SAEtCqjC,EAAmBz8C,KAAK08C,iBAAiB3nC,EAAO1C,GACpDrS,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVi9C,GAGF,IAAIrlC,EAAcpX,KAAKqX,6BACnBgH,EAAQtJ,EAAM4nC,aAAaj7C,GAC3Bk7C,EACkB,cAApB7nC,EAAM9U,KAAKyB,KACP2c,EAAM5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKqnB,WAChCjJ,EAKN,OAJAjH,EAAY9N,QAAUtJ,KAAK03B,YAAYrlB,EAASuqC,EAAUl7C,GAE1D1B,KAAKwX,gCAAgC5Q,EAAQ41C,EAAOplC,GAE7CxQ,EAGT81C,iBAAiB3nC,EAAO1C,GACtB,IAAIwqC,EAAe78C,KAAKqX,6BAEpBylC,EAAU,CAAC,UAAWzqC,EAAS,WAAW1M,KAAK3F,KAAKoF,WACxD,MAAM23C,EAAgB,CACpBt7C,GAAI,UACJwD,KAAMjF,KAAKR,KAAK,0BAChBiG,aAAcq3C,GAEhBD,EAAavzC,QAAQ5C,KAAKq2C,GAE1B,IAAIC,EAAa,CAAC,QAAS3qC,EAAS,SAAS1M,KAAK3F,KAAKoF,WACvD,MAAM63C,EAAc,CAClBx7C,GAAI,QACJwD,KAAMjF,KAAKR,KAAK,wBAChBiG,aAAcu3C,GAEhBH,EAAavzC,QAAQ5C,KAAKu2C,GAE1B,IAAIC,EAAkB,CAAC,YAAa7qC,EAAS,aAAa1M,KACxD3F,KAAKoF,WAEP,MAAM+3C,EAAmB,CACvB17C,GAAI,YACJwD,KAAMjF,KAAKR,KAAK,mCAChBiG,aAAcy3C,GAEhBL,EAAavzC,QAAQ5C,KAAKy2C,GAE1B,IAAIC,EAAa,CAAC,QAAS/qC,EAAS,SAAS1M,KAAK3F,KAAKoF,WACvD,MAAMi4C,EAAc,CAClB57C,GAAI,QACJwD,KAAMjF,KAAKR,KAAK,wBAChBiG,aAAc23C,GAIhB,OAFAP,EAAavzC,QAAQ5C,KAAK22C,GAEnBR,EAGTX,oBAAoBnnC,EAAO1C,GACzB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,mBACtC9T,EAAY,iBAEZ22C,EAAkB5lC,OAAO7R,QAAQuQ,EAAMknC,iBACvCqB,EAA0Bt9C,KAAKqX,6BAgBnC,OAfAimC,EAAwBh0C,QAAU2yC,EAAgB16C,KAAKC,IACrD,IAAIiE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WACxD,MAAO,CACLH,KAAMjF,KAAKR,KAAKgC,EAAE,GAAG+7C,OACrB93C,aAAcA,EACdhE,GAAID,EAAE,OAIVxB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,kCACV89C,GAGK12C,EAGTu1C,WAAWpnC,EAAO1C,GAChB,IAAIhL,EAAa,SACb/B,EAAY,QAEZsB,EAAS5G,KAAKoZ,wBAAwB/R,GACtC4d,EAASlQ,EAAM4nC,aAAa,SAASl4C,QAAQkV,GAAMA,EAAElY,KAEzDmF,EAAO3E,QAAUgjB,EAAOpjB,OAExB,IAAI27C,EAAa5+C,KAAKY,KAAKE,SAAS,wCAChC+9C,EAAc7+C,KAAKY,KAAKE,SAC1B,yCAGEg+C,EAAcz4B,EAAOxgB,QAAQgC,GAAMA,EAAExG,KAAKgF,KAAK2lB,WAAW4yB,KAC1DG,EAAU,eACd39C,KAAKy3B,sBAAsBkmB,EAASD,GACpC,IAAIE,EAAW59C,KAAKqX,2BAA2BsmC,GAC/CC,EAASrmC,UAAYmmC,EAAY77C,OAAS,EAC1C,IAAIg8C,EAAsB79C,KAAK64B,gBAAgB8kB,EAASD,GACxDE,EAASt0C,QAAUtJ,KAAK03B,YACtBrlB,EACAwrC,EACAv4C,GAGF,IAAIw4C,EAAe74B,EAAOxgB,QAAQgC,GAChCA,EAAExG,KAAKgF,KAAK2lB,WAAW6yB,KAErBM,EAAW,gBACf/9C,KAAKy3B,sBAAsBsmB,EAAUD,GACrC,IAAIE,EAAYh+C,KAAKqX,2BAA2B0mC,GAChDC,EAAUzmC,UAAYumC,EAAaj8C,OAAS,EAC5C,IAAIo8C,EAAuBj+C,KAAK64B,gBAAgBklB,EAAUD,GAC1DE,EAAU10C,QAAUtJ,KAAK03B,YACvBrlB,EACA4rC,EACA34C,GAGF,IAAI44C,EAAcj5B,EAAOxgB,QACtBgC,KAEGA,EAAExG,KAAKgF,KAAK2lB,WAAW4yB,IACvB/2C,EAAExG,KAAKgF,KAAK2lB,WAAW6yB,KACU,WAA9Bh3C,EAAExG,KAAKA,KAAK83C,QAAQ94C,QAEzBk/C,EAAU,eACdn+C,KAAKy3B,sBAAsB0mB,EAASD,GACpC,IAAIE,EAAiBp+C,KAAKqX,2BAA2B8mC,GACjDE,EAAsBr+C,KAAK64B,gBAAgBslB,EAASD,GACxDE,EAAe7mC,UAAY2mC,EAAYr8C,OAAS,EAChDu8C,EAAe90C,QAAUtJ,KAAK03B,YAC5BrlB,EACAgsC,EACA/4C,GAGF,IAAIg5C,EAAiBr5B,EAAOxgB,QACzBgC,KAEGA,EAAExG,KAAKgF,KAAK2lB,WAAW4yB,IACvB/2C,EAAExG,KAAKgF,KAAK2lB,WAAW6yB,KACU,WAA9Bh3C,EAAExG,KAAKA,KAAK83C,QAAQ94C,QAEzBs/C,EAAa,kBACjBv+C,KAAKy3B,sBAAsB8mB,EAAYD,GACvC,IAAIE,EAAoBx+C,KAAKqX,2BAA2BknC,GACxDC,EAAkBjnC,UAAY+mC,EAAez8C,OAAS,EACtD,IAAI48C,EAAyBz+C,KAAK64B,gBAChC0lB,EACAD,GA6BF,OA3BAE,EAAkBl1C,QAAUtJ,KAAK03B,YAC/BrlB,EACAosC,EACAn5C,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVo+C,GAEF59C,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACVw+C,GAEFh+C,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACV4+C,GAEFp+C,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACVg/C,GAGK53C,EAIT6wB,sBAAsBh2B,EAAI4c,GACxB,IAAIle,EAAcke,GAAO9c,KAAKkF,IACrB,CAAEhF,GAAIgF,EAAEhF,GAAIxC,MAAOwH,EAAExB,SAE1B9E,GAAa0B,OAAS,GACxB7B,KAAKgH,cAAc6O,eAAepU,EAAItB,GAG1C04B,gBAAgBxxB,EAAY4d,GAC1B,IAAI6T,EAAgB94B,KAAKgH,cAAc0O,iBAAiBrO,GACpDT,EAASqe,EAAOxgB,QAAQgC,KAAQA,IASpC,OARIqyB,EAAcj3B,OAAS,IAEvB+E,EADE5G,KAAKgH,cAAce,YAAYV,GACxB4d,EAAOxgB,QAAQgC,IAAOqyB,EAAc/0B,SAAS0C,EAAExB,QAE/CggB,EAAOxgB,QAAQgC,GAAMqyB,EAAc/0B,SAAS0C,EAAExB,SAIpD2B,EAGT4wB,WAAWziB,EAAO1C,GAChB,IAAI/M,EAAY,QACZsB,EAAS5G,KAAKoZ,wBAAwB,UAEtC4Q,EAASjV,EAAM4nC,aAAa,SAE5B+B,EAAU10B,EAAOvlB,QAAQkV,GAAiC,UAA3BA,EAAE1Z,KAAKA,KAAKkpC,KAAKlqC,QAChD0/C,EAAgB3+C,KAAKqX,6BACzBsnC,EAAcr1C,QAAUtJ,KAAK03B,YAAYrlB,EAASqsC,EAASp5C,GAE3DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wBACVm/C,GAGF,IACIC,EADQ50B,EAAOvlB,QAAQkV,GAAiC,UAA3BA,EAAE1Z,KAAKA,KAAKkpC,KAAKlqC,QACrBmH,QAAO,CAACy4C,EAAQhzB,KAC3C,IAAIizB,EAAWjzB,EAAM5rB,KAAKA,KAAKkpC,KAAKlqC,MAOpC,OANK4/C,EAAO9b,eAAe+b,KACzBD,EAAOC,GAAY,IAGrBD,EAAOC,GAAUp4C,KAAKmlB,GAEfgzB,IACN,IAgBH,OAdAxoC,OAAO7R,QAAQo6C,GAAkBp4C,SAASu4C,IACxC,IAAI3nC,EAAcpX,KAAKqX,6BACvBD,EAAY9N,QAAUtJ,KAAK03B,YACzBrlB,EACA0sC,EAAa,GACbz5C,GAEFtF,KAAKwX,gCACH5Q,EACAm4C,EAAa,GACb3nC,MAIGxQ,EAGT01C,YAAYvnC,EAAO1C,GACjB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,WAEtCijC,EAAUtnC,EAAM4nC,aAAa,UAE7BqC,EAAY3C,EAAQ53C,QAAQkV,GAAuB,aAAjBA,EAAEjY,KAAKzC,QACzCggD,EAAmBj/C,KAAKqX,6BAC5B4nC,EAAiB31C,QAAUtJ,KAAK03B,YAAYrlB,EAAS2sC,EAAW15C,GAEhEtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACVy/C,GAGF,IACIC,EADW7C,EAAQ53C,QAAQkV,GAAuB,aAAjBA,EAAEjY,KAAKzC,QACTmH,QAAO,CAACy4C,EAAQM,KACjD,IAAIC,EAAcD,EAAOl/C,KAAKA,KAAKyB,KAAKzC,MAOxC,OANK4/C,EAAO9b,eAAeqc,KACzBP,EAAOO,GAAe,IAGxBP,EAAOO,GAAa14C,KAAKy4C,GAElBN,IACN,IAgBH,OAdAxoC,OAAO7R,QAAQ06C,GAAqB14C,SAAS64C,IAC3C,IAAIjoC,EAAcpX,KAAKqX,6BACvBD,EAAY9N,QAAUtJ,KAAK03B,YACzBrlB,EACAgtC,EAAgB,GAChB/5C,GAEFtF,KAAKwX,gCACH5Q,EACAy4C,EAAgB,GAChBjoC,MAIGxQ,EAGT2wB,YAAYxiB,EAAO1C,GACjB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,WAEtCke,EAAUviB,EAAM4nC,aAAa,UAE7B2C,EAAkBhoB,EAAQ7yB,QAAQiO,GAAMA,EAAE6sC,UAAUtgD,QACpDugD,EAAmBx/C,KAAKqX,6BAC5BmoC,EAAiBl2C,QAAUtJ,KAAK03B,YAC9BrlB,EACAitC,EACAh6C,GAGF,IAAIm6C,EAAoBnoB,EAAQ7yB,QAAQiO,IAAOA,EAAE6sC,UAAUtgD,QACvDygD,EAAqB1/C,KAAKqX,6BAkB9B,OAjBAqoC,EAAmBp2C,QAAUtJ,KAAK03B,YAChCrlB,EACAotC,EACAn6C,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACVggD,GAEFx/C,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACVkgD,GAGK94C,EAGT21C,WAAWxnC,EAAO1C,GAChB,IAAI/M,EAAY,QACZsB,EAAS5G,KAAKoZ,wBAAwB,UAEtC6zB,EAASl4B,EAAM4nC,aAAa,SAASl4C,QAAQkV,GAAMA,EAAEgmC,WAErDC,EAAiB3S,EAAOxoC,QAAQiO,GAAMA,EAAE6sC,UAAUtgD,QAClDugD,EAAmBx/C,KAAKqX,6BAC5BmoC,EAAiBl2C,QAAUtJ,KAAK03B,YAC9BrlB,EACAutC,EACAt6C,GAGF,IAAIu6C,EAAmB5S,EAAOxoC,QAAQiO,IAAOA,EAAE6sC,UAAUtgD,QACrDygD,EAAqB1/C,KAAKqX,6BAkB9B,OAjBAqoC,EAAmBp2C,QAAUtJ,KAAK03B,YAChCrlB,EACAwtC,EACAv6C,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2BACVggD,GAEFx/C,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACVkgD,GAGK94C,EAGT8wB,YAAYrlB,EAAS0mB,EAASr3B,GAC5B,OAAOq3B,EAAQx3B,KAAKoY,IAClB,IAAIlU,EAAe,CAAC/D,EAAM2Q,EAASsH,EAAElY,IAAIkE,KAAK3F,KAAKoF,WAC/CQ,EAAM5F,KAAKiwB,UAAUtW,GACzB,MAAO,CAAE1U,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAElY,GAAImE,IAAKA,MAItEqqB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE7CgB,GAAQ7C,SAAS,8BACtB6C,GAAQ7C,SAAS,kCACf,GACA6C,GCjdD,MAAMk5C,8BAA8B1gC,YACzCxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GACvB0tC,EAAa,CAAEC,SAAUr8C,EAAMud,UAEnC,GAAkB,mBAAd5b,EACF,OAAOyP,EACJkrC,oBAAoB5+B,EAAU0+B,GAC9B/9B,MAAMk+B,GAAcnrC,EAAMorC,UAAUD,KAEzC,GAAIlgD,KAAK6gB,eAAgB,OAAO7gB,KAAK2gB,aAAatO,EAASgP,GAE3D,IAAI1a,EAAOoO,EAAMsJ,MAAMvf,IAAIuiB,GAG3B,GAAIrhB,KAAKmgB,WAAY,OAAOxZ,EAAKy5C,WAEjC,OAAQ96C,GACN,IAAK,QACH,OAAOtF,KAAKqgD,MAAMtrC,GACpB,IAAK,UACH,OAAO/U,KAAK88C,QAAQ/nC,GACtB,IAAK,QACH,OAAO/U,KAAKsgD,MAAMvrC,GACpB,IAAK,YACH,OAAO/U,KAAKugD,UAAUxrC,GACxB,IAAK,SAAU,CACb,IAAIyrC,EAAUzrC,EAAM0rC,YAAY95C,EAAMo5C,GACtC,IAAMp5C,EAAK+5C,SAAY/5C,EAAKg6C,OAAO1hD,MACjC,OAAOuhD,EAAQx+B,MAAMk+B,GAAcnrC,EAAM6rC,WAAWV,KAEpD,MAGJ,IAAK,QACH,OAAOlgD,KAAK6gD,UAAU9rC,EAAOpO,EAAMo5C,GACrC,IAAK,SACH,OAAOhrC,EACJ+rC,YAAYn6C,EAAMo5C,GAClB/9B,MAAMk+B,GAAcnrC,EAAMgsC,WAAWb,KAC1C,IAAK,QACL,IAAK,SACH,OAAIv5C,EAAK44C,UAAUtgD,MACV8V,EACJisC,WAAWr6C,EAAMo5C,GACjB/9B,MAAMk+B,GAAcnrC,EAAMksC,UAAUf,KAC7Bv5C,EAAKy5C,WACnB,IAAK,QACH,OAAOrrC,EACJmsC,WAAWv6C,EAAMo5C,GACjB/9B,MAAMk+B,GAAcnrC,EAAMorC,UAAUD,MAI7CG,MAAMtrC,GACJ,IAAImQ,EAAQnQ,EACT4nC,aAAa,SACb/6C,MAAM6E,GAAMA,EAAExB,MAAQrG,KAAKY,KAAKE,SAAS,gBACxCwlB,EACFnQ,EAAMmsC,WAAWh8B,GAAOlD,MAAMk+B,IAC5BnrC,EAAMorC,UAAUD,MAGlBnrC,EAAMkrC,oBAAoB,KAAM,CAAEI,OAAO,IAAQr+B,MAAMk+B,IACrDnrC,EAAMorC,UAAUD,MAKtBpD,QAAQ/nC,GACN,IAAI+nC,EAAUl+C,KAAKuiD,OAAOx9B,OAAOy9B,YAAYtE,QAC7C/nC,EAAM0rC,YAAY3D,GAAS96B,MAAMk+B,IAC/BnrC,EAAM6rC,WAAWV,MAIrBI,MAAMvrC,GACJ,IAAIurC,EAAQ1hD,KAAKuiD,OAAOx9B,OAAOy9B,YAAYd,MAC3CvrC,EAAMisC,WAAWV,GAAOt+B,MAAMk+B,IAC5BnrC,EAAMksC,UAAUf,MAIpBK,UAAUxrC,GACR,IAAIssC,EAASziD,KAAKuiD,OAAOx9B,OAAOy9B,YAAYC,OAC5CtsC,EAAM0rC,YAAYY,GAAQr/B,MAAMk+B,IAC9BnrC,EAAM6rC,WAAWV,MAIrBW,UAAU9rC,EAAOib,EAAU+vB,GACzB,OAAIhrC,EAAMusC,YAAoBvsC,EAAMusC,YAAYtxB,EAAU+vB,GAC9ChrC,EAAM6L,MAAM0gC,YAAYtxB,EAAU+vB,ICvG3C,MAAMwB,4BAA4B1+B,cACvCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,eAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,sBAIb5B,mBAAmB3kB,EAASJ,KC1BvB,MAAMwiD,4BAA4B7kC,cACvC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAI4N,EAAUjC,EAAMwC,MAAMtT,GAC1BmF,EAAO4N,QAAUA,EACjB,IAAIO,EAAQxC,EAAMwC,MACd0sC,EAAK1sC,EAAM9U,KAAKA,KAAKyhD,QAAQD,GAEjC,IAAK1sC,EAAO,OAAOnO,EAEnB,OAAQmO,EAAM9U,KAAKyB,MACjB,IAAK,QACH1B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACVQ,KAAK2hD,eAAeF,EAAIjtC,IAE1B,MACF,IAAK,OACHxU,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACVQ,KAAK2hD,eAAeF,EAAGG,MAAOH,EAAGG,MAAMC,aAEzC7hD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,uBACVQ,KAAK8hD,cAAcL,EAAIjtC,IAEzBxU,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACVQ,KAAK+hD,iBAAiBN,EAAGO,QAAQC,UAAWztC,IAE9CxU,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACVQ,KAAKkiD,iBAAiBT,EAAGO,QAAQG,UAAW3tC,IAE9C,MACF,IAAK,MACHxU,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wBACVQ,KAAKoiD,iBAAiBrtC,EAAOP,IAE/BxU,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2BACVQ,KAAKqiD,oBAAoBttC,EAAOP,IAOtC,OAFI3N,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGT07C,YAAYC,EAAYj9C,EAAWkP,EAAS6M,EAAUmhC,GACpD,IAAIh4C,EAASxK,KAAKyd,wBAQlB,OAPAjT,EAAOvF,KAAOs9C,EACd/3C,EAAO/E,aAAe,CACpBH,EACAkP,EACA6M,EACAohC,KAAKC,UAAUF,GAAkB,KACjC78C,KAAK3F,KAAKoF,WACLoF,EAGTm4C,gBAAgB19C,EAAM4yC,EAAU4J,EAAIjtC,GAClC,IAAI5N,EAAS5G,KAAKqX,6BAYlB,OATAzQ,EAAO3B,KAAOA,EACd2B,EAAO0C,QAAUm4C,EACdh9C,QAAQkC,IACP,GAAY,MAARA,EAAc,OAAOA,EAAKi8C,OAAS/K,KAExCt2C,KAAKoF,GACG3G,KAAKsiD,YAAY37C,EAAKk8C,KARrB,OAQkCruC,EAAS7N,EAAKk7C,cAGrDj7C,EAGTk8C,mBAAmB79C,EAAM4yC,EAAU9iC,EAAOP,GACxC,IAAI5N,EAAS5G,KAAKqX,6BAclB,OAXAzQ,EAAO3B,KAAOA,EACd2B,EAAO0C,QAAUyL,EAAM9U,KAAKoe,MACzB5Z,QAAQkC,IACP,GAAY,MAARA,EAAc,MAA0B,gBAAnBA,EAAK1G,KAAKyB,QAEpC+C,QAAQkC,GACAA,EAAK1G,KAAKA,KAAKyB,OAASm2C,IAEhCt2C,KAAKoF,GACG3G,KAAKsiD,YAAY37C,EAAK1B,KAXrB,OAWkCuP,EAAS7N,EAAKlF,MAErDmF,EAGT+6C,eAAeF,EAAIjtC,GACjB,IAAI5N,EAAS5G,KAAKoZ,wBAAwB,SAW1C,MATA,CACEpZ,KAAK+iD,mBAAmBtB,EAAIjtC,GAC5BxU,KAAKgjD,oBAAoBvB,EAAIjtC,GAC7BxU,KAAKijD,sBAAsBxB,EAAIjtC,GAC/BxU,KAAKkjD,wBAAwBzB,EAAIjtC,IACjChO,SAASyrB,IACTjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,EAGTw7C,iBAAiBrtC,EAAOP,GACtB,IAAI5N,EAAS5G,KAAKoZ,wBAAwB,QAM1C,MAJA,CAACpZ,KAAKmjD,iBAAiB3uC,IAAUhO,SAASyrB,IACxCjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,EAGTy7C,oBAAoBttC,EAAOP,GACzB,IAAI5N,EAAS5G,KAAKoZ,wBAAwB,WAY1C,MAVA,CACEpZ,KAAKojD,iBAAiBruC,EAAOP,GAC7BxU,KAAKqjD,eAAetuC,EAAOP,GAC3BxU,KAAKsjD,mBAAmBvuC,EAAOP,GAC/BxU,KAAKujD,iBAAiBxuC,EAAOP,GAC7BxU,KAAKwjD,gBAAgBzuC,EAAOP,IAC5BhO,SAASyrB,IACTjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,EAGTw8C,iBAAiBruC,EAAOP,GACtB,OAAOxU,KAAK8iD,mBACV9iD,KAAKR,KAAK,0BACV,SACAuV,EACAP,GAIJgvC,gBAAgBzuC,EAAOP,GACrB,OAAOxU,KAAK8iD,mBACV9iD,KAAKR,KAAK,yBACV,QACAuV,EACAP,GAIJ+uC,iBAAiBxuC,EAAOP,GACtB,OAAOxU,KAAK8iD,mBACV9iD,KAAKR,KAAK,0BACV,SACAuV,EACAP,GAIJ6uC,eAAetuC,EAAOP,GACpB,OAAOxU,KAAK8iD,mBACV9iD,KAAKR,KAAK,wBACV,OACAuV,EACAP,GAIJ8uC,mBAAmBvuC,EAAOP,GACxB,OAAOxU,KAAK8iD,mBACV9iD,KAAKR,KAAK,4BACV,WACAuV,EACAP,GAIJuuC,mBAAmBtB,EAAIjtC,GACrB,OAAOxU,KAAK2iD,gBACV3iD,KAAKR,KAAK,gCACV,QACAiiD,EAAGgC,QACHjvC,GAIJwuC,oBAAoBvB,EAAIjtC,GACtB,IAAI5N,EAAS5G,KAAKqX,6BAGlBzQ,EAAOnF,GAAK,SACZmF,EAAO3B,KAAOjF,KAAKR,KAAK,0BAExB,IAAIkkD,EAAcjC,EAAGkC,SAClBl/C,QAAQkC,IACP,GAAY,MAARA,EAAc,MAAqB,WAAdA,EAAKi8C,QAE/BrhD,KAAKu2B,IACJ,IAAIve,EAASvZ,KAAKqX,6BAClBkC,EAAOtU,KAAO6yB,EAAO+qB,KAErB,IAAK,IAAIlpC,EAAI,EAAGA,EAAIme,EAAO8rB,YAAajqC,IAAK,CAC3C,IAAI6oC,EAAS,CAAEjqB,KAAM,GAAG5e,KACpBnP,EAASxK,KAAKsiD,YAChB,GAAGtiD,KAAKR,KAAK,0BAA0Bma,EAAI,IAhBvC,OAkBJnF,EACAsjB,EAAO+pB,WACPW,GAEFjpC,EAAOjQ,QAAQ5C,KAAK8D,GAGtB,OAAO+O,KAOX,OAJAvZ,KAAKwX,gCAEL5Q,EAAOgS,cAAgB8qC,EAEhB98C,EAGTs8C,wBAAwBzB,EAAIjtC,GAC1B,OAAOxU,KAAK2iD,gBACV3iD,KAAKR,KAAK,0BACV,eACAiiD,EAAGO,QAAQ6B,QACXrvC,GAIJyuC,sBAAsBxB,EAAIjtC,GACxB,OAAOxU,KAAK2iD,gBACV3iD,KAAKR,KAAK,uBACV,aACAiiD,EAAGO,QAAQ8B,KACXtvC,GAIJstC,cAAcL,EAAIjtC,GAChB,IAAI5N,EAAS5G,KAAKoZ,wBAAwB,QAW1C,MATA,CACEpZ,KAAKmjD,iBAAiB3uC,GACtBxU,KAAK+jD,iBAAiBvvC,GACtBxU,KAAKgkD,oBAAoBvC,EAAIjtC,GAC7BxU,KAAKikD,sBAAsBxC,EAAGO,QAAQkC,MAAO1vC,IAC7ChO,SAASyrB,IACTjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,EAGTu8C,iBAAiB3uC,GACf,IAAI5N,EAAS5G,KAAKqX,6BAGlBzQ,EAAOnF,GAAK,OACZmF,EAAO3B,KAAOjF,KAAKR,KAAK,uBAExB,IAYI2kD,EAPiB,CACnB,CAAEl/C,KANOjF,KAAKR,KAAK,uBAMLiC,GAAI,QAClB,CAAEwD,KANUjF,KAAKR,KAAK,oCAMLiC,GAAI,OACrB,CAAEwD,KANUjF,KAAKR,KAAK,0BAMLiC,GAAI,OACrB,CAAEwD,KANcjF,KAAKR,KAAK,8BAMLiC,GAAI,QAGMF,KAAKowB,GAC7B3xB,KAAKsiD,YAAY3wB,EAAW1sB,KAlBzB,OAkBsCuP,EAASmd,EAAWlwB,MAKtE,OAFAmF,EAAO0C,QAAU66C,EAEVv9C,EAGTm9C,iBAAiBvvC,GACf,IAAI5N,EAAS5G,KAAKqX,6BAGlBzQ,EAAOnF,GAAK,OACZmF,EAAO3B,KAAOjF,KAAKR,KAAK,uBAExB,IAQI4kD,EALiB,CACnB,CAAEn/C,KAJOjF,KAAKR,KAAK,uBAILS,KAAM,cACpB,CAAEgF,KAJajF,KAAKR,KAAK,6BAILS,KAAM,eAGKsB,KAAKowB,GAC7B3xB,KAAKsiD,YAAY3wB,EAAW1sB,KAdzB,OAcsCuP,EAASmd,EAAW1xB,QAKtE,OAFA2G,EAAO0C,QAAU86C,EAEVx9C,EAGTo9C,oBAAoBvC,EAAIjtC,GACtB,IAAI5N,EAAS5G,KAAKqX,6BACdgtC,EAAY5C,EAAGG,MAAM0C,YAazB,OAZA19C,EAAO3B,KAAO,eACd2B,EAAO0C,QAAU+6C,EAAU9iD,KAAK2vB,IAC9B,IAAIsxB,EAAS,GAEb,OADAA,EAAO+B,MAAQ9C,EAAGG,MAAMC,WACjB7hD,KAAKsiD,YACVpxB,EAAM2xB,KACN,YACAruC,EACA0c,EAAM2wB,WACNW,MAGG57C,EAGTq9C,sBAAsBO,EAAOhwC,GAC3B,IAAI5N,EAAS5G,KAAKqX,6BAEdwB,EAAO2rC,EAAMC,WAejB,OAbA79C,EAAO3B,KAAO4T,EAAKgqC,KAEK,gBAApBhqC,EAAK6rC,aACP99C,EAAO0C,QAAQ5C,KACb1G,KAAKsiD,YAAYzpC,EAAK6rC,YAAa,cAAelwC,EAAS,KAG3DqE,EAAK8rC,YACP/9C,EAAO0C,QAAQ5C,KACb1G,KAAKsiD,YAAYzpC,EAAK8rC,WAAY,aAAcnwC,EAAS,KAItD5N,EAGTm7C,iBAAiBE,EAAWztC,GAC1B,IAAI5N,EAAS5G,KAAKoZ,0BA4BlB,OAzBAxS,EAAOnF,GAAK,UACZmF,EAAO3B,KAAOjF,KAAKR,KAAK,0BAENyiD,EAAU1gD,KAAI,CAAC02C,EAAOt+B,KACtC,IAAIJ,EAASvZ,KAAKqX,2BAA2B,SAAWsC,GAcxD,OAbAJ,EAAOtU,KAAOgzC,EAAM2M,UAEpBrrC,EAAOjQ,QAAU2uC,EAAM4M,MAAMpgD,QAAQ0tC,GAAyB,OAAhBA,EAAK2S,SAAiBvjD,KACjE4wC,GACQnyC,KAAKsiD,YACVnQ,EAAK2S,OAAOjC,KAZR,OAcJruC,EACA29B,EAAK2S,OAAOjD,cAKXtoC,KAGG/S,SAASyrB,IACnBjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,EAGTs7C,iBAAiB6C,EAASvwC,GACxB,IAAI5N,EAAS5G,KAAKoZ,0BA+ClB,OA5CAxS,EAAOnF,GAAK,UACZmF,EAAO3B,KAAOjF,KAAKR,KAAK,0BAENulD,EACfC,SAAS/M,GAAUA,EAAMgN,SACzB1jD,KAAK2jD,IACJ,IAAI3rC,EAASvZ,KAAKqX,2BAA2B6tC,EAAOrD,YACpDtoC,EAAOtU,KAAOigD,EAAOrC,KAErB,IAAIsC,EAAcD,EAAOE,QAAQ7jD,KAAI,CAACiJ,EAAQmP,KAC5C,IAAI6oC,EAAS,CACbI,KAAc,UAEd,OADAJ,EAAO6C,MAAQ1rC,EACR3Z,KAAKsiD,YACV93C,EAAOq4C,KACP,aACAruC,EACA0wC,EAAOrD,WACPW,MAIA8C,EAAcJ,EAAOK,YAAYhkD,KAAI,CAACikD,EAAY7rC,KACpD,IAAI6oC,EAAS,CACbI,KAAc,cAEd,OADAJ,EAAO6C,MAAQ1rC,EACR3Z,KAAKsiD,YACVkD,EAAW3C,KACX,aACAruC,EACA0wC,EAAOrD,WACPW,MAMJ,OAFAjpC,EAAOjQ,QAAU67C,EAAYM,OAAOH,GAE7B/rC,KAGC/S,SAASyrB,IACnBjyB,KAAKwX,gCAAgC5Q,EAAQqrB,EAAOhtB,KAAMgtB,MAGrDrrB,GClcJ,MAAM8+C,8BAA8BtmC,YACzCxf,cACEG,QAIFue,SAAS9J,GACP,OAAOhC,OAAOjG,OAAOkG,WAAW7Q,MAAM8Q,GAAMA,EAAEzS,KAAKuU,UAAYA,KAAUO,MAI3EkL,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QAAiC,GAAlBsf,EAAQtf,QACjC9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpBwkC,EAAUxkC,EAAQ,GAClBE,EAAWF,EAAQ,GACnBqhC,EAASC,KAAKmD,MAAMzkC,EAAQ,IAGhC,GAAInhB,KAAK6gB,gBADM,CAAC,QACoB9c,SAASuB,GAC3C,OAAOtF,KAAK2gB,aAAaglC,EAAStkC,GAEpC,OAAQ/b,GACN,IAAK,OACHtF,KAAK6lD,eAAeF,EAAStkC,GAC7B,MACF,IAAK,OACHrhB,KAAK8lD,eAAeH,EAAStkC,GAC7B,MACF,IAAK,OACHrhB,KAAK+lD,0BAA0BJ,EAAStkC,EAAUmhC,GAClD,MACF,IAAK,YACHxiD,KAAKgmD,oBAAoBxD,EAAO+B,MAAOljC,GACvC,MACF,IAAK,aACHrhB,KAAKimD,qBAAqBN,GAC1B,MACF,IAAK,cACH3lD,KAAKkmD,sBAAsBP,GAC3B,MACF,IAAK,aACH3lD,KAAKmmD,qBAAqBR,EAAStkC,EAAUmhC,IAKnDqD,eAAeF,EAASn7C,GACtB5L,KAAKwnD,OAAOC,iBAAiBV,EAAS,MAAMn7C,KAG9Cs7C,eAAeH,EAASn7C,GACtB5L,KAAKwnD,OAAOC,iBAAiBV,EAAS,MAAMn7C,KAG9Cu7C,0BAA0BJ,EAASpmC,EAAQijC,GACzC5jD,KAAKwnD,OAAOE,iBAAiBX,EAASpmC,EAAQijC,GAGhDwD,oBAAoBO,EAASC,GAC3B5nD,KAAKwnD,OAAOE,iBAAiBC,EAASC,GAGxCP,qBAAqBN,GACnB/mD,KAAKwnD,OAAOK,uBAAuBd,GAGrCO,sBAAsBP,GACpB/mD,KAAKwnD,OAAOM,wBAAwBf,GAGtCQ,qBAAqBR,EAASpmC,EAAQijC,GACpC5jD,KAAKwnD,OAAOO,uBACVhB,EACApmC,EACAijC,EAAOI,KACPJ,EAAO6C,QC9EN,MAAMuB,4BAA4B/jC,cACvCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAGhC,OAFA5I,QAAQC,IAAI,WACQ,IAAIke,oBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,eAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,sBAIb5B,mBAAmB3kB,EAASJ,KC3BvB,MAAM6nD,2BAA2BlqC,cACtC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAM9Q,GAEpBmF,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,OAAKA,GAELnO,EAAO4N,QAAUO,EAAMtT,GAEvBzB,KAAK8mD,eAAelgD,EAAQyL,EAAS0C,GACrC/U,KAAK+mD,WAAWngD,EAAQyL,EAAS0C,GACjC/U,KAAKgnD,aAAapgD,EAAQyL,EAAS0C,GACnC/U,KAAKinD,qBAAqBrgD,EAAQyL,EAAS0C,GAC3C/U,KAAKknD,YAAYtgD,EAAQyL,EAAS0C,GAClC/U,KAAKmnD,WAAWvgD,EAAQyL,EAAS0C,GACjC/U,KAAKonD,cAAcxgD,EAAQyL,EAAS0C,GACpC/U,KAAKqnD,wBAAwBzgD,EAAQyL,EAAS0C,GAC9C/U,KAAKic,cAAcrV,EAAQyL,EAAS0C,GAEhClO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,GAhBYA,EAoBrBkgD,eAAe/gC,EAAM1T,EAAS0C,GAC5B,MAAMuyC,EAAOvyC,EAAM9U,KAAKA,KAAK6kB,WACvBxf,EAAY,YAEZiU,EAASvZ,KAAKqX,2BAA2B,cAC/ChB,OAAO7R,QAAQ8iD,GAAM9gD,SAAS6E,IAC5B,MAAMzH,EAAMyH,EAAE,GACRpL,EAAOoL,EAAE,GAETk8C,EAAWt4B,OAAOu4B,MAAM1iC,WAAWlhB,GAEzC,IAAIqB,EAEFA,EADE4B,IAAa,wBACR7G,KAAKR,KAAK+nD,EAASE,OAChBznD,KAAKR,KAAK+nD,EAASG,MAE/B,MACMl9C,EAAS,CAAEvF,KAAMA,EAAMQ,aADR,CAACH,EAAW+M,EAASzO,GAAK+B,KAAK3F,KAAKoF,WACA3D,GAAImC,GAEvDg7B,EAAM5+B,KAAK2nD,gBAAgB1nD,EAAK2nD,IAAK3nD,EAAK,aAChDuK,EAAO8Q,MAAQsjB,EAEfrlB,EAAOjQ,QAAQ5C,KAAK8D,MAGtB,MAAM6uC,EAAUr5C,KAAKR,KAAK,6BAC1B,IAAI6a,EAAMra,KAAKoZ,wBAAwB,cACvCpZ,KAAKwX,gCAAgC6C,EAAKg/B,EAAS9/B,GACnDvZ,KAAKqZ,yBAAyB0M,EAAMszB,EAASh/B,GAI/C0sC,WAAWhhC,EAAM1T,EAAS0C,GACxB,MAAMsF,EAAMra,KAAKoZ,wBAAwB,UACnC9T,EAAY,QACZ2f,EAASlQ,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAMA,EAAEjY,OAAS4D,IAEnDiU,EAASvZ,KAAKqX,2BAA2B,UAC/C4N,EAAOze,SAASC,IACd,MAAMhB,EAAe,CAACH,EAAW+M,EAAS5L,EAAEhF,IAAIkE,KAAK3F,KAAKoF,WACpDoF,EAAS,CAAEvF,KAAMwB,EAAExB,KAAMQ,aAAcA,EAAchE,GAAIgF,EAAEhF,IAEjE,IAAIm9B,EAAM5+B,KAAK6nD,UAAUphD,EAAExG,KAAK2nD,IAAKnhD,EAAExG,KAAK,aAC5CuK,EAAO8Q,MAAQsjB,EAEfrlB,EAAOjQ,QAAQ5C,KAAK8D,MAGtB,MAAMs9C,EAAY9nD,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC6C,EAAKytC,EAAWvuC,GACrDvZ,KAAKqZ,yBAAyB0M,EAAM+hC,EAAWztC,GAIjD8sC,WAAWphC,EAAM1T,EAAS0C,GACxB,MAAMwV,EAASxV,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OAChD,GAAsB,IAAlB6oB,EAAO1oB,OAAc,OAEzB,MAAMyD,EAAY,cACZ+U,EAAMra,KAAKoZ,wBAAwB9T,GAEnCyiD,EAAKhzC,EAAM9U,KAAKA,KAAK+nD,YACvBD,IAAI1tC,EAAIiB,MAAQ,GAAGysC,EAAG9oD,SAAS8oD,EAAG57C,OAEtCnM,KAAKioD,uBACH5tC,EACAhI,EACA01C,EACA/nD,KAAKR,KAAK,yBACV8F,GAGF,MAAM4iD,EAAaloD,KAAKR,KAAK,yBAEvB2oD,EAAgBnoD,KAAKooD,aAAa79B,GACxClU,OAAO7R,QAAQ2jD,GAAe3hD,SAAS6hD,IACrC,MAAMzkD,EAAMykD,EAAE,GACRC,EAAcD,EAAE,GACtBroD,KAAKuoD,sBAAsBl2C,EAASzO,EAAK0kD,EAAahjD,EAAW+U,MAGnEra,KAAKqZ,yBAAyB0M,EAAMmiC,EAAY7tC,GAIlD+tC,aAAa79B,GAGX,MAFmB,IAAI,IAAI6H,IAAI7H,EAAOhpB,KAAKoY,GAAMA,EAAE1Z,KAAKA,KAAKs4B,SAE3CnyB,QAAO,CAAC2xC,EAASrzC,KACjC,IAAI8jD,EAAY9jD,EAOhB,MANkB,KAAd8jD,IAAkBA,EAAY,WAE7BzQ,EAAQhV,eAAer+B,KAAIqzC,EAAQyQ,GAAa,IAErDzQ,EAAQyQ,GAAW9hD,QAAQ6jB,EAAO9lB,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKs4B,OAAS7zB,KAE9DqzC,IACN,IAILqP,cAAcrhC,EAAM1T,EAAS0C,GAC3B,MAAMsF,EAAMra,KAAKoZ,wBAAwB,aAEzC,IAAIiF,EAAQtJ,EAAM9U,KAAKoe,MAEC,cAApBtJ,EAAM9U,KAAKyB,OACb2c,EAAQA,EAAM5Z,QAAQkV,GAAMA,EAAE1Z,KAAKA,KAAKqnB,YAE1C,MAAM8P,EAAU/Y,EAAM5Z,QAAQkV,GAAiB,WAAXA,EAAEjY,OAChC+mD,EAAczoD,KAAKR,KAAK,0BAC9BQ,KAAK0oD,oBAAoBr2C,EAASo2C,EAAarxB,EAAS,UAAW/c,GAEnE,MAAM0wB,EAAS1sB,EAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OAC/BinD,EAAa3oD,KAAKR,KAAK,yBAC7BQ,KAAK0oD,oBAAoBr2C,EAASs2C,EAAY5d,EAAQ,SAAU1wB,GAEhE,MAAMi/B,EAAUj7B,EAAM5Z,QAAQkV,GAAiB,WAAXA,EAAEjY,OAChCknD,EAAc5oD,KAAKR,KAAK,0BAC9BQ,KAAK0oD,oBAAoBr2C,EAASu2C,EAAatP,EAAS,UAAWj/B,GAEnE,MAAM+jB,EAAO/f,EAAM5Z,QAAQkV,GAAiB,SAAXA,EAAEjY,MAA8B,SAAXiY,EAAEjY,OAClDmnD,EAAW7oD,KAAKR,KAAK,uBAC3BQ,KAAK0oD,oBAAoBr2C,EAASw2C,EAAUzqB,EAAM,OAAQ/jB,GAE1Dra,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,4BACV6a,GAKJ4sC,qBAAqBlhC,EAAM1T,EAAS0C,GAClC,IAAIsF,EAAMra,KAAKoZ,wBAAwB,UAEnC0vC,EAAa9oD,KAAKR,KAAK,yBAC3BQ,KAAKioD,uBACH5tC,EACAhI,EACA0C,EAAM9U,KAAKA,KAAK8oD,OAChBD,EACA,UAGF,IAAIE,EAAchpD,KAAKR,KAAK,0BAC5BQ,KAAKioD,uBACH5tC,EACAhI,EACA0C,EAAM9U,KAAKA,KAAKgpD,QAChBD,EACA,WAGFhpD,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,mCACV6a,GAKJ4tC,uBAAuB9+C,EAAUkJ,EAAS62C,EAAWjkD,EAAMK,GACzD,IAAK4jD,GAAcA,EAAU/8C,IAAM,GAAK+8C,EAAUjqD,MAAQ,EAAI,OAE9D,MACMkqD,EAAiB,CACrBlkD,KAAM,IACNQ,aAHoB,CAACH,EAAW+M,EAAS,YAAY1M,KAAK3F,KAAKoF,WAI/D3D,GAAI,GAAG6D,YACP8V,SAAU,UAINguC,EAAiB,CACrBnkD,KAAM,IACNQ,aAHoB,CAACH,EAAW+M,EAAS,YAAY1M,KAAK3F,KAAKoF,WAI/D3D,GAAI,GAAG6D,YACP8V,SAAU,UAGN7B,EAASvZ,KAAKqX,2BAA2B/R,GAC/CiU,EAAO+B,MAAQ,GAAG4tC,EAAUjqD,SAASiqD,EAAU/8C,MAC/CoN,EAAOjQ,QAAQ5C,KAAKyiD,GACpB5vC,EAAOjQ,QAAQ5C,KAAK0iD,GAEpBppD,KAAKwX,gCAAgCrO,EAAUlE,EAAMsU,GAIvD8tC,wBAAwBthC,EAAM1T,EAAS0C,GACrC,MAAMsF,EAAMra,KAAKoZ,wBAAwB,SAEnCiwC,EAAQt0C,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,SAAXA,EAAEjY,OACzC4nD,EAAYtpD,KAAKR,KAAK,wBAC5BQ,KAAK0oD,oBAAoBr2C,EAASi3C,EAAWD,EAAO,QAAShvC,GAE7D,MAAMkvC,EAAax0C,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,cAAXA,EAAEjY,OAC9C8nD,EAAWxpD,KAAKR,KAAK,6BAC3BQ,KAAK0oD,oBAAoBr2C,EAASm3C,EAAUD,EAAY,aAAclvC,GAEtEra,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,qCACV6a,GAKJkuC,sBAAsBl2C,EAASo3C,EAAYprC,EAAOw5B,EAAU1uC,GAE1D,MAAMoQ,EAASvZ,KAAKqX,2BAA2BwgC,GAE/Cx5B,EACG5Z,QAAQkV,GAAiB,MAAXA,EAAE1U,OAChBuB,SAASmT,IACR,MAAMnP,EAASxK,KAAK0pD,kBAAkBr3C,EAASsH,GAC/CJ,EAAOjQ,QAAQ5C,KAAK8D,MAGxBxK,KAAKwX,gCAAgCrO,EAAUsgD,EAAYlwC,GAI7DmvC,oBAAoBr2C,EAASo3C,EAAYprC,EAAOw5B,EAAU1uC,GAExD,MAAMoQ,EAASvZ,KAAKqX,2BAA2BwgC,GAE/Cx5B,EACG5Z,QAAQkV,GAAiB,MAAXA,EAAE1U,OAChBuB,SAASmT,IACR,MAAMnP,EAASxK,KAAKq3C,iBAAiBhlC,EAASsH,GAC9CJ,EAAOjQ,QAAQ5C,KAAK8D,MAGxBxK,KAAKwX,gCAAgCrO,EAAUsgD,EAAYlwC,GAI7DytC,aAAajhC,EAAM1T,EAAS0C,GAC1B,MAAMsF,EAAMra,KAAKoZ,wBAAwB,UACnC9T,EAAY,SACZqkD,EAAW50C,EAAM9U,KAAKA,KAAK2pD,OAE3BrwC,EAASvZ,KAAKqX,2BAA2B,UAC/ChB,OAAO7R,QAAQmlD,GAAUnjD,SAASC,IAChC,MAAM7C,EAAM6C,EAAE,GACRxH,EAAQwH,EAAE,GAEVxB,EAAOrB,EAAI6pB,MAAM,GACjBhsB,EAAKwD,EAAK45B,cAEVr0B,EAAS,CAAEvF,KAAMA,EAAMxD,GAAIwD,EAAMQ,aADlB,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,YAExDoF,EAAO4Q,SAAWnc,EAAQ,SAAW,GAErCsa,EAAOjQ,QAAQ5C,KAAK8D,MAGtB,MAAMq/C,EAAe7pD,KAAKR,KAAK,yBAC/BQ,KAAKwX,gCAAgC6C,EAAKwvC,EAActwC,GACxDvZ,KAAKqZ,yBAAyB0M,EAAM8jC,EAAcxvC,GAIpD6sC,YAAYnhC,EAAM1T,EAAS0C,GACzB,MAAM+0C,EAAU/0C,EAAM9U,KAAKA,KAAK6pD,QAChC,IAAKA,EAAS,OAEd,MAAMzvC,EAAMra,KAAKoZ,wBAAwB,WACnC9T,EAAY,QACZykD,EAAc/pD,KAAKR,KAAK,0BAExBwqD,EAAYhqD,KAAKR,KAAK,wBAEtByqD,EAAc,CAClBhlD,KAAM+kD,EACNvkD,aAHiB,CAACH,EAAW+M,EAAS,SAAS1M,KAAK3F,KAAKoF,WAIzD3D,GAAI,cAGAyoD,EAAUlqD,KAAKR,KAAK,sBAEpB2qD,EAAY,CAAEllD,KAAMilD,EAASzkD,aADlB,CAACH,EAAW+M,EAAS,OAAO1M,KAAK3F,KAAKoF,WACI3D,GAAI,YAEzD2oD,EAAcpqD,KAAKqX,2BAA2B/R,GAUpD,GATA8kD,EAAYnlD,KAAO8kD,EACnBK,EAAY9uC,MAAQwuC,EAAQ7qD,MAAMorD,WAClChwC,EAAIiB,MAAQwuC,EAAQ7qD,MAAMorD,WAE1BD,EAAY9gD,QAAQ5C,KAAKujD,GACzBG,EAAY9gD,QAAQ5C,KAAKyjD,GAEzBnqD,KAAKwX,gCAAgC6C,EAAK0vC,EAAaK,GAEnDxrD,KAAKiG,KAAKC,KAAM,CAClB,MAAMwlD,EAAY1rD,KAAKiG,KAAKuR,QAAQ,QAAS,WAC7C,GAAkB,OAAdk0C,EAAoB,CACtB,MAAMC,EAAc,UAEdC,EAAgB,CACpBvlD,KAAM+kD,EACNvkD,aAHc,CAAC8kD,EAAal4C,EAAS,SAAS1M,KAAK3F,KAAKoF,WAIxD3D,GAAI,gBAIAgpD,EAAc,CAClBxlD,KAAMilD,EACNzkD,aAHY,CAAC8kD,EAAal4C,EAAS,OAAO1M,KAAK3F,KAAKoF,WAIpD3D,GAAI,cAGAipD,EAAW1qD,KAAKqX,2BAA2BkzC,GACjDG,EAASphD,QAAQ5C,KAAK8jD,GACtBE,EAASphD,QAAQ5C,KAAK+jD,GACtB,MAAME,EAAS,GAAG3qD,KAAKR,KAAK,wBAAwBuqD,IACpDW,EAAShvC,MAAQ4uC,EAAUD,WAC3BhwC,EAAIqB,MAAQ4uC,EAAUD,WACtBrqD,KAAKwX,gCAAgC6C,EAAKswC,EAAQD,IAItD1qD,KAAKqZ,yBAAyB0M,EAAMgkC,EAAa1vC,GAInD4B,cAAc8J,EAAM1T,EAAS0C,GAC3B,IAAIsF,EAAMra,KAAKoZ,wBAAwB,WAEvCpZ,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV6a,GAKJwtC,UAAUD,EAAKgD,GACb,IAAIC,EAAS7qD,KAAK2nD,gBAAgBC,GAElC,IAAKgD,EAAM,OAAOC,EAElB,IAAIC,EAAU9qD,KAAK2nD,gBAAgBiD,GACnC,OAKW,IAJTC,EACGzgC,cACAC,cAAcygC,EAAQ1gC,mBAAe1M,EAAW,CAC/C4M,YAAa,SAGVugC,EAEF,GAAGA,KAAUC,IAItBnD,gBAAgBC,GACd,IAAKA,EAAK,MAAO,GAEjB,IAAIhhD,EAAS,IAAIghD,EAAImD,QAErB,MAAMnsB,EAAMp2B,SAASo/C,EAAIoD,UACzB,IAAKpD,EAAIoD,UAAoB,IAARpsB,EAAW,OAAOh4B,EAMvC,OAFAA,GAFag4B,EAAM,EAAI,IAAIA,IAAQ,GAAGA,IAI/Bh4B,EAITywC,iBAAiBhlC,EAAS1L,GACxB,MACMlF,EAAKkF,EAAKlF,GACVwD,EAAO0B,EAAK1B,KACZQ,EAAe,CAHH,OAGe4M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WAClDoF,EAAS,CAAEvF,KAAMA,EAAMxD,GAAIA,EAAIgE,aAAcA,GAOnD,OALA+E,EAAO8Q,MAAQtb,KAAKirD,iBAAiBtkD,GACrC6D,EAAOkR,MAAQ1b,KAAKkrD,cAAcvkD,GAElC6D,EAAO5E,IAAMe,EAAKf,IAEX4E,EAITygD,iBAAiBtkD,GACf,OAAgC,IAA5BA,EAAK1G,KAAKA,KAAKynB,SAAuB/gB,EAAK1G,KAAKA,KAAKynB,SAElD,GAITwjC,cAAcvkD,GACZ,MAAMwkD,EAAOxkD,EAAK1G,KAAKA,KAAKmrD,aACtBC,EAAQ1kD,EAAK1G,KAAKA,KAAKorD,MAE7B,IAAKF,EAAM,OAEX,IAAIvkD,EAAS,GAKb,OAJY,GAARukD,GAAsB,GAATE,IAAYzkD,GAAUukD,GAEnCE,EAAQ,IAAGzkD,GAAU,IAAIykD,KAEtBzkD,EAIT8iD,kBAAkBr3C,EAAS1L,GACzB,MACMlF,EAAKkF,EAAKlF,GACVwD,EAAO0B,EAAK1B,KACZQ,EAAe,CAHH,OAGe4M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WAClDoF,EAAS,CAAEvF,KAAMA,EAAMxD,GAAIA,EAAIgE,aAAcA,GAMnD,OAJA+E,EAAO8Q,MAAQtb,KAAKsrD,gBAAgB3kD,GAEpC6D,EAAO5E,IAAMe,EAAKf,IAEX4E,EAIT8gD,gBAAgB3kD,GACd,MAAMohD,EAAKphD,EAAK1G,KAAKA,KAAK8nD,GAC1B,GAAyB,YAArBA,EAAGlpB,cAA6B,MAAO,IAE3C,MAAM0sB,EAAS/iD,SAASu/C,GAExB,OAAe7N,MAAXqR,EAAuB,GAEpBA,GCvdJ,MAAMC,6BAA6BpsC,YACxCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GAG3B,GAAIrS,KAAK6gB,gBADM,CAAC,QACoB9c,SAASuB,GAC3C,OAAOtF,KAAK2gB,aAAatO,EAASgP,GAEpC,OAAQ/b,GACN,IAAK,OACHtF,KAAKgxC,UAAUrtC,EAAOoR,EAAOsM,GAC7B,MACF,IAAK,eACGrhB,KAAKyrD,cAAc9nD,EAAOoR,EAAOsM,GACvC,MACF,IAAK,QACHrhB,KAAK0rD,eAAe/nD,EAAOoR,EAAOsM,GAClC,MACF,IAAK,gBACGrhB,KAAK2rD,iBAAiBhoD,EAAOoR,EAAOsM,GAC1C,MACF,IAAK,YACHrhB,KAAK4rD,eAAejoD,EAAOoR,EAAOsM,GAClC,MACF,IAAK,QACHrhB,KAAK+wC,WAAWptC,EAAOoR,EAAOsM,GAC9B,MACF,IAAK,SACL,IAAK,UACL,IAAK,oBACGrhB,KAAK6rD,kBAAkBloD,EAAOoR,EAAOzP,EAAW+b,IAM5D2vB,UAAUrtC,EAAOoR,EAAOsM,GACTthB,MAAMuf,QAAQvK,EAAOsM,GAC7ByqC,OAIPL,oBAAoB9nD,EAAOoR,EAAOsM,GAChC,MAAMjU,EAAS,CAAEnN,KAAM,CAAE2pD,OAAQ,KAE3BA,EAAS,KAAOvoC,EAAS+K,OAAO,GAAGhC,cAAgB/I,EAASoM,MAAM,GACxErgB,EAAOnN,KAAK2pD,OAAOA,IAAW70C,EAAM9U,KAAKA,KAAK2pD,OAAOA,SAE/C70C,EAAM3H,OAAOA,GAIrBs+C,eAAe/nD,EAAOoR,EAAOsM,GACV,UAAbA,IACFtM,EAAMg3C,aACN/rD,KAAKgsD,kBAGU,QAAb3qC,GAAoBtM,EAAMk3C,WAIhCN,uBAAuBhoD,EAAOoR,EAAOsM,GACnC,IAAIxc,EAAOjG,KAAKiG,KAChB,IAAKA,EAAKC,KAAM,OAEhB,MAAMonD,EAAernD,EAAKuR,QAAQ,QAAS,WAC3C,GAAiB,UAAbiL,EAAsB,CACxB,GAAoB,GAAhB6qC,EAAmB,OAEnBttD,KAAKC,SAASC,IAAI,QAAS,yBACvBkB,KAAKmsD,sBAAsBtnD,GACjC7E,KAAKgsD,wBAGDnnD,EAAKkR,QAAQ,QAAS,UAAWm2C,EAAe,GAGvC,QAAb7qC,UACIxc,EAAKkR,QAAQ,QAAS,UAAWm2C,EAAe,GAClDttD,KAAKC,SAASC,IAAI,QAAS,wBACvBkB,KAAKosD,oBAAoBvnD,GAEjC+tC,GAAY,QAAE5wC,QAAO,IAGvBE,MAAMyF,QAAQ,6BAGhBwkD,4BAA4BtnD,GAC1B,IAKIivC,EAAW,CACbpzC,cANkBm0C,eAAe5lB,OAAOu4B,MAAMsC,QAAQuC,UAAUC,MAAO,CACvEzoD,OAAQgB,EACRkvC,QAASlvC,KAMX4vC,YAAYK,OAAOhB,GAGrBsY,0BAA0BvnD,GACxB,IAKIivC,EAAW,CACbpzC,cANkBm0C,eAAe5lB,OAAOu4B,MAAMsC,QAAQuC,UAAUE,MAAO,CACvE1oD,OAAQgB,EACRkvC,QAASlvC,KAOX4vC,YAAYK,OAAOhB,GAGrBkY,iBACE,GAAIptD,KAAK4tD,OAAQ,CACf,MAAMC,EAAQ,IAAIC,KAAK,OAAOjnC,OAC9B7mB,KAAK4tD,OAAOG,YAAYF,EAAO7tD,KAAKiG,MAAM,EAAM,MAAM,IAK1D+mD,eAAejoD,EAAOoR,EAAOsM,GAC3BtM,EAAMi9B,cAAc3wB,EAAU,CAAE1d,MAAOA,IAIzCotC,WAAWptC,EAAOoR,EAAOsM,GACvBtM,EAAM8f,UAAUxT,EAAU,CAAE1d,MAAOA,IAIrCkoD,wBAAwBloD,EAAOoR,EAAOzP,EAAW+b,GAC/C,IAAIwD,EAAY9P,EAAM9U,KAAKA,KAAKqF,GAEhC,IAAKuf,EAAW,OAEhB,MAAM+nC,EAAW/nC,EAAU5lB,MACrBkN,EAAM0Y,EAAU1Y,IAChBkY,EAAMQ,EAAUR,KAAO,EAE7B,IAAIplB,EACJ,OAAQoiB,GACN,IAAK,WACHpiB,EAAQ6M,KAAKuuC,QAAQuS,EAAW,EAAGvoC,EAAKlY,GACxC,MACF,IAAK,WACHlN,EAAQ6M,KAAKuuC,QAAQuS,EAAW,EAAGvoC,EAAKlY,GAI5C,IAAIiB,EAAS,CAAEnN,KAAM,IAErBmN,EAAOnN,KAAKqF,GAAa,CAAErG,MAAOA,SAE5B8V,EAAM3H,OAAOA,IC1KhB,MAAMy/C,8BAA8BztC,YACzCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GAG3B,GAAIrS,KAAK6gB,gBADM,CAAC,QACoB9c,SAASuB,GAC3C,OAAOtF,KAAK2gB,aAAatO,EAASgP,GAEpC,OAAQ/b,GACN,IAAK,OACHtF,KAAKgxC,UAAUrtC,EAAOoR,EAAOsM,EAAUhP,GACvC,MACF,IAAK,eACGrS,KAAKyrD,cAAc9nD,EAAOoR,EAAOsM,EAAUhP,GACjD,MACF,IAAK,QACHrS,KAAK0rD,eAAe/nD,EAAOoR,EAAOsM,GAClC,MACF,IAAK,gBACGrhB,KAAK2rD,iBAAiBhoD,EAAOoR,EAAOsM,GAC1C,MACF,IAAK,YACHrhB,KAAK4rD,eAAejoD,EAAOoR,EAAOsM,EAAUhP,GAC5C,MACF,IAAK,QACHrS,KAAK+wC,WAAWptC,EAAOoR,EAAOsM,EAAUhP,GACxC,MACF,IAAK,SACL,IAAK,UACL,IAAK,oBACGrS,KAAK6rD,kBAAkBloD,EAAOoR,EAAOzP,EAAW+b,IAM5D2vB,UAAUrtC,EAAOoR,EAAOsM,EAAUhP,GAGhC,IAAIy6C,EAEFA,GADoB,IAAlBnpD,EAAMopD,QACGnuD,KAAKC,SAASC,IAAI,qBAAsB,eACzB,IAAjB6E,EAAMqd,OACJpiB,KAAKC,SAASC,IAAI,qBAAsB,cACvB,IAAnB6E,EAAMud,SACJtiB,KAAKC,SAASC,IAAI,qBAAsB,eAExCF,KAAKC,SAASC,IAAI,qBAAsB,SAEpC,UAAbguD,EACFluD,KAAKouD,KACFC,yBAAyB56C,EAAS0C,EAAMtT,GAAI4f,GAC5CW,MAAMkrC,IACLtuD,KAAKouD,KAAKG,UAAUD,EAAS,IAAI,MAEf,iBAAbJ,EACTluD,KAAKouD,KACFC,yBAAyB56C,EAAS0C,EAAMtT,GAAI4f,GAC5CW,MAAMkrC,IACLtuD,KAAKouD,KAAKG,UAAUD,EAAS,IAAI,GAAO,MAEtB,WAAbJ,EACTluD,KAAKwuD,MAAM5nC,cAAczQ,EAAMsJ,MAAMvf,IAAIuiB,GAAUpc,MAEnDrG,KAAKouD,KAAKC,yBAAyB56C,EAAS0C,EAAMtT,GAAI4f,GAK1DoqC,oBAAoB9nD,EAAOoR,EAAOsM,EAAUhP,GAC1C,MAAMjF,EAAS,CAAEnN,KAAM,CAAE2pD,OAAQ,KAE3BA,EAAS,KAAOvoC,EAAS+K,OAAO,GAAGhC,cAAgB/I,EAASoM,MAAM,GAClE4/B,EAAkBt4C,EAAM9U,KAAKA,KAAK2pD,OAAOA,GAC/Cx8C,EAAOnN,KAAK2pD,OAAOA,IAAW70C,EAAM9U,KAAKA,KAAK2pD,OAAOA,SAE/C70C,EAAM3H,OAAOA,GAEnB8F,YAAW,KAKT,IAJwB6B,EAAM0Z,QAAQ7sB,MACnC4D,GAAMA,EAAE4Q,QAAQ,OAAQ,cAAgBiL,MAGlBgsC,EAAiB,CACxC,MAAM95B,EAAStE,OAAOu4B,MAAMt4B,cAActtB,MACvC4D,GAAMA,EAAE/D,KAAO4f,IAElBkS,EAAO,uBAAyBlS,EAChC7O,OAAOjG,OAAOzN,IAAIuT,GAASkiB,aAAahB,MAEzC,IAILm4B,eAAe/nD,EAAOoR,EAAOsM,GACV,UAAbA,IACFtM,EAAMg3C,aACN/rD,KAAKgsD,kBAGU,QAAb3qC,GAAoBtM,EAAMk3C,WAIhCN,uBAAuBhoD,EAAOoR,EAAOsM,GACnC,IAAIxc,EAAOjG,KAAKiG,KAChB,IAAKA,EAAKC,KAAM,OAEhB,MAAMonD,EAAernD,EAAKuR,QAAQ,QAAS,WAC3C,GAAiB,UAAbiL,EAAsB,CACxB,GAAoB,GAAhB6qC,EAAmB,OAEnBttD,KAAKC,SAASC,IAAI,QAAS,yBACvBkB,KAAKmsD,sBAAsBtnD,GACjC7E,KAAKgsD,wBAGDnnD,EAAKkR,QAAQ,QAAS,UAAWm2C,EAAe,GAGvC,QAAb7qC,UACIxc,EAAKkR,QAAQ,QAAS,UAAWm2C,EAAe,GAClDttD,KAAKC,SAASC,IAAI,QAAS,wBACvBkB,KAAKosD,oBAAoBvnD,GAEjC+tC,GAAY,QAAE5wC,QAAO,IAGvBE,MAAMyF,QAAQ,6BAGhBwkD,4BAA4BtnD,GAC1B,IAKIivC,EAAW,CACbpzC,cANkBm0C,eAAe5lB,OAAOu4B,MAAMsC,QAAQuC,UAAUC,MAAO,CACvEzoD,OAAQgB,EACRkvC,QAASlvC,KAMX4vC,YAAYK,OAAOhB,GAGrBsY,0BAA0BvnD,GACxB,IAKIivC,EAAW,CACbpzC,cANkBm0C,eAAe5lB,OAAOu4B,MAAMsC,QAAQuC,UAAUE,MAAO,CACvE1oD,OAAQgB,EACRkvC,QAASlvC,KAOX4vC,YAAYK,OAAOhB,GAGrBkY,iBACE,GAAIptD,KAAK4tD,OAAQ,CACf,MAAMC,EAAQ,IAAIC,KAAK,OAAOjnC,OAC9B7mB,KAAK4tD,OAAOG,YAAYF,EAAO7tD,KAAKiG,MAAM,EAAM,MAAM,IAK1D+mD,eAAejoD,EAAOoR,EAAOsM,EAAUhP,GAErC,IAAIy6C,EAEFA,GADoB,IAAlBnpD,EAAMopD,QACGnuD,KAAKC,SAASC,IAAI,qBAAsB,eACzB,IAAjB6E,EAAMqd,OACJpiB,KAAKC,SAASC,IAAI,qBAAsB,cACvB,IAAnB6E,EAAMud,SACJtiB,KAAKC,SAASC,IAAI,qBAAsB,eAExCF,KAAKC,SAASC,IAAI,qBAAsB,SAEpC,UAAbguD,GAAqC,iBAAbA,EAC1BluD,KAAKouD,KACFM,8BAA8Bj7C,EAAS0C,EAAMtT,GAAI4f,GACjDW,MAAMkrC,IACLtuD,KAAKouD,KAAKO,eAAeL,EAAS,IAAI,MAEpB,WAAbJ,EACT/3C,EAAMi9B,cAAc3wB,GAEpBziB,KAAKouD,KAAKM,8BAA8Bj7C,EAAS0C,EAAMtT,GAAI4f,GAK/D0vB,WAAWptC,EAAOoR,EAAOsM,EAAUhP,GAEjC,IAAIy6C,EAEFA,GADoB,IAAlBnpD,EAAMopD,QACGnuD,KAAKC,SAASC,IAAI,qBAAsB,eACzB,IAAjB6E,EAAMqd,OACJpiB,KAAKC,SAASC,IAAI,qBAAsB,cACvB,IAAnB6E,EAAMud,SACJtiB,KAAKC,SAASC,IAAI,qBAAsB,eAExCF,KAAKC,SAASC,IAAI,qBAAsB,SAEpC,UAAbguD,GAAqC,iBAAbA,EAC1BluD,KAAKouD,KACFQ,0BAA0Bn7C,EAAS0C,EAAMtT,GAAI4f,GAC7CW,MAAMkrC,IACLtuD,KAAKouD,KAAKS,WAAWP,EAAS,IAAI,MAEhB,WAAbJ,EACTluD,KAAKwuD,MAAM5nC,cAAczQ,EAAMsJ,MAAMvf,IAAIuiB,GAAUpc,MAEnDrG,KAAKouD,KAAKQ,0BAA0Bn7C,EAAS0C,EAAMtT,GAAI4f,GAK3DwqC,wBAAwBloD,EAAOoR,EAAOzP,EAAW+b,GAC/C,IAAIwD,EAAY9P,EAAM9U,KAAKA,KAAKqF,GAEhC,IAAKuf,EAAW,OAEhB,MAAM+nC,EAAW/nC,EAAU5lB,MACrBkN,EAAM0Y,EAAU1Y,IAChBkY,EAAMQ,EAAUR,KAAO,EAE7B,IAAIplB,EACJ,OAAQoiB,GACN,IAAK,WACHpiB,EAAQ6M,KAAKuuC,QAAQuS,EAAW,EAAGvoC,EAAKlY,GACxC,MACF,IAAK,WACHlN,EAAQ6M,KAAKuuC,QAAQuS,EAAW,EAAGvoC,EAAKlY,GAI5C,IAAIiB,EAAS,CAAEnN,KAAM,IAErBmN,EAAOnN,KAAKqF,GAAa,CAAErG,MAAOA,SAE5B8V,EAAM3H,OAAOA,IChQhB,SAASoW,SAASphB,EAAKjD,GAC5BP,KAAKC,SAAS2kB,SAASphB,EAAK,uBAAwB,CAClD6C,KAAMrG,KAAKY,KAAKE,SACd,2DAEF+jB,KAAM7kB,KAAKY,KAAKE,SACd,2DAEFgkB,MAAO,SACPC,QAAQ,EACRjiB,KAAMoiB,QACN/hB,SAAS,EACT8hB,SAAW5kB,IACTD,WAAWC,MCPV,MAAMyuD,2BAA2B7qC,cACtCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAChC,OAAO,IAAIuV,mBAAc3V,EAAeI,GAI1Cic,2BACE,IAAIphB,EAAU,CAAE4W,KAAM,cAGtB,OAFAgK,cAAc2B,WAAWviB,EAAS,sBAE3BA,EAITihB,iBAAiBE,GACf,OAAQA,GACN,IAAK,qBACH,OAAO,IAAIuqC,sBACb,QACE,OAAO,IAAIhoC,sBAKjB5B,mBAAmB3kB,EAASJ,GAC1BggC,SAAkB5/B,ICjCf,MAAMwuD,iCAAiCjxC,cAC5C/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GACrBpH,KAAKgH,cAAcuP,kBAAkB,UAIvC0G,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAClB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAI0xB,EAAUp3B,KAAKq3B,cAActiB,EAAO1C,EAAS,UACjDrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAGF,IAAIy2B,EAAc7tD,KAAKq3B,cAActiB,EAAO1C,EAAS,cACrDrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,oBACVquD,GAGF,MAAM5tD,EAAO8U,EAAM9U,KAAKA,KAiBxB,OAfAA,EAAK6tD,WAAWtnD,SAAS9E,IACvB,IAAIujB,EAASjlB,KAAKm8C,WAAWz6C,EAAMzB,EAAMoS,GACzCrS,KAAKqZ,yBAAyBzS,EAAQlF,EAAKT,MAAOgkB,MAGhDrmB,KAAKiG,KAAKC,MACZ9E,KAAKqZ,yBACHzS,EACA,UACA5G,KAAK+tD,WAAW55C,IAIhBtN,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAITmnD,WAAW55C,GACT,IAAIvN,EAAS5G,KAAKoZ,wBAAwB,WACtChC,EAAcpX,KAAKqX,6BAYvB,OAJAD,EAAY9N,QAPA,CACV,CACErE,KAAM,oBACNQ,aAAc,qBACdhE,GAAI,eAKRzB,KAAKwX,gCAAgC5Q,EAAQ,KAAMwQ,GAE5CxQ,EAITywB,cAActiB,EAAO1C,EAAS3Q,GAC5B,IAAIkF,EAAS5G,KAAKoZ,wBAAwB1X,GAEtC0V,EAAcpX,KAAKqX,6BAEnBgH,EAAQtJ,EAAMsJ,MAAM5Z,QAAQkV,GAAMA,EAAEjY,OAASA,IAKjD,OAJA0V,EAAY9N,QAAUtJ,KAAKguD,gBAAgB37C,EAASgM,EAAO3c,GAE3D1B,KAAKwX,gCAAgC5Q,EAAQ,GAAIwQ,GAE1CxQ,EAITu1C,WAAWz6C,EAAMzB,EAAMoS,GACrB,IAGIzL,EAAS5G,KAAKoZ,wBAHD,UAKjB,MAAM6L,EAAS5O,OAAOgT,KAAKppB,EAAKglB,QAC7BxgB,QAAQgC,GAAMxG,EAAKglB,OAAOxe,GAAG/E,OAASA,EAAKA,OAC3C0J,MAAK,CAACC,EAAGC,KACR,IAAI2iD,EAAa,EAMjB,OALI5iD,EAAEwzB,cAAgBvzB,EAAEuzB,cACtBovB,EAAa,EACJ5iD,EAAEwzB,cAAgBvzB,EAAEuzB,gBAC7BovB,GAAc,GAETA,KAEXz/C,OAAgB7P,MAAMsmB,GACtB,IAAIipC,EAAWluD,KAAKqX,6BAKpB,OAJA62C,EAAS5kD,QAAUtJ,KAAKmuD,iBAAiB97C,EAASpS,EAAMglB,EAjBxC,SAmBhBjlB,KAAKwX,gCAAgC5Q,EAAQ,GAAIsnD,GAE1CtnD,EAITonD,gBAAgB37C,EAAS0mB,EAASr3B,GAChC,OAAOq3B,EAAQx3B,KAAKoY,IAClB,IAAIlU,EAAe,CAAC/D,EAAM2Q,EAASsH,EAAEjU,KAAKC,KAAK3F,KAAKoF,WACpD,MAAO,CAAEH,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAEjU,QAK7DyoD,iBAAiB97C,EAASpS,EAAMglB,EAAQvjB,GACtC,OAAOujB,EAAO1jB,KAAKoY,IACjB,IAAIlU,EAAe,CAAC/D,EAAM2Q,EAASsH,GAAGhU,KAAK3F,KAAKoF,WAChD,MAAO,CAAEH,KAAMhF,EAAKglB,OAAOtL,GAAG1Y,MAAOwE,aAAcA,EAAchE,GAAIkY,OC9HpE,MAAMy0C,mCAAmChvC,YAC9Cxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GAE3B,OAAQ/M,GACN,IAAK,KACH,OAAQ+b,GACN,IAAK,UACH,OAAOrhB,KAAKquD,eAElB,IAAK,SACH,OAAOzvD,KAAK0vD,IAAIC,YAAYC,SAASntC,EAAUtM,EAAMtT,IACvD,IAAK,QACH,OAAOzB,KAAK+wC,WAAWh8B,EAAOsM,EAAU1d,GAC1C,IAAK,aACH,OAAO3D,KAAKyuD,gBAAgB15C,EAAOsM,IAIzCotC,gBAAgB15C,EAAOwK,GACrB,IAAI5Y,EAAOoO,EAAMsJ,MAAMvf,IAAIygB,GACtB5Y,IACHA,EAAO/H,KAAKyf,MAAMvf,IAAIygB,IAEnB5Y,IACHA,EAAO+nD,cAAcC,yBAAyB,OAAQpvC,IAExD,MAAMqvC,EACJ75C,EAAM9U,KAAKA,KAAK4uD,MAAMC,UAAU3iD,IAChC4I,EAAM9U,KAAKA,KAAK4uD,MAAMC,UAAU7vD,MAClC,GAAI2vD,EAAY,EAAG,CACjB,IAAIhuC,EAAQ7L,EAAM6L,MAAMvS,UACxB,MAAM0gD,EAAW,IAAIC,YAAY,CAC/BC,MAAOL,IAEThwD,KAAK0vD,IAAIC,YAAYW,kBACnBtuC,EACAmuC,EACA,GAAGnwD,KAAKY,KAAKE,SAAS,oBAAoBiH,EAAK1B,OAC/C0B,EAAK1B,KACL0B,IAKN0nD,eACEzvD,KAAKC,SAAS2c,IAAI,cAAe,aAAc,GAC/C5c,KAAKC,SAAS2c,IAAI,cAAe,YAAa,GAC9C,MAAM2zC,EAAc,oCAAoCvwD,KAAKY,KAAKE,SAChE,oCAGF,IAAI0vD,IACF,IAAIxwD,KAAKC,SAASA,UAAU4F,QAAO,EAAEuqC,EAAG5C,KACtCA,EAAExoC,IAAIG,SAAS,qBAEjByC,SAASmT,IACT/a,KAAKC,SAAS2c,IAAI7B,EAAEsE,OAAQtE,EAAE/V,SAAK8Z,MAGrCuR,OAAOogC,IAAIC,UAAY1wD,KAAKiG,KAAKpD,GAEjCgzC,YAAYK,OAAO,CACjBjwC,KAAMjG,KAAKiG,KAAKa,IAChBhF,QAASyuD,IAIbpe,WAAWh8B,EAAOw6C,EAAW5rD,GAC3B,IAAI6rD,EAAa,EACb7rD,EAAMopD,UAAYppD,EAAMud,SAC1BsuC,EAAa,GACH7rD,EAAMopD,SAAWppD,EAAMud,WACjCsuC,EAAa,GAEf,MAAMC,EAAa16C,EAAM6L,MAAMvS,UACzB6W,EAAQnQ,EAAM9U,KAAKA,KAAKglB,OAAOsqC,GAC/BG,EACJD,EAAWxvD,KAAKg8C,gBAAgB/2B,EAAMwqC,gBACxC9wD,KAAK0vD,IAAIC,YAAYoB,gBACnBzqC,EACAwqC,EACAF,EACAC,IC9FC,MAAMG,iCAAiC/sC,cAC5CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,yBAAc3V,EAAeI,GAKvDic,2BAEE,MADc,CAAExK,KAAM,oBAKxBqK,iBAAiBE,GACf,OAAO,IAAIuC,2BAIb5B,mBAAmB3kB,EAASJ,KCxBvB,MAAM6wD,yBAAyBlzC,cACpC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,kBAAkB1K,EAAO4B,GACvB,IAAIvN,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAI2Y,EAAQre,KAAKsgC,aAAavrB,EAAO1C,GACjCua,EAAQ5sB,KAAK0gC,cAAc3rB,EAAO1C,GAMlC2X,EAAShqB,KAAKwgC,eAAezrB,EAAO1C,GAC3BrS,KAAK4gC,eAAe7rB,EAAM9U,KAAKA,KAAK6vD,SAAUz9C,GAE3D,IAAIkuB,EAAavgC,KAAKR,KAAK,4BACvBihC,EAAczgC,KAAKR,KAAK,yBACxBmhC,EAAa3gC,KAAKR,KAAK,2BACTQ,KAAKR,KAAK,yBAI5BQ,KAAKqZ,yBAAyBzS,EAAQ25B,EAAYliB,GAClDre,KAAKqZ,yBAAyBzS,EAAQ65B,EAAazW,GACnDhqB,KAAKqZ,yBAAyBzS,EAAQ+5B,EAAY/T,GAGlD,IAAIxF,EAAiBpnB,KAAKR,KAAK,4BAgB/B,OAfgBQ,KAAK6mB,gBACnBxU,EACA0C,EAAM9U,KAAKA,KAAK8vD,UAChB,YACA3oC,EACA,YAQEvgB,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGTkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,MAAO,aAChBxU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C,MAAM2Q,EAAU0T,EAAK1T,QAErBrS,KAAKknB,gBAAgBnB,EAAM1T,GAE3B,IAAI+U,EAAiBpnB,KAAKR,KAAK,4BAC/BQ,KAAKmnB,mBACHpB,EACA1T,EACA,YACA+U,EACA,YAUJkZ,aAAavrB,EAAO1C,GAClB,IAMIiV,EANAC,EAAavnB,KAAKwnB,qBACpBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAMA,EAAE1Z,KAAK+vD,IAAM,KAE1CroC,EAAc3nB,KAAK4nB,gBAAgBL,GACnCjiB,EAAY,OAQhBgiB,EAAWK,EAAYljB,QAAQkV,GAAiB,eAAXA,EAAEjY,OACvC,IAAImmB,EAAiB7nB,KAAK8nB,oBAAoBR,GAG1CS,EADUF,EAAepjB,QAAQkV,GAAgB,QAAVA,EAAEjY,OACjBH,KAAKymB,GAC/BhoB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAW0iB,KAElDE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYN,EAAepjB,QAAQkV,GAAgB,SAAVA,EAAEjY,OACdH,KAAKiE,GACpCxF,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWE,KAElD4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAGIE,EAHQR,EAAepjB,QACxBkV,GAAgB,QAAVA,EAAEjY,MAA4B,SAAViY,EAAEjY,OAENH,KAAK+mB,GAC5BtoB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWgjB,KAElDC,EAAWvoB,KAAKqX,6BACpBkR,EAASjf,QAAU+e,EAEnB,IAAIG,EAAiBxoB,KAAK8nB,oBACxBH,EAAYljB,QAAQkV,GAAgB,cAAVA,EAAEjY,QAK1B+mB,EAFmBzoB,KAAK0oB,qBAAqBF,GAEdjnB,KAAKC,GACtCxB,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAW9D,KAElDmnB,EAAiB3oB,KAAKqX,6BAC1BsR,EAAerf,QAAUmf,EAEzB,IACIG,EADQrB,EAAW9iB,QAAQiO,GAAiB,SAAXA,EAAEhR,OACdH,KAAKoY,GAC5B3Z,KAAKioB,oBAAoB5V,EAAS0C,EAAOzP,EAAWqU,KAElDkP,EAAW7oB,KAAKqX,6BACpBwR,EAASvf,QAAUsf,EAEnB,IAAIE,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAC3BwpB,EAAahpB,KAAKR,KAAK,wBACvBypB,EAAmBjpB,KAAKR,KAAK,8BAC7B0pB,EAAalpB,KAAKR,KAAK,wBAEvBoH,EAAS5G,KAAKoZ,wBAAwB,aAY1C,OAVApZ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAC7DpoB,KAAKwX,gCAAgC5Q,EAAQoiB,EAAYT,GACzDvoB,KAAKwX,gCACH5Q,EACAqiB,EACAN,GAEF3oB,KAAKwX,gCAAgC5Q,EAAQsiB,EAAYL,GAElDjiB,EAITkhB,oBAAoBqB,GAClB,MAAMC,EAAkB/S,OAAOgT,KAC7BzqB,KAAKqxD,WAAWtsC,OAAOusC,eACvBzrD,QAAQ+kB,GAAc,SAAPA,IACX2mC,EAAc,CAAC,QAAS,QAAS,cAUvC,OARsBhnC,EAAU1kB,QAAQe,IACtC,IAAK2qD,EAAYpsD,SAASyB,EAAE9D,MAAO,OAAO,EAE1C,QADiB8D,EAAEvF,KAAKmwD,UAGjBhnC,EAAgBrlB,SAASyB,EAAEvF,KAAKmwD,SAASC,aASpD7vB,eAAezrB,EAAO1C,GACpB,IAAIsX,EAAc3pB,KAAKwnB,qBACrBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,QAEnCioB,EAAc3pB,KAAK0oB,qBAAqBiB,GAKxC,IAAIE,EAAe7pB,KAAK8pB,mBAAmBH,GAG3C,OAFa3pB,KAAK+pB,kBAAkBhV,EAAO1C,EAASwX,GAMtDC,mBAAmBE,GACjB,IAAIpjB,EAASyP,OAAOiE,OAAO0P,GAY3B,OAVApjB,EAAOwE,MAAK,CAACC,EAAGC,IACVD,EAAEpL,KAAKqwD,UAAYhlD,EAAErL,KAAKqwD,QACrBjlD,EAAEpG,KACNmlB,cACAC,cAAc/e,EAAErG,KAAKmlB,mBAAe1M,EAAW,CAC9C4M,YAAa,SAEZjf,EAAEpL,KAAKqwD,QAAUhlD,EAAErL,KAAKqwD,UAG1B1pD,EAITmjB,kBAAkBhV,EAAO1C,EAAS2X,GAChC,MAAMO,EAASvqB,KAAKqX,6BACdmT,EAAOxqB,KAAKqX,6BAGJ2S,EAAO5jB,OACnB,SAAU2kB,EAAStkB,GACjB,IAAIwkB,EAAOxkB,EAAExG,KAAKswD,UAClB,IAEI/kC,EAFArB,EAAQ1jB,EAAExG,KAAKqwD,QAIfrlC,IAIFO,EAAY,GAAGxrB,KAAKR,KAAK,2BAA2B2qB,KAGtD,IAAI0B,EAAQ7rB,KAAK8rB,WAAWzZ,EAAS0C,EAhBvB,QAgByCtO,GAMnD2Q,EAAcoT,EAAK5R,cAAchX,MAClCyY,GAAQA,EAAIpV,OAASumB,IAaxB,OAVKpU,IACHA,EAAcpX,KAAKqX,8BAIrBD,EAAY9N,QAAQ5C,KAAKmlB,GAErBrB,EAAK5R,cAAc1M,QAAQkL,GAAe,GAC5CpX,KAAKwX,gCAAgCgT,EAAMgB,EAAWpU,GAEjD2T,GACPtnB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,UAEtC4S,EAAchsB,KAAKR,KAAK,yBACxBysB,EAAajsB,KAAKR,KAAK,wBAK3B,OAHAQ,KAAKwX,gCAAgC5Q,EAAQolB,EAAazB,GAC1DvqB,KAAKwX,gCAAgC5Q,EAAQqlB,EAAYzB,GAElD5jB,EAITmlB,cAActlB,EAAGolB,GACf,IAAIrqB,EAAIiF,EAAExG,KAAKuwD,QAEf3kC,EAAMvQ,MAAQ,GACduQ,EAAMnQ,MAAQ,GACdmQ,EAAMlQ,MAAQ,GACK,SAAfna,GAAGivD,UAAoB5kC,EAAMvQ,OAAS,KAM5ColB,cAAc3rB,EAAO1C,GACnB,IAAIoa,EAAazsB,KAAKwnB,qBACpBzS,EAAM9U,KAAKoe,MAAM5Z,QAAQkV,GAAgB,SAAVA,EAAEjY,QAE/BgrB,EAAc1sB,KAAK4nB,gBAAgB6E,GAGvC,OAFYzsB,KAAK2sB,iBAAiBta,EAAS0C,EAAO2X,GAMpDC,iBAAiBta,EAAS0C,EAAO6X,GAC/B,IAAIzO,EAASne,KAAKqX,6BACdwV,EAAU7sB,KAAKqX,6BACRrX,KAAKqX,6BACArX,KAAKqX,6BAEPuV,EAAMxmB,OAClB,SAAU2kB,EAASpV,GACjB,MAAMqX,EAAiBrX,EAAE1V,KAAKmwD,SAASC,SAGvC,IAAIpjC,EAAOjtB,KAAKioB,oBAAoB5V,EAAS0C,EAF3B,QAE6CY,GAG5DqX,GACkB,KAAnBA,GACmB,UAAnBA,EAMF7O,EAAO7U,QAAQ5C,KAAKumB,GAJlBJ,EAAQvjB,QAAQ5C,KAAKumB,IAOvBxpB,KAAKzD,MACP,IAGF,IAAI4G,EAAS5G,KAAKoZ,wBAAwB,WAEtC8T,EAAcltB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQsmB,EAAa/O,GAG1D,IAAIkP,EAAertB,KAAKR,KAAK,0BAI7B,OAHAQ,KAAKwX,gCAAgC5Q,EAAQymB,EAAcR,GAGpDjmB,EAITg6B,eAAe3b,EAAQ5S,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAIZioB,EAAgBlX,OAAO7R,QAAQygB,GAChC1jB,KAAKiE,IACJ,IACE,IAAIgoB,EAAUhoB,EAAE,GACZP,EAAwBrG,KAAKqxD,WAAWtsC,OAAOmsC,SAAStiC,GAC5DvoB,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACpDpE,EAAOhB,KAAK0tB,oBAAoBzI,EAAOuI,GAASkjC,UACpD,MAAO,CACLzrD,KAAMA,EACNxD,GAAI+D,EAAE,GACNC,aAAcA,EACdzE,KAAMA,GAER,MAAOtC,GAEP,OADAL,OAAOK,MAAM8G,GACN,SAGVf,QAAQgC,KAAQA,IACfknB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAG5B,OAFAQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAEnD/mB,EAGTsgB,gBAAgBnB,EAAM1T,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtC9T,EAAY,UAIZioB,EAAgBlX,OAAO7R,QAAQ5F,KAAKqxD,WAAWtsC,OAAOmsC,UAAUvuD,KACjEiE,IACC,IAAIP,EAAqBO,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAG7CkoB,EAAiB3tB,KAAKqX,6BAC1BsW,EAAerkB,QAAUikB,EAEzB,IAAIK,EAAc5tB,KAAKR,KAAK,yBAC5BQ,KAAKwX,gCAAgC5Q,EAAQgnB,EAAaD,GAC1D3tB,KAAKqZ,yBAAyB0M,EAAM6H,EAAahnB,GAAQ,GAI3DigB,gBAAgBxU,EAASqU,EAAWrf,EAAYC,EAAchC,GAC5D,IAAIsB,EAAS5G,KAAKoZ,wBAAwB/R,GAItCiC,EAAU+M,OAAO7R,QAAQ5F,KAAKqxD,WAAWtsC,OAAOosC,WAAWxuD,KAAKiE,IAClE,GAA8B,IAA1BkhB,EAAUlhB,EAAE,IAAIvG,MAAa,OAEjC,IAAIgG,EAAqBO,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAGxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,EAAczE,KAFhD,OAIT8sB,EAAkB9tB,KAAKqX,6BAK3B,OAJAyW,EAAgBxkB,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IAElDrL,KAAKwX,gCAAgC5Q,EAAQU,EAAcwmB,GAEpDlnB,EAGTugB,mBAAmBpB,EAAM1T,EAAShL,EAAYC,EAAchC,GAC1D,IAAI+U,EAAMra,KAAKoZ,wBAAwB/R,GAInCiC,EAAU+M,OAAO7R,QAAQ5F,KAAKqxD,WAAWtsC,OAAOosC,WAAWxuD,KAAKiE,IAClE,IAAIP,EAAqBO,EAAE,GAC3BP,EAAOA,EAAKmnB,OAAO,GAAGhC,cAAgBnlB,EAAKwoB,MAAM,GACjD,IAAIhoB,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WAExD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAE3CqoB,EAAkB9tB,KAAKqX,6BAC3ByW,EAAgBxkB,QAAUA,EAE1BtJ,KAAKwX,gCAAgC6C,EAAK/S,EAAcwmB,GACxD9tB,KAAKqZ,yBAAyB0M,EAAMze,EAAc+S,GAAK,GAIzDwtB,gBAAgB9yB,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAI1C,OAFApZ,KAAKuuB,yBAAyBxZ,EAAO1C,EAASzL,GAEvCA,EAITy5B,mBAAmBtrB,EAAO1C,GACxB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cAE1C,OADApZ,KAAKwuB,0BAA0BzZ,EAAO1C,EAASzL,GACxCA,EAIT2nB,yBAAyBxZ,EAAO1C,EAASlJ,GACvC,MAAM7D,EAAY,SAEZmpB,EAAU1Z,EAAM0Z,QAAQjqB,QAE9B,IAAIkqB,EAAe1uB,KAAKqX,6BACpBsX,EAAkB3uB,KAAKqX,6BAE3BoX,EAAQjoB,SAAShB,IACf,MAAMP,EAAOO,EAAEvF,KAAKgB,MACdwE,EAAe,CAACH,EAAW+M,EAAS7M,EAAE/D,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAW5V,EAAEvF,KAAK4uB,SAAW,GAAK,SAClCC,EAAQtpB,EAAEvF,KAAKe,KACrB,IAAIwJ,EAAS,CACXvF,KAAMA,EACNxD,GAAI+D,EAAE/D,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZ5V,EAAEupB,YACEL,EAAaplB,QAAQ5C,KAAK8D,GAC1BmkB,EAAgBrlB,QAAQ5C,KAAK8D,MAGnCxK,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,4BACVkvB,GAEF1uB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0BACVmvB,GAKJtH,oBAAoBtB,EAAM1T,GACxB,MAAMlJ,EAAWnJ,KAAKoZ,wBAAwB,cACxC9T,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAErBwlB,EAASzU,OAAOjG,OAAO2H,WAC1BzP,QAAQiO,KAAQA,EAAEqC,QAClBxT,KAAKmR,GAAMA,EAAEqC,QAEhB,IAAKia,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAW6L,EAAOvK,OAAO3H,GAC7BA,EAAM0Z,QAAQjqB,QAAQkQ,MAAMlP,GAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,OAElE,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1B,MAAM8kB,EAAUtvB,KAAKR,KAAK,6BAC1BQ,KAAKwX,gCAAgCrO,EAAUmmB,EAASF,GACxDpvB,KAAKqZ,yBAAyB0M,EAAMuJ,EAASnmB,GAI/CqlB,0BAA0BzZ,EAAO1C,EAASlJ,GACxC,MAAM7D,EAAY,YAEZ0pB,EAAsBC,OAAOC,cAAczqB,QAC9C0qB,GAA+B,KAAjBA,EAAU1tB,KAG3B,IAAKutB,EAAqB,OAE1B,IAAII,EAAapvB,KAAKqX,6BAEtB2X,EAAoBxoB,SAAShF,IAC3B,MAAMyD,EAAOjF,KAAKR,KAAKgC,EAAEP,OACnBwE,EAAe,CAACH,EAAW+M,EAAS7Q,EAAEC,IAAIkE,KAAK3F,KAAKoF,WACpDgW,EAAWrG,EAAM0Z,QAAQjqB,QAAQkQ,MACpClP,GAAMA,EAAEvF,KAAK6R,MAAM+G,MAAMwW,WAAa7tB,EAAEC,KAEvC,SACA,GACEqtB,EAAQttB,EAAER,KACVwJ,EAAS,CACbvF,KAAMA,EACNxD,GAAID,EAAEC,GACNgE,aAAcA,EACdG,IAAKkpB,EACL1T,SAAUA,GAGZgU,EAAW9lB,QAAQ5C,KAAK8D,MAG1BxK,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACV4vB,GAKJpB,yBAAyB1oB,EAAW6D,EAAUkJ,GAC5C,MAAMkd,EAAS3wB,KAAK2wB,OACpB,IAAIC,EAAWC,EACXF,IACFC,EAAYD,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAYA,IACxDod,EAAoBD,GAAWG,YAGjC,IAAIA,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCAQ9BiwB,IAAmBG,EAAiBtU,MAAQmU,GAChDG,EAAiBxU,SAAWqU,EAAoB,SAAW,GAE3DE,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJE,8BAA8BvqB,EAAW+M,EAASlJ,GAChD,MAAMomB,EAAS3wB,KAAK2wB,OAEpB,IAaIO,EAbAH,EAAa3vB,KAAKqX,6BAOlBuY,EAAmB,CACrBnuB,GAAI,iBACJgE,aAPoB,CAACH,EAAW+M,EAAS,cAAc1M,KACvD3F,KAAKoF,WAOLH,KALmB,GAAGjF,KAAKR,KAAK,oCASlC,GAAI+vB,EAAQ,CAKVO,EAJetd,OAAOjG,OAAO2H,WAAW3S,KAAKmR,GAAMA,EAAEjR,KACtBF,KAAKE,GAClC8tB,EAAOG,WAAW9tB,MAAMJ,GAAMA,EAAE6Q,UAAY5Q,MAEnBib,OAAOlb,KAAQA,GAAGmuB,aAG/CC,EAAiBxU,SAAW0U,EAAW,SAAW,GAElDH,EAAWrmB,QAAQ5C,KAAKkpB,GAExB5vB,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,6BACVmwB,GAKJ1H,oBAAoB5V,EAAS0C,EAAOzP,EAAWqB,GAC7C,IAAI6D,EAASxK,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GAExD,OADA3G,KAAK+vB,aAAahb,EAAOpO,EAAM6D,GACxBA,EAITshB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,WACxDQ,EAAM5F,KAAKiwB,UAAUtpB,GACrB3F,EAAOhB,KAAKkwB,eAAevpB,EAAK1G,MAAMmwD,UAAUC,UASpD,MARa,CACXprD,KAAM0B,EAAK1B,KACXxD,GAAIkF,EAAKjB,IACTD,aAAcA,EACdG,IAAKA,EACL5E,KAAMA,GAOV+uB,aAAahb,EAAOpO,EAAM6D,GACxBA,EAAO8Q,MAAQtb,KAAKqwB,iBAAiB1pB,GAErC6D,EAAOkR,MAAQ,GAEflR,EAAOmR,MAAQ,GAGjBsU,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAI1DypB,iBAAiB1pB,GACf,IAAIC,EAAS,GACT8gB,EAAW/gB,EAAK1G,KAAK+vD,IAKzB,OAJItoC,EAAW,IACb9gB,EAAS8gB,GAGJ9gB,EAIT4gB,qBAAqBnJ,GAMnB,OAAyBA,EAI3BuL,yBAAyBI,GAGvB,OAFaA,EAAOvlB,QAAQkV,GAAMA,EAAE1Z,KAAKswD,YAK3C7nC,qBAAqBrK,GAInB,OAAOA,EAAM5Z,QAAQkV,IACnB,IAAI6W,EAAO7W,EAAE1Z,KAAKuwB,KAElB,OAAKA,KAGDA,EAAKrkB,IAAM,IAAMqkB,EAAKvxB,UAO9B2oB,gBAAgBvJ,GACd,IAAIzX,EAASyP,OAAOiE,OAAO+D,GAI3B,OAFAzX,EAAOwE,MAAK,CAACC,EAAGC,IAAMD,EAAED,KAAOE,EAAEF,OAE1BxE,EAIT8mB,oBAAoBvD,GAKlB,MAJc,CACZ,EAAG,GACH,EAAG,gCAEQA,GAGf+F,eAAe1lB,GAUb,MATY,CAEVmmD,UAAW,8BACXC,OAAQ,8BACRC,MAAO,gCACPC,SAAU,8BACVC,YAAa,yCACbC,SAAU,+BAEDxmD,ICjwBR,MAAMymD,2BAA2B7xC,YACtCxf,cACEG,QAIFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEvB,GAAgB,UAAZ9O,EACF,IAAK,IAAIK,KAAKF,OAAOjG,OAAO2H,WAAY,CACtC,IAAI8f,EAAUthB,EAAEzS,KAAKyF,UACf1F,KAAKi0B,cAActwB,EAAO2B,EAAW0uB,EAAS3S,cAGhDrhB,KAAKi0B,cAActwB,EAAO2B,EAAW+M,EAASgP,GAIxD4S,oBAAoBtwB,EAAO2B,EAAW+M,EAASgP,GAC7C,OAAQ/b,GACN,IAAK,WACHtF,KAAKk0B,iBAAiBvwB,EAAO0O,EAASgP,GACtC,MACF,IAAK,UACHrhB,KAAKm0B,eAAexwB,EAAO0O,EAASgP,GACpC,MACF,IAAK,OACL,IAAK,QACL,IAAK,QACCrhB,KAAK6gB,eAAgB7gB,KAAK2gB,aAAatO,EAASgP,GAC/CrhB,KAAKwlB,cAAc7hB,EAAO0O,EAASgP,IAY9C6S,iBAAiBvwB,EAAO0O,EAASoiB,GACjB10B,MAAMue,SAASjM,GACvB6+C,aAAaz8B,GAGrBN,eAAexwB,EAAO0O,EAASoiB,GAC7B,MAAM1f,EAAQhV,MAAMue,SAASjM,GACvB8+C,EAAY,CAChBp8C,MAAOA,EACPrT,KAAM,UACNzB,KAAM8U,EAAM9U,KAAKA,KAAK6vD,SAASr7B,GAC/BxvB,KAAM8P,EAAM9U,KAAKA,KAAK6vD,SAASr7B,GAASxzB,MACxCQ,GAAIgzB,GAEN1f,EAAMq8C,YAAYD,GAGpB3rC,cAAc7hB,EAAO0O,EAASkN,GAC5B,IAAIxK,EAAQhV,MAAMue,SAASjM,GAM3B,OALWtS,MAAMuf,QAAQvK,EAAOwK,GAKpBkG,KAAK,CAAE9hB,MAAAA,IAIrByxB,6BAA6B/iB,GAC3B,IAAI0C,EAAQhV,MAAMue,SAASjM,SAErB0C,EAAMsgB,eAAe,CAAEC,kBAAkB,IAE/CpzB,MAAMyF,QAAQ,6BAGhB4sB,mBAAmB5wB,EAAO0O,EAASkjB,GACjC,MACMhC,EADQxzB,MAAMue,SAASjM,GACRoc,QAAQjqB,QAAQ5C,MAAM4D,GAAMA,EAAE/D,KAAO8zB,IAE1D,IAAKhC,EAAQ,OAEb,MAAMlE,EAAWkE,EAAOtzB,KAAK6R,MAAM+G,MAAMwW,SACrCA,QACIrvB,KAAKw0B,gBAAgB7wB,EAAO0O,EAASgd,UAIvCkE,EAAOnmB,OAAO,CAAEyhB,UAAW0E,EAAOtzB,KAAK4uB,WAC7C3sB,MAAMyF,QAAQ,8BAGhB6sB,sBAAsB7wB,EAAO0O,EAASkjB,GACpC,MAAMhjB,EAAQxS,MAAMyf,SAASnN,GACvB+N,EAAepgB,KAAKogB,aAAazc,GACvC,GACE4xB,EAASxxB,SAAS,yBAClBnF,KAAK42B,MACJpV,EACD,CACA,MAAMqV,EAAez1B,KAAK01B,cAAcH,IAAWt0B,MACnD,IAAKw0B,EAAc,OAEnB72B,KAAK42B,IAAIG,aAAaF,EAAcljB,SAC1B3T,KAAK42B,IAAII,gBAAgBH,EAAcljB,SACvC3T,KAAK42B,IAAIK,aAAaJ,EAAcljB,OACzC,CACL,MAAM4c,EAAYnvB,KAAK01B,cAAcH,GACrC,IAAKpG,EAAW,OAEhB/O,QACU7N,EAAMujB,cAAc3G,SACpB5c,EAAMgiB,aAAapF,GAG/BjtB,MAAMyF,QAAQ,6BAGhB+tB,cAAcj0B,GACZ,OAAOwtB,OAAOC,cAActtB,MAAM2xB,GAAWA,EAAO9xB,KAAOA,KChIxD,MAAM4vD,gCAAgCxuC,cAC3CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAGhC,OAFoB,IAAIuV,iBAAc3V,EAAeI,GAMvDic,2BAKE,MAFc,CAAExK,KAFA,cAQlBqK,iBAAiBE,GACf,IAAIrW,EACJ,OAAQqW,GACN,IAAK,OACL,QACErW,EAAc,IAAI4Y,mBAItB,OAAO5Y,EAITgX,mBAAmB3kB,EAASJ,KCrCvB,MAAMsyD,+BAA+B30C,cAC1C/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAM9Q,GAEpBmF,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMtT,GAEPsT,EAAM9U,KAAKyB,KAE3B,IAAI6vD,EAAiBvxD,KAAKwxD,mBAAmBz8C,EAAO1C,GAChD46B,EAASjtC,KAAKu8C,WAAWxnC,EAAO1C,GAChC+kB,EAAUp3B,KAAKyxD,YAAY18C,EAAO1C,GAClCq/C,EAAS1xD,KAAK2xD,WAAW58C,EAAO1C,GAChCqU,EAAY1mB,KAAK06B,cAAc3lB,EAAO1C,GACtCyS,EAAa9kB,KAAKm3B,eAAepiB,EAAO1C,GAqC5C,OAnCArS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2CACV+xD,GAEFvxD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVytC,GAEGruC,KAAKC,SAASC,IAAI,YAAa,qBAClCkB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVkyD,GAGJ1xD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAEFp3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,sCACVknB,GAEF1mB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,6BACVslB,GAGEje,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAGT4qD,mBAAmBz8C,EAAO1C,GACxB,IAAIu/C,EAAgB78C,EAAMsJ,MAAM5Z,QAC7BkC,GAA6B,kBAApBA,EAAK1G,MAAMyB,MAA4BiF,EAAK1G,KAAKA,MAAM4xD,SAE/DjrD,EAAS5G,KAAKoZ,wBAAwB,eACtC04C,EAAiB9xD,KAAKqX,6BAW1B,OAVAy6C,EAAexoD,QAAUtJ,KAAK03B,YAC5BrlB,EACAu/C,EACA,iBAEF5xD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACVsyD,GAEKlrD,EAGT21C,WAAWxnC,EAAO1C,GAChB,IAAIu/C,EAAgB78C,EAAMsJ,MAAM5Z,QAC7BkC,GAA6B,UAApBA,EAAK1G,MAAMyB,MAAoBiF,EAAK1G,KAAKA,MAAM4xD,SAEvDjrD,EAAS5G,KAAKoZ,wBAAwB,gBACtC24C,EAAiB/xD,KAAKqX,6BAQ1B,OAPA06C,EAAezoD,QAAUtJ,KAAK03B,YAAYrlB,EAASu/C,EAAe,SAElE5xD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACVuyD,GAEKnrD,EAGT6qD,YAAY18C,EAAO1C,GACjB,IAAIu/C,EAAgB78C,EAAMsJ,MAAM5Z,QAC7BkC,GACqB,WAApBA,EAAK1G,MAAMyB,MAA+C,WAA1BiF,EAAK1G,KAAKA,MAAM+xD,QAEhDprD,EAAS5G,KAAKoZ,wBAAwB,gBACtC64C,EAAkBjyD,KAAKqX,6BAY3B,OAXA46C,EAAgB3oD,QAAUtJ,KAAK03B,YAC7BrlB,EACAu/C,EACA,UAGF5xD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACVyyD,GAEKrrD,EAGT+qD,WAAW58C,EAAO1C,GAChB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,eACtC84C,EAAiBlyD,KAAKqX,6BACtB5R,EAAe,CAAC,QAAS4M,EAAS0C,EAAM9U,KAAKA,KAAKsvB,OAAO9tB,IAAIkE,KAC/D3F,KAAKoF,WAEHuB,EAAO,CACT1B,KAAM8P,EAAM9U,KAAKA,KAAKsvB,OAAO4iC,MAC7B1sD,aAAcA,EACdhE,GAAIsT,EAAM9U,KAAKA,KAAKsvB,OAAO9tB,IAS7B,OANAywD,EAAe5oD,QAAU,CAAC3C,GAC1B3G,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACV0yD,GAEKtrD,EAGT8zB,cAAc3lB,EAAO1C,GACnB,IAAIu/C,EAAgB78C,EAAMsJ,MAAM5Z,QAC7BkC,GAA6B,YAApBA,EAAK1G,MAAMyB,MAAsBiF,EAAK1G,KAAKA,MAAM4xD,SAEzDjrD,EAAS5G,KAAKoZ,wBAAwB,kBACtCkjB,EAAoBt8B,KAAKqX,6BAW7B,OAVAilB,EAAkBhzB,QAAUtJ,KAAK03B,YAC/BrlB,EACAu/C,EACA,WAEF5xD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uBACV88B,GAEK11B,EAGTuwB,eAAepiB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAazO,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YAC5CstC,EAAqBpyD,KAAKqX,6BAc9B,OAbA+6C,EAAmB9oD,QAAUwb,EAAWvjB,KAAKC,IAC3C,IAAIiE,EAAe,CAAC,YAAa4M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WAC1D,MAAO,CACLH,KAAMrG,KAAKY,KAAKE,SAAS8B,EAAE,GAAGP,OAC9BwE,aAAcA,EACdhE,GAAID,EAAE,OAGVxB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACV4yD,GAEKxrD,EAGT8wB,YAAYrlB,EAAS0mB,EAASr3B,GAC5B,OAAOq3B,EAAQx3B,KAAKoY,IAClB,IAAIlU,EAAe,CAAC/D,EAAM2Q,EAASsH,EAAElY,IAAIkE,KAAK3F,KAAKoF,WAC/CQ,EAAM5F,KAAKiwB,UAAUtW,GAOzB,MANa,CACX1U,KAAM0U,EAAE1U,KACRQ,aAAcA,EACdhE,GAAIkY,EAAElY,GACNmE,IAAKA,MAMXqqB,UAAUtpB,GACR,IAAIC,EAAS,GAEb,OADIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAC5CgB,GAAQ7C,SAAS,2CAErB,GADA6C,GC1MD,MAAMyrD,iCAAiCjzC,YAC5Cxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAER,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClB5B,EAAS4B,EAAQ,GAEjBpM,EAAQhV,MAAMue,SAASjM,GAC3B,OAAQ/M,GACN,IAAK,SACHtF,KAAKsyD,cAAchtD,EAAW3B,EAAOoR,EAAOwK,GAC5C,MACF,IAAK,QACHvf,KAAKuyD,aAAajtD,EAAW3B,EAAOoR,EAAOwK,GAC3C,MACF,IAAK,UACHvf,KAAK+9B,eAAez4B,EAAW3B,EAAOoR,EAAOwK,GAC7C,MACF,IAAK,gBACHvf,KAAKwyD,sBAAsBltD,EAAW3B,EAAOoR,EAAOwK,GACpD,MACF,IAAK,QACHvf,KAAKyyD,cAAcntD,EAAW3B,EAAOoR,EAAOwK,GAC5C,MACF,IAAK,YACHvf,KAAK0yD,kBAAkBptD,EAAW3B,EAAOoR,EAAOwK,IAKtD+yC,cAAchtD,EAAW3B,EAAOoR,EAAOsM,GACrC,IAAIsxC,EAAW59C,EAAM9U,KAAKA,KAAKm3B,QAAQ3yB,QACpCkC,GAASA,EAAKlF,KAAO4f,IAExBtM,EAAM69C,WAAWD,EAAS,IAG5BJ,aAAajtD,EAAW3B,EAAOoR,EAAOsM,GACpCtM,EAAM89C,YAGR90B,eAAez4B,EAAW3B,EAAOoR,EAAOsM,GACtC,IAAIyxC,EAAY/9C,EAAMsJ,MAAM5Z,QAAQkC,GAASA,EAAKlF,KAAO4f,IACzDtM,EAAM+mC,SAASgX,EAAU,IAG3BN,sBAAsBltD,EAAW3B,EAAOoR,EAAOsM,GAC7C,IAAIyxC,EAAY/9C,EAAMsJ,MAAM5Z,QAAQkC,GAASA,EAAKlF,KAAO4f,IACzDtM,EAAM+mC,SAASgX,EAAU,IAG3BL,cAAcntD,EAAW3B,EAAOoR,EAAOsM,GACrC,IAAIyxC,EAAY/9C,EAAMsJ,MAAM5Z,QAAQkC,GAASA,EAAKlF,KAAO4f,IACzDtM,EAAM+mC,SAASgX,EAAU,IAG3BJ,kBAAkBptD,EAAW3B,EAAOoR,EAAOsM,GACzCtM,EAAMi9B,cAAc3wB,IC9DjB,MAAM0xC,+BAA+BlwC,cAC1CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAGhC,OAFA5I,QAAQC,IAAI,WACQ,IAAIke,uBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,kBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,yBAIb5B,mBAAmB3kB,EAASJ,KC3BvB,MAAMg0D,8BAA8Br2C,cACzC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAI2Q,EAAa,GACbG,EAAS,GACTmS,EAAU,GACV67B,EAAY,GACZ37B,EAAU,GACV47B,EAAS,GACThoB,EAAc,GACd5f,EAAQ,GACR8D,EAAa,GACb/S,EAAU,GACVsrB,EAAS,GAET/gC,EAAS5G,KAAKud,4BAElB,GAAIpJ,EAEF,OADAnU,KAAK8lB,wBAAwBlf,GACtBA,EAGT,IAAK2L,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IACzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnB,IACI8yB,EAAY3kB,EAAM9U,KAAKyB,KAC3B,IAFuB,CAAC,YAAa,YAAa,YAE5BqC,SAAS21B,GAAY,OAAO9yB,EAoBlD,OAlBAA,EAAO4N,QAAUO,EAAMrP,IACL,cAAdg0B,GAA2C,cAAdA,GAC/B5U,EAAa9kB,KAAKm3B,eAAepiB,EAAO1C,GACxC4S,EAASjlB,KAAKm8C,WAAWpnC,EAAO1C,GAChC+kB,EAAUp3B,KAAKmzD,gBAAgBp+C,EAAO1C,GACtC4gD,EAAYjzD,KAAKq3B,cAActiB,EAAO1C,GACtCilB,EAAUt3B,KAAKozD,gBAAgBr+C,EAAO1C,GACtC6gD,EAASlzD,KAAKqzD,eAAet+C,EAAO1C,GACpC64B,EAAclrC,KAAKszD,oBAAoBv+C,EAAO1C,GAC9CiZ,EAAQtrB,KAAKuzD,cAAcx+C,EAAO1C,GAClC+c,EAAapvB,KAAKqgC,mBAAmBtrB,EAAO1C,GAC5CgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,KAEtCyS,EAAa9kB,KAAKwzD,uBAAuBz+C,EAAO1C,GAChDs1B,EAAS3nC,KAAKyzD,eAAe1+C,EAAO1C,GACpCgK,EAAUrc,KAAKoc,gBAAgBrH,EAAO1C,IAGhC0C,EAAM9U,KAAKyB,MACjB,IAAK,YACH1B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAEFp3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,4BACVyzD,GAEFjzD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV83B,GAEFt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2CACV0zD,GAEFlzD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,gDACV0rC,GAEFlrC,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0CACV8rB,GAEFtrB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,+CACV4vB,GAEFpvB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKy3B,sBAAsB1iB,GACvBlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAChE,MACF,IAAK,YACHjF,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVylB,GAEFjlB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV43B,GAEFp3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,4BACVyzD,GAEFjzD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV83B,GAEFt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,2CACV0zD,GAEFlzD,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0CACV8rB,GAEFtrB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKy3B,sBAAsB1iB,GACvBlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAChE,MACF,IAAK,WACHjF,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVmoC,GAEF3nC,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKy3B,sBAAsB1iB,GACvBlO,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAOpE,OAAO2B,EAGTusD,gBAAgBp+C,EAAO1C,GACrB,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,SAEtChC,EAAcpX,KAAKqX,6BAavB,OAZAD,EAAY9N,QAAUtJ,KAAK03B,YACzBrlB,EACA0C,EAAMsJ,MAAM5Z,QAAQkV,GAAMA,EAAEjY,MAAQ4D,IACpCA,GAGFtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV4X,GAGKxQ,EAGTywB,cAActiB,EAAO1C,GACnB,IACIzL,EAAS5G,KAAKoZ,wBAAwB,SACtC3U,EAAS,CAAC,OAAQ,SAClB4Z,GAAStJ,EAAMsJ,OAAS,IACzB5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChC0J,KAAKpL,KAAK6d,cAETgtB,EAAaxsB,EAAM5Z,QAAQkV,GAAiB,UAAXA,EAAEjY,OACnCopC,EAAgB9qC,KAAK4qC,kBAAkBv4B,EAAS,QAASw4B,GACzDE,EAAS/qC,KAAKqX,6BAClB0zB,EAAOzhC,QAAUwhC,EAEjB,IAAImF,EAAW5xB,EAAM5Z,QAAQkV,GAAiB,SAAXA,EAAEjY,OACjCgyD,EAAc1zD,KAAK4qC,kBAAkBv4B,EAbzB,OAa6C49B,GACzDtpC,EAAO3G,KAAKqX,6BAchB,OAbA1Q,EAAK2C,QAAUoqD,EAEf1zD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACVurC,GAEF/qC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,4BACVmH,GAGKC,EAETwsD,gBAAgBr+C,EAAO1C,GACrB,IACIzL,EAAS5G,KAAKoZ,wBAAwB,SACtC3U,EAAS,CAAC,UAKVkvD,GAJS5+C,EAAMsJ,OAAS,IACzB5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChC0J,KAAKpL,KAAK6d,cAEUpZ,QAAQkV,GAAiB,WAAXA,EAAEjY,OACnCkyD,EAAgB5zD,KAAK4qC,kBAAkBv4B,EAR3B,OAQ+CshD,GAC3D77B,EAAS93B,KAAKqX,6BAQlB,OAPAygB,EAAOxuB,QAAUsqD,EACjB5zD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACVs4B,GAGKlxB,EAETysD,eAAet+C,EAAO1C,GACpB,IACIzL,EAAS5G,KAAKoZ,wBAAwB,SACtC3U,EAAS,CAAC,UAKVovD,GAJS9+C,EAAMsJ,OAAS,IACzB5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChC0J,KAAKpL,KAAK6d,cAEUpZ,QAAQkV,GAAiB,WAAXA,EAAEjY,OACnCoyD,EAAgB9zD,KAAK4qC,kBAAkBv4B,EAR3B,OAQ+CwhD,GAC3DX,EAASlzD,KAAKqX,6BAQlB,OAPA67C,EAAO5pD,QAAUwqD,EACjB9zD,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2CACV0zD,GAGKtsD,EAGT0sD,oBAAoBv+C,EAAO1C,GACzB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,eACtC8xB,EAAclrC,KAAKqX,6BACFrX,KAAKqX,6BAC1B,IAAI/R,EAAY,cAEZyuD,EAAsB19C,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKirC,aAEzD6oB,EAAoBp9C,OAAO,EAAG,GAC9B,IAAIq9C,EAAiBD,EAAoBxyD,KAAKC,IAC5C,IAAIyD,EAAOjF,KAAKR,KACd,+CAAiDgC,EAAE,IAEjDC,EAAKD,EAAE,GACPiE,EAAe,CAACH,EAAW+M,EAAS5Q,EAAIwD,GAAMU,KAAK3F,KAAKoF,WAC5D,MAAO,CAAEH,KAAMA,EAAMQ,aAAcA,EAAchE,GAAIA,MASvD,OAPAypC,EAAY5hC,QAAUtJ,KAAK03B,YAAYrlB,EAAS2hD,EAAgB1uD,GAChEtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,gDACV0rC,GAGKtkC,EAET2sD,cAAcx+C,EAAO1C,GACnB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,SAC9BpZ,KAAKqX,6BACjB,IAAI48C,EAAiBj0D,KAAKqX,6BACtB/R,EAAY,QAEZb,EAAS,CAAC,QAMVyvD,GALSn/C,EAAMsJ,OAAS,IACzB5Z,QAAQ4G,GAAM5G,EAAOV,SAASsH,EAAE3J,QAChC0J,KAAKpL,KAAK6d,cACSpZ,QAAQkV,GAAMA,EAAE1Z,KAAKk0D,WAAa,IAE/B5yD,KAAKC,IAC5B,IAAIyD,EAAOzD,EAAEvB,KAAKgF,KACdxD,EAAKD,EAAEvB,KAAKyF,IACZ0uD,EAAgB,CAAC9uD,EAAW+M,EAASpN,EAAMxD,GAAIkE,KAAK3F,KAAKoF,WAC7D,MAAO,CAAEH,KAAMA,EAAMQ,aAAc2uD,EAAe3yD,GAAIA,MAUxD,OARAwyD,EAAe3qD,QAAUtJ,KAAK03B,YAAYrlB,EAAS6hD,EAAU5uD,GAE7DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0CACVy0D,GAGKrtD,EAITgkC,kBAAkBv4B,EAAS/M,EAAW2qC,EAAUC,GAAY,GAC1D,IAAItpC,EAAS5G,KAAK03B,YAAYrlB,EAAS49B,EAAU3qC,EAAW4qC,GAS5D,OAPAtpC,EAAOJ,SAASmT,GACd3Z,KAAK+vB,aACHkgB,EAASruC,MAAM+E,GAASA,EAAK1G,KAAKyF,MAAQiU,EAAElY,KAC5CkY,KAIG/S,EAITmpB,aAAappB,EAAMwpC,GACjBA,EAAW70B,MAAQtb,KAAKqwB,iBAAiB1pB,GAI3C0pB,iBAAiB1pB,GACf,IAAIC,EAAS,GACT8gB,EAAW/gB,EAAK1G,KAAKA,KAAKynB,UAAUzoB,MAKxC,OAJIyoB,EAAW,IACb9gB,EAAS8gB,GAGJ9gB,EAGTuwB,eAAepiB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa9kB,KAAKqX,6BAClB/R,EAAY,YAGZqyB,EADqBthB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YACjBvjB,KAAKC,IAC1C,IAAIyD,EAAOjF,KAAKR,KAAK,6CAA+CgC,EAAE,IAClEC,EAAKD,EAAE,GAEX,MAAO,CAAEyD,KAAMA,EAAMQ,aADF,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACL3D,GAAIA,MAWvD,OARAqjB,EAAWxb,QAAUtJ,KAAK03B,YAAYrlB,EAASslB,EAAeryB,GAE9DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACVslB,GAGKle,EAGT4sD,uBAAuBz+C,EAAO1C,GAC5B,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa9kB,KAAKqX,6BAClBg9C,EAAcr0D,KAAKqX,6BACnB/R,EAAY,oBAGZqyB,EADqBthB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YACjBvjB,KAAKC,IAC1C,IAAIyD,EAAOjF,KAAKR,KAAK,6CAA+CgC,EAAE,IAClEC,EAAKD,EAAE,GAEX,MAAO,CAAEyD,KAAMA,EAAMQ,aADF,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACL3D,GAAIA,MAEnD6yD,EAAkBj+C,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKs0D,SACrDD,EAAgB39C,OAAO,EAAG,GAE1B,IAAI69C,EAAaF,EAAgB/yD,KAAKC,IACpC,IAAIyD,EAAOjF,KAAKR,KAAK,6CAA+CgC,EAAE,IAClEC,EAAKD,EAAE,GAEX,MAAO,CAAEyD,KAAMA,EAAMQ,aADF,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACL3D,GAAIA,MAavD,OAVAqjB,EAAWxb,QAAUtJ,KAAK03B,YAAYrlB,EAASslB,EAAeryB,GAC9D+uD,EAAY/qD,QAAUtJ,KAAK03B,YAAYrlB,EAASmiD,EAAYlvD,GAE5DtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,6BACVslB,GAEF9kB,KAAKwX,gCAAgC5Q,EAAQ,GAAIytD,GAE1CztD,EAGTu1C,WAAWpnC,EAAO1C,GAChB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtC0L,EAAa9kB,KAAKqX,6BAClB/R,EAAY,QAGZ4jC,EADiB7yB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAKglB,QACtB1jB,KAAKC,IACjC,IAAIyD,EAAOjF,KAAKR,KAAK,yCAA2CgC,EAAE,IAC9DC,EAAKD,EAAE,GAEX,MAAO,CAAEyD,KAAMA,EAAMQ,aADF,CAACH,EAAW+M,EAAS5Q,GAAIkE,KAAK3F,KAAKoF,WACL3D,GAAIA,MAWvD,OARAqjB,EAAWxb,QAAUtJ,KAAK03B,YAAYrlB,EAAS62B,EAAU5jC,GAEzDtF,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACVslB,GAGKle,EAGTkf,wBAAwBC,GACtBA,EAAK1T,QAAU,QACf0T,EAAKvR,QAAU,QAEf,MAAMwS,EAAe,CAAC,UAAW,aACjC,IAAIC,EAASzU,OAAOjG,OAAO2H,WACxB3S,KAAKmR,GAAMA,EAAEqC,QACbtQ,QAAQ4G,GAAM2b,EAAajjB,SAASsH,EAAEpL,KAAKyB,QAE9C1B,KAAKmc,mBAAmB4J,EAAMA,EAAK1T,QAAS4U,GAG9CwsC,eAAe1+C,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UACtCuuB,EAAS3nC,KAAKqX,6BAGlB,GAAwB,aAApBtC,EAAM9U,KAAKyB,KAAqB,CAClC,IAAI+yD,EAASz0D,KAAKqX,6BAEdq9C,EAAiB,GACjBC,EAAe,CAAC,iBAAkBtiD,EAAS,iBAAkB,IAAI1M,KACnE3F,KAAKoF,WAEPsvD,EAAiB,CACfjzD,GAAI,iBACJwD,KAAMjF,KAAKR,KAAK,mDAChBiG,aAAckvD,GAEhBF,EAAOnrD,QAAQ5C,KAAKguD,GAEpB,IAAIE,EAAa,GACbC,EAAe,CAAC,aAAcxiD,EAAS,aAAc,IAAI1M,KAC3D3F,KAAKoF,WAEPwvD,EAAa,CACXnzD,GAAI,aACJwD,KAAMjF,KAAKR,KAAK,wDAChBiG,aAAcovD,GAEhBJ,EAAOnrD,QAAQ5C,KAAKkuD,GACpB50D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wDACVi1D,GAUJ,OANAz0D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yBACVmoC,GAGK/gC,EAGTwV,gBAAgBrH,EAAO1C,GACrB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WACtCiD,EAAUrc,KAAKqX,6BAEfo9C,EAASz0D,KAAKqX,6BACdy9C,EAAgB,GAChBC,EAAS,EACb,OAAQhgD,EAAM9U,KAAKyB,MACjB,IAAK,YACHqzD,EAAShgD,EAAM9U,KAAKA,KAAKw0D,QAAQM,OAC7BA,GACFD,EAAcpuD,KACZ1G,KAAKg1D,kBACH3iD,EACA,SACArS,KAAKR,KAAK,2CACVu1D,EAAO91D,MACP,OAGNw1D,EAAOnrD,QAAUwrD,EAEjB,IAAIG,EAASlgD,EAAM9U,KAAKA,KAAKw0D,QAAQQ,OACjCA,GACFH,EAAcpuD,KACZ1G,KAAKg1D,kBACH3iD,EACA,SACArS,KAAKR,KAAK,iDACVy1D,EAAOh2D,MACP,OAGNw1D,EAAOnrD,QAAUwrD,EACjB,IAAII,EAAgB,GAChBC,EAAc,CAAC,aAAc9iD,EAAS,aAAc,IAAI1M,KAC1D3F,KAAKoF,WAEP8vD,EAAgB,CACdzzD,GAAI,aACJwD,KAAMjF,KAAKR,KAAK,+CAChBiG,aAAc0vD,GAEhBV,EAAOnrD,QAAQ5C,KAAKwuD,GAEpB,IAAIE,EAAkB,GAClBC,EAAW,CAAC,WAAYhjD,EAAS,WAAY,IAAI1M,KACnD3F,KAAKoF,WAEPgwD,EAAkB,CAChB3zD,GAAI,WACJwD,KAAMjF,KAAKR,KAAK,6CAChBiG,aAAc4vD,GAEhBZ,EAAOnrD,QAAQ5C,KAAK0uD,GAEpBp1D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2CACVi1D,GAEF,MAEF,IAAK,WACHM,EAAShgD,EAAM9U,KAAKA,KAAKw0D,QAAQM,OAC7BA,GACFD,EAAcpuD,KACZ1G,KAAKg1D,kBACH3iD,EACA,SACArS,KAAKR,KAAK,2CACVu1D,EAAO91D,MACP,OAGNw1D,EAAOnrD,QAAUwrD,EACjB90D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2CACVi1D,GAEF,MAEF,IAAK,YACHM,EAAShgD,EAAM9U,KAAKA,KAAKw0D,QAAQM,OAC7BA,GACFD,EAAcpuD,KACZ1G,KAAKg1D,kBACH3iD,EACA,SACArS,KAAKR,KAAK,2CACVu1D,EAAO91D,MACP,OAGNw1D,EAAOnrD,QAAUwrD,EAEjB,IAAIQ,EAAqB,GACrBC,EAAc,CAAC,WAAYljD,EAAS,WAAY,IAAI1M,KACtD3F,KAAKoF,WAcP,GAZAkwD,EAAqB,CACnB7zD,GAAI,WACJwD,KAAMjF,KAAKR,KAAK,6CAChBiG,aAAc8vD,GAEhBd,EAAOnrD,QAAQ5C,KAAK4uD,GAEpBt1D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,2CACVi1D,GAEE1/C,EAAM9U,KAAKA,KAAKw0D,OAAOe,YAAa,CACtC,IAAIN,EAAgB,GAChBC,EAAc,CAAC,aAAc9iD,EAAS,aAAc,GAAG1M,KACzD3F,KAAKoF,WAEP8vD,EAAgB,CACdzzD,GAAI,aACJwD,KAAMjF,KAAKR,KAAK,+CAChBiG,aAAc0vD,GAEhBV,EAAOnrD,QAAQ5C,KAAKwuD,IAc1B,OANAl1D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV6c,GAGKzV,EAGTy5B,mBAAmBtrB,EAAO1C,GACxB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtCgW,EAAapvB,KAAKqX,6BAClB/R,EAAY,aAEhB,GAAwB,cAApByP,EAAM9U,KAAKyB,KAAsB,CACnC,IAAI6yD,EAAUv0D,KAAKqX,6BACfo+C,EAAiB,GAKrBA,EAAiB,CACfh0D,GAAI,iBACJgE,aALuB,CAACH,EAAW+M,EAAS,iBAAkB,IAAI1M,KAClE3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,8CAElBi2D,EAAer6C,SAAWrG,EAAM9U,KAAKA,KAAKs0D,QAAQmB,SAASz2D,MACvD,SACA,GACJs1D,EAAQjrD,QAAQ5C,KAAK+uD,GAQrBA,EAAiB,CACfh0D,GAAI,mBACJgE,aARyB,CACzBH,EACA+M,EACA,mBACA,IACA1M,KAAK3F,KAAKoF,WAIVH,KAAMjF,KAAKR,KAAK,gDAElBi2D,EAAer6C,SAAWrG,EAAM9U,KAAKA,KAAKs0D,QAAQoB,WAAW12D,MACzD,SACA,GACJs1D,EAAQjrD,QAAQ5C,KAAK+uD,GAQrBA,EAAiB,CACfh0D,GAAI,kBACJgE,aARwB,CACxBH,EACA+M,EACA,kBACA,IACA1M,KAAK3F,KAAKoF,WAIVH,KAAMjF,KAAKR,KAAK,+CAElBi2D,EAAer6C,SAAWrG,EAAM9U,KAAKA,KAAKs0D,QAAQqB,UAAU32D,MACxD,SACA,GACJs1D,EAAQjrD,QAAQ5C,KAAK+uD,GAKrBA,EAAiB,CACfh0D,GAAI,iBACJgE,aALuB,CAACH,EAAW+M,EAAS,iBAAkB,IAAI1M,KAClE3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,8CAElBi2D,EAAer6C,SAAWrG,EAAM9U,KAAKA,KAAKs0D,QAAQsB,SAAS52D,MACvD,SACA,GACJs1D,EAAQjrD,QAAQ5C,KAAK+uD,GAKrBA,EAAiB,CACfh0D,GAAI,cACJgE,aALoB,CAACH,EAAW+M,EAAS,cAAe,IAAI1M,KAC5D3F,KAAKoF,WAKLH,KAAMjF,KAAKR,KAAK,2CAElBi2D,EAAer6C,SAAWrG,EAAM9U,KAAKA,KAAKs0D,QAAQuB,MAAM72D,MACpD,SACA,GACJs1D,EAAQjrD,QAAQ5C,KAAK+uD,GAErBz1D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+CACV+0D,GASJ,OANAv0D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,0BACV4vB,GAGKxoB,EAGTouD,kBAAkB3iD,EAAS/M,EAAWuqC,EAAUC,EAASC,GACvD,IAAItuC,EAAKouC,EAASl4B,QAAQ,CAAEC,YAAa,IAAKC,QAAQ,IAElDi9C,EAAgB,CAAE7vD,KAAM4qC,EAAUpqC,aADrB,CAACH,EAAW+M,EAAS5Q,EAAIquC,GAASnqC,KAAK3F,KAAKoF,WACG3D,GAAIA,GAGpE,OAFAqzD,EAAcx5C,MAAQ,GAAGw0B,KAAWC,IAE7B+kB,EAGT34C,mBAAmB4J,EAAM1T,EAAS4U,GAChC,IAAI9d,EAAWnJ,KAAKoZ,wBAAwB,WAGxCiD,EAAUrc,KAAKqX,6BAOnBrX,KAAKwX,gCACHrO,EACAnJ,KAAKR,KAAK,0BACV6c,GAEFrc,KAAKqZ,yBACH0M,EACA/lB,KAAKR,KAAK,0BACV2J,GAKJsuB,sBAAsBh2B,EAAI4c,GACxB,IAAIle,EAAcke,GAAO9c,KAAKkF,IACrB,CAAEhF,GAAIgF,EAAEf,IAAKzG,MAAOwH,EAAExB,SAE3B9E,GAAa0B,OAAS,GACxB7B,KAAKgH,cAAc6O,eAAepU,EAAItB,GAG1C04B,gBAAgBxxB,EAAY4d,GAC1B,IAAI6T,EAAgB94B,KAAKgH,cAAc0O,iBAAiBrO,GACpDT,EAASqe,EAAOxgB,QAAQgC,KAAQA,IASpC,OARIqyB,EAAcj3B,OAAS,IAEvB+E,EADE5G,KAAKgH,cAAce,YAAYV,GACxB4d,EAAOxgB,QAAQgC,IAAOqyB,EAAc/0B,SAAS0C,EAAExB,QAE/CggB,EAAOxgB,QAAQgC,GAAMqyB,EAAc/0B,SAAS0C,EAAExB,SAIpD2B,EAGT8wB,YAAYrlB,EAAS0mB,EAASr3B,GAC5B,OAAOq3B,EAAQx3B,KAAKoY,IAClB,IAAIlU,EAAe,CAAC/D,EAAM2Q,EAASsH,EAAElY,GAAIkY,EAAE1U,KAAK45B,eAAel5B,KAC7D3F,KAAKoF,WAEHQ,EAAM5F,KAAKiwB,UAAUtW,GACrB/S,EAAS,CACX3B,KAAM0U,EAAE1U,KACRQ,aAAcA,EACdhE,GAAIkY,EAAElY,GACNmE,IAAKA,GAKP,MAFa,WAATlE,IAAmBkF,EAAO8U,MAAQ1b,KAAKswB,aAAa3W,IAEjD/S,KAIXqpB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,EAG1D0pB,aAAa3pB,GACX,IAAIC,EAAS,GAET4pB,EAAO7pB,EAAK1G,KAAKA,KAAKuwB,KAC1B,OAAKA,IAECA,EAAKrkB,KAAOqkB,EAAKvxB,QAEvB2H,EAAS4pB,EAAKvxB,OAAS,EAEnBuxB,EAAKrkB,IAAM,IACbvF,GAAU,IAAI4pB,EAAKrkB,OAGdvF,GAVWA,EAapBiX,aAAaxS,EAAGC,GACd,OAAMD,GAAGpL,MAAMmL,MAAQE,GAAGrL,MAAMmL,KAEzBC,EAAEpL,KAAKmL,KAAOE,EAAErL,KAAKmL,KAFkB,GCn0B3C,MAAM2qD,gCAAgC32C,YAC3Cxf,cACEG,QAGFkgB,0BAA0Btc,EAAO8B,GAC/B,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAKIme,EALAt4B,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GACnB60C,EAAgB70C,EAAQ,GACxBpM,EAAQhV,MAAMue,SAASjM,GAEvB0C,IAAO6oB,EAAW7oB,EAAM9U,KAAKyB,MACjC,IAAIiF,EAAO0a,EAAWtM,EAAMsJ,MAAMvf,IAAIuiB,GAAY,KAGlD,GADiB,CAAC,OAAQ,SACXtd,SAASuB,IAActF,KAAK6gB,eACzC,OAAO7gB,KAAK2gB,aAAatO,EAASgP,GAEpC,GAAgB,UAAZhP,EACgB,YAAd/M,GAA2B+b,EAAStd,SAAS,UAC/C/D,KAAKi2D,+BAA+B50C,GAEpC7O,OAAOjG,OAAO2H,WAAW1N,SAASkM,IAChC,IAAIshB,EAAUthB,EAAEzS,KAAKyF,IACrB1F,KAAKi0B,cACHtwB,EACA2B,EACA0uB,EACA3S,EACA20C,UAID,CAGL,IAFoB,CAAC,WAEFjyD,SAASuB,GAC1B,OAAQs4B,GACN,IAAK,YACL,IAAK,WACL,IAAK,kBACG59B,KAAK6wC,yBACTvrC,EACA3B,EACA0O,EACA0C,EACAsM,GAKR,IAAI60C,EAAQ,GACZ,OAAQ5wD,GACN,IAAK,YACH4wD,EAAQ,CACNzwC,KAAM1Q,EAAM9U,KAAKA,KAAK6kB,WAAWzD,GAAUpiB,MAC3CgC,MAAO8T,EAAM9U,KAAKA,KAAK6kB,WAAWzD,GAAUpgB,OAE3B,UAAf0C,EAAMjC,KACRqT,EAAM2f,YAAY3f,EAAOmhD,GAEzBnhD,EAAMohD,eAAephD,EAAOmhD,GAE9B,MACF,IAAK,oBACH,OAAQ70C,GACN,IAAK,WACL,IAAK,cACH60C,EAAQ,CACNzwC,KAAM1Q,EAAM9U,KAAKA,KAAKs0D,QAAQlzC,GAAUpiB,MACxCgC,MAAO8T,EAAM9U,KAAKA,KAAKs0D,QAAQlzC,GAAUpgB,OAE3C,MACF,QACE,IAAIm1D,EACFJ,EAAc,GAAG5rC,cAAgB4rC,EAAcptB,UAAU,GAC3DstB,EAAQ,CACNzwC,KAAM1Q,EAAM9U,KAAKA,KAAK6kB,WAAWzD,GAAUpiB,MAC3CgC,MAAO,CAACm1D,IAIK,UAAfzyD,EAAMjC,KACRqT,EAAM2f,YAAY3f,EAAOmhD,GAEzBnhD,EAAMohD,eAAephD,EAAOmhD,GAE9B,MACF,IAAK,QACHA,EAAQ,CACNzwC,KAAM1Q,EAAM9U,KAAKA,KAAKglB,OAAO5D,GAAUud,IACvC39B,MAAO8T,EAAM9U,KAAKA,KAAKglB,OAAO5D,GAAUpgB,OAEvB,UAAf0C,EAAMjC,KACRqT,EAAM2f,YAAY3f,EAAOmhD,GAEzBnhD,EAAMohD,eAAephD,EAAOmhD,GAE9B,MACF,IAAK,SACgB,UAAfvyD,EAAMjC,KACRqT,EAAMshD,YAAY1vD,GAElBoO,EAAMuhD,YAAY3vD,GAEpB,MACF,IAAK,OACH3G,KAAKgxC,UAAUj8B,EAAO1C,EAASgP,EAAU/b,GACzC,MACF,IAAK,QACH4wD,EAAQ,CACNzwC,KAAM1Q,EAAM9U,KAAKA,KAAKs0D,QAAQpC,MAAMlzD,MACpCs3D,OAAQ,SAEVxhD,EAAM2f,YAAY3f,EAAOmhD,GACzB,MACF,IAAK,cACH,MAAMM,EACJ,aACCR,EAAc,GAAG5rC,cAAgB4rC,EAAcptB,UAAU,IACtD3nC,EACJrC,KAAKY,KAAKE,SAAS82D,GACnB,IACA53D,KAAKY,KAAKE,SAAS,mBACrBqV,EAAM0hD,iBAAiB1hD,EAAOsM,EAAUpgB,GACxC,MACF,IAAK,QACH,MAAMy1D,EACJ,aAAepxD,EAAU,GAAG8kB,cAAgB9kB,EAAUsjC,UAAU,IAC5D+tB,EACJ/3D,KAAKY,KAAKE,SAASg3D,GACnB,IACA93D,KAAKY,KAAKE,SAAS,mBACrBqV,EAAM0hD,iBAAiB1hD,EAAOzP,EAAWqxD,EAAQt1C,GACjD,MACF,IAAK,aACHrhB,KAAK42D,sBAAsBjzD,EAAO0O,EAASgP,GAC3C,MAEF,IAAK,UACHrhB,KAAKs0B,oBAAoB3wB,EAAO0O,EAASgP,KAQjDwvB,+BAA+BvrC,EAAW3B,EAAO0O,EAAS0C,EAAOsM,GAC/D,IAAI60C,EAAQ,EACZ,OAAQ5wD,GACN,IAAK,eACGtF,KAAKwxC,iBAAiB7tC,EAAOoR,EAAO,SAAU,QAASsM,GAC7D,MACF,IAAK,aAED60C,EADsB,cAApBnhD,EAAM9U,KAAKyB,KACL,CAAEm1D,UAAW9hD,EAAM9U,KAAKA,KAAKw0D,OAAOQ,QAEpC,CAAE4B,UAAW,CAAE53D,MAAO,EAAGgC,MAAO,WAEvB,UAAf0C,EAAMjC,KACRqT,EAAM2f,YAAY3f,EAAOmhD,GAEzBnhD,EAAMohD,eAAephD,EAAOmhD,GAE9B,MACF,IAAK,eACGl2D,KAAKwxC,iBAAiB7tC,EAAOoR,EAAO,SAAU,QAASsM,GAC7D,MACF,IAAK,iBACH,IAAIy1C,EAAW,CAAEC,QAAShiD,EAAM9U,KAAKA,KAAK+2D,SAC1CjiD,EAAMkiD,mBAAmBliD,EAAO+hD,GAChC,MACF,IAAK,aACH,IAAII,EAAc,CAChBzxC,KAAM1Q,EAAM9U,KAAKA,KAAKs0D,QAAQK,WAAW31D,MACzCgC,MAAO8T,EAAM9U,KAAKA,KAAKs0D,QAAQK,WAAW3zD,OAE5C8T,EAAMoiD,iBAAiBpiD,EAAOmiD,GAC9B,MACF,IAAK,WACHniD,EAAMsgD,SAAStgD,EAAM9U,KAAKyB,OAKhC8vC,uBAAuB7tC,EAAOoR,EAAOmgC,EAAUC,EAAW9zB,GACxD,IAAIpiB,EAAQ8V,EAAM9U,KAAKA,KAAKw0D,OAAOvf,GAAUC,GAG7C,GAAIn1C,KAAKmgB,WAAY,CACnB,GAAIlhB,GAAS,EAAG,OAChBA,QACK,CACL,GAAIA,GANI,KAMU,OAClBA,IAGF,IAAImO,EAAS,CAAEnN,KAAM,CAAEw0D,OAAQ,CAAEvf,CAACA,GAAW,CAAEC,CAACA,GAAYl2C,YAEtD8V,EAAM3H,OAAOA,GAGrBgqD,4BAA4BzzD,EAAOoR,EAAOmgC,EAAUC,EAAW9zB,GAC7D,IAAIpiB,EAAQ8V,EAAM9U,KAAKA,KAAKs0D,QAAQrf,GAAUC,GAG9C,GAAIn1C,KAAKmgB,WAAY,CACnB,GAAIlhB,GAAS,EAAG,OAChBA,IACiB,UAAbi2C,GACFngC,EAAMsiD,iBAAiBtiD,OAEpB,CACL,GAAI9V,GATI,IASU,OAClBA,IACiB,UAAbi2C,GACFngC,EAAMsiD,iBAAiBtiD,GAI3B,IAAI3H,EAAS,CAAEnN,KAAM,CAAEs0D,QAAS,CAAErf,CAACA,GAAW,CAAEC,CAACA,GAAYl2C,YACvD8V,EAAM3H,OAAOA,GAGrBknB,oBAAoB3wB,EAAO0O,EAASgP,GACtBthB,MAAMue,SAASjM,GAC3B,IAAIE,EAAQxS,MAAMyf,SAASnN,GAE3B,OAAQgP,GACN,IAAK,mBACH9O,EAAM+O,mBACN,MACF,IAAK,eACH/O,EAAMgP,eACNrf,MAAMyF,QAAQ,8BAKpBsuD,qCAAqC50C,GACnC,GAAiB,qBAAbA,EAAiC,CACnC,MAAMi2C,EAAa9kD,OAAOjG,OAAO2H,WAAWwI,OAAOhK,IAAOA,EAAEzS,KAAKwc,SACjEjK,OAAOjG,OAAO2H,WAAW1N,SAASkM,KAC5B4kD,GACK5kD,EAAEzS,KAAKwc,SADA/J,EAAE4O,sBAKtB,GAAiB,iBAAbD,EAA6B,CAC/B,MAAMk2C,EAAc/kD,OAAOjG,OAAO2H,WAAWwI,OAC1ChK,GAAMA,EAAEzS,KAAKsc,WAEhB,IAAK,IAAI7J,KAAKF,OAAOjG,OAAO2H,WACtBqjD,QAAmB7kD,EAAE6O,eACf7O,EAAEzS,KAAKsc,gBAAgB7J,EAAE6O,eAErCrf,MAAMyF,QAAQ,8BAIlBivD,sBAAsBjzD,EAAO0O,EAASgP,GACpC,IAAItM,EAAQhV,MAAMue,SAASjM,GAG3B,OAFYtS,MAAMyf,SAASnN,GAEnBgP,GACN,IAAK,iBACHrhB,KAAKo3D,sBAAsBzzD,EAAOoR,EAAO,WAAY,SACrD,MACF,IAAK,mBACH/U,KAAKo3D,sBAAsBzzD,EAAOoR,EAAO,aAAc,SACvD,MACF,IAAK,kBACH/U,KAAKo3D,sBAAsBzzD,EAAOoR,EAAO,YAAa,SACtD,MACF,IAAK,iBACH/U,KAAKo3D,sBAAsBzzD,EAAOoR,EAAO,WAAY,SACrD,MACF,IAAK,cACH/U,KAAKo3D,sBAAsBzzD,EAAOoR,EAAO,QAAS,UAMxDi8B,UAAUj8B,EAAO1C,EAASgP,EAAU/b,GACvByP,EAAMsJ,MAAMvf,IAAIuiB,GAE3B,GADiB,CAAC,QACHtd,SAASuB,GACtB,OAAOtF,KAAK2gB,aAAatO,EAASgP,GAElC7iB,QAAQg5D,KAAK,eCvSZ,MAAMC,8BAA8B50C,cACzCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,sBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,iBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,wBAIb5B,mBAAmB3kB,EAASJ,KC3BvB,MAAM04D,0BAA0B/6C,cACrC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAEnBA,EAAO4N,QAAUO,EAAMrP,IAGvB,IAAIiyD,EAAiB33D,KAAK43D,4BAA4B7iD,EAAO1C,GACzD0S,EAAoB/kB,KAAK63D,yBAC3B9iD,EACA1C,EACA,cAEEylD,EAAgB93D,KAAKqmB,qBAAqBtR,EAAO1C,EAAS,UAmB9D,OAhBArS,KAAKqZ,yBACHzS,EACAhI,KAAKY,KAAKE,SAAS,eACnBi4D,GAEF33D,KAAKqZ,yBACHzS,EACAhI,KAAKY,KAAKE,SAAS,mBACnBqlB,GAEF/kB,KAAKqZ,yBACHzS,EACAhI,KAAKY,KAAKE,SAAS,eACnBo4D,GAGKlxD,EAGTgxD,4BAA4B7iD,EAAO1C,GACjC,IAAI/M,EAAY,SACZsB,EAAS5G,KAAKoZ,wBAAwB,iBACtCiF,EAAQtJ,EAAMsJ,MAElB,MAAM05C,EAAkB,CAAC,KAAM,MAC/B,IAAIpzC,EAAc,GAClB,IAAK,IAAIqzC,KAAKD,EAAiB,CAC7B,IAAI9yD,EAAOrG,KAAKY,KAAKE,SAASqV,EAAM9U,KAAKA,KAAK+3D,GAAG/2D,OAC7CwE,EAAe,CAACH,EAAW+M,EAAS2lD,GAAGryD,KAAK3F,KAAKoF,WACrDuf,EAAYje,KAAK,CAAEzB,KAAMA,EAAMxD,GAAIu2D,EAAGvyD,aAAcA,IAEtD,IAAIwyD,EAAyBj4D,KAAKqX,6BAClC4gD,EAAuB3uD,QAAUqb,EACjC3kB,KAAKwX,gCACH5Q,EACAhI,KAAKY,KAAKE,SAAS,mBACnBu4D,GAGF,IAAI7gC,EAAU/Y,EACX5Z,QAAQkV,GAAsB,WAAhBA,EAAE1Z,KAAKyB,OACrB0J,MAAK,CAACC,EAAGC,IAAMD,EAAEpG,KAAKolB,cAAc/e,EAAErG,QACrCizD,EAAe75C,EAChB5Z,QACEkV,GAAsB,WAAhBA,EAAE1Z,KAAKyB,MAA6C,UAAxBiY,EAAE1Z,KAAKA,KAAKk4D,UAEhD/sD,MAAK,CAACC,EAAGC,IAAMD,EAAEpG,KAAKolB,cAAc/e,EAAErG,QACtCmzD,UACCrwC,EAAgB/nB,KAAK03B,YAAYrlB,EAAS+kB,EAAS9xB,GACnD+yD,EAAqBr4D,KAAKqX,6BAC9BghD,EAAmB/uD,QAAUye,EAC7B/nB,KAAKwX,gCACH5Q,EACAhI,KAAKY,KAAKE,SAAS,gBACnB24D,GAGF,IAAIC,EAAgB,GACpB,IAAK,IAAI9tD,KAAU5L,KAAK25D,KAAK50C,OAAOra,QAClC,GAAI1K,KAAK25D,KAAK50C,OAAOra,QAAQkB,GAAQ+0C,SAAU,CAC7C,IAAIt6C,EAAOrG,KAAKY,KAAKE,SAASd,KAAK25D,KAAK50C,OAAOra,QAAQkB,GAAQvF,MAC3DQ,EAAe,CACjBH,EACA+M,EACAzT,KAAK25D,KAAK50C,OAAOra,QAAQkB,GAAQ9I,MACjCiE,KAAK3F,KAAKoF,WAMZ,GALAkzD,EAAc5xD,KAAK,CACjBzB,KAAMA,EACNxD,GAAI+I,EACJ/E,aAAcA,IAEZR,IAASrG,KAAKY,KAAKE,SAAS,qBAC9B,IAAK,IAAI84D,EAAS,EAAGA,EAASN,EAAar2D,OAAQ22D,IAAU,CAC3D,MAAMvzD,EACJrG,KAAKY,KAAKE,SAAS,qBACnB,KACAw4D,EAAaM,GAAQv4D,KAAKgF,KAC1B,IACIQ,EAAe,CACnB,QACA4M,EACA6lD,EAAaM,GAAQv4D,KAAKyF,KAC1BC,KAAK3F,KAAKoF,WACZkzD,EAAc5xD,KAAK,CACjBzB,KAAMA,EACNQ,aAAcA,EACdhE,GAAIy2D,EAAaM,GAAQv4D,KAAKyF,OAOxC,IAAI+yD,EAAqBz4D,KAAKqX,6BAO9B,OANAohD,EAAmBnvD,QAAUgvD,EAC7Bt4D,KAAKwX,gCACH5Q,EACAhI,KAAKY,KAAKE,SAAS,gBACnB+4D,GAEK7xD,EAGTixD,yBAAyB9iD,EAAO1C,EAAS/K,GACvC,IAAIhC,EAAY,YACZsB,EAAS5G,KAAKoZ,wBAAwB,cACtC0L,EAAa/P,EAAM9U,KAAKA,KAAK6kB,WAE7Bxb,EAAU+M,OAAO7R,QAAQsgB,GAAYvjB,KAAKiE,IAC5C,GAAmB,IAAfA,EAAE,GAAGkzD,MAAa,OACtB,IAAIzzD,EAAOrG,KAAK25D,KAAK50C,OAAOmB,WAAWtf,EAAE,IAAIP,KACzCQ,EAAe,CAACH,EAAW+M,EAAS7M,EAAE,IAAIG,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAMA,EAAMxD,GAAI+D,EAAE,GAAIC,aAAcA,MAG3C2sD,EAAqBpyD,KAAKqX,6BAO9B,OANA+6C,EAAmB9oD,QAAUA,EAAQ7E,QAAQ4G,KAAQA,IACrDrL,KAAKwX,gCACH5Q,EACAU,EACA8qD,GAEKxrD,EAGTyf,qBAAqBtR,EAAO1C,EAAS/K,GACnC,IACIV,EAAS5G,KAAKoZ,wBAAwB9R,GAEtC2d,EADQlQ,EAAMsJ,MACC5Z,QAChBkV,GAAsB,UAAhBA,EAAE1Z,KAAKyB,MAAoC,mBAAhBiY,EAAE1Z,KAAKyB,OAE3CujB,EAAO7Z,MAAK,CAACC,EAAGC,IAAMD,EAAEpG,KAAKolB,cAAc/e,EAAErG,QAC7C,IAAI0zD,EAAe34D,KAAK03B,YAAYrlB,EAAS4S,EAP7B,SAQZ2zC,EAAoB54D,KAAKqX,6BAO7B,OANAuhD,EAAkBtvD,QAAUqvD,EAC5B34D,KAAKwX,gCACH5Q,EACAU,EACAsxD,GAEKhyD,EAIT8wB,YAAYrlB,EAAS0mB,EAASzzB,GAC5B,OAAOyzB,EACJt0B,QAAQkV,KAAQA,IAChBpY,KAAKoY,IACJ,IAAIlU,EAAe,CAACH,EAAW+M,EAASsH,EAAE1Z,KAAKyF,KAAKC,KAClD3F,KAAKoF,WAEP,MAAO,CAAEH,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAE1Z,KAAKyF,SCtL/D,MAAMmzD,4BAA4Bz5C,YACvCxf,cACEG,QAIFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GAC3B,OAAQ/M,GACN,IAAK,SACHyP,EAAM+jD,WAAWz3C,GACjB,MACF,IAAK,OACHrhB,KAAKwlB,cAAc7hB,EAAOoR,EAAOsM,GACjC,MACF,IAAK,QACHrhB,KAAKwlB,cAAc7hB,EAAOoR,EAAOsM,GAAU,GAC3C,MACF,IAAK,YACHtM,EAAMi9B,cAAc3wB,GACpB,MACF,IAAK,QACHrhB,KAAKwlB,cAAc7hB,EAAOoR,EAAOsM,IAMvCmE,cAAc7hB,EAAOoR,EAAOsM,EAAU03C,GAAQ,GAC5ChkD,EAAMsJ,MAAMzc,MAAM+X,GAAMA,EAAE1Z,KAAKyF,MAAQ2b,IAAUoE,KAAKszC,ICpCnD,MAAMC,0BAA0Bn2C,cACrCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,kBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,aAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,oBAIb5B,mBAAmB3kB,EAASJ,KC1BvB,MAAMi6D,4BAA4Bt8C,cACvC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAElB,IAAKA,EAAO,OAAOnO,EAGnB,GAAiB,aADDmO,EAAM9U,KAAKyB,KACG,OAAOkF,EAErCA,EAAO4N,QAAUO,EAAMrP,IAEvB,IAAIm7B,EAAQ7gC,KAAKk5D,UAAUnkD,EAAO1C,GAC9ByS,EAAa9kB,KAAKm3B,eAAepiB,EAAO1C,GACxCgM,EAAQre,KAAKsgC,aAAavrB,EAAO1C,GAoBrC,OAlBArS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,+BACVqhC,GAEF7gC,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,oCACVslB,GAEF9kB,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,+BACV6e,GAGExX,IAAa,kBAAiBD,EAAO0L,SAAWC,EAAMtS,MAAMgF,MAEzD2B,EAITsyD,UAAUnkD,EAAO1C,GACf,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,SACtCg5C,EAAqBpyD,KAAKqX,6BAE1BwpB,EAAQxqB,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK4gC,OAc3C,OAZAuxB,EAAmB9oD,QAAUu3B,EAAMt/B,KAAKC,IACtC,MAAM23D,EAAS33D,EAAE,GAIjB,MAAO,CAAEyD,KAHIrG,KAAKw6D,OAAOz1C,OAAOkd,MAAMs4B,GAGjB1zD,aADF,CADD,OACa4M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WACP3D,GAAID,EAAE,OAEzDxB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,+BACV4yD,GAEKxrD,EAITuwB,eAAepiB,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cACtCg5C,EAAqBpyD,KAAKqX,6BAC1ByN,EAAa/P,EAAMskD,yBA2BvB,OAzBAjH,EAAmB9oD,QAAUwb,EAAWvjB,KAAKC,IAC3C,MAAM83D,EAAc93D,EAAE,GAGtB,IAAIyD,EAKFA,EAHgB,kBAAhBq0D,GACyD,KAAzD16D,KAAKC,SAASC,IAAI,SAAU,yBAErBF,KAAKC,SAASC,IAAI,SAAU,yBACvBF,KAAKw6D,OAAOz1C,OAAOmB,WAAWw0C,GAE5C,IAAIh0D,EAAY,WAMhB,MAJoB,gBAAhBg0D,GAAiD,kBAAhBA,IACnCh0D,EAAY,UAGP,CAAEL,KAAMA,EAAMQ,aADF,CAACH,EAAW+M,EAAS7Q,EAAE,IAAImE,KAAK3F,KAAKoF,WACP3D,GAAID,EAAE,OAEzDxB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,oCACV4yD,GAEKxrD,EAIT05B,aAAavrB,EAAO1C,GAClB,IACI0V,EADUhT,EAAMsJ,MAAM5Z,QAAQkC,GAA6B,WAApBA,EAAK1G,MAAMyB,OAC1BH,KAAKymB,GAC/BhoB,KAAKioB,oBAAoB5V,EAAS0C,EAAO,SAAUiT,KAEjDE,EAAaloB,KAAKqX,6BACtB6Q,EAAW5e,QAAUye,EAErB,IACII,EADYpT,EAAMsJ,MAAM5Z,QAAQkC,GAA6B,SAApBA,EAAK1G,MAAMyB,OACvBH,KAAKiE,GACpCxF,KAAKioB,oBAAoB5V,EAAS0C,EAAO,OAAQvP,KAE/C4iB,EAAepoB,KAAKqX,6BACxB+Q,EAAa9e,QAAU6e,EAEvB,IAAIW,EAAe9oB,KAAKR,KAAK,0BACzBupB,EAAiB/oB,KAAKR,KAAK,4BAE3BoH,EAAS5G,KAAKoZ,wBAAwB,aAK1C,OAHApZ,KAAKwX,gCAAgC5Q,EAAQkiB,EAAcZ,GAC3DloB,KAAKwX,gCAAgC5Q,EAAQmiB,EAAgBX,GAEtDxhB,EAIT8wB,YAAYrlB,EAAS0mB,EAASzzB,GAC5B,OAAOyzB,EACJt0B,QAAQkV,KAAQA,IAChBpY,KAAKoY,IACJ,IAAIlU,EAAe,CAACH,EAAW+M,EAASsH,EAAE1Z,KAAKyF,KAAKC,KAClD3F,KAAKoF,WAGP,MADW,CAAEH,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAE1Z,KAAKyF,QAMxEuiB,oBAAoB5V,EAAS0C,EAAOzP,EAAWqB,GAG7C,OAFa3G,KAAK8rB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GAM1DmlB,WAAWzZ,EAAS0C,EAAOzP,EAAWqB,GACpC,IAAIlB,EAAe,CAACH,EAAW+M,EAAS1L,EAAKjB,KAAKC,KAAK3F,KAAKoF,WACxDQ,EAAM5F,KAAKiwB,UAAUtpB,GAQzB,MAPa,CACX1B,KAAM0B,EAAK1B,KACXxD,GAAIkF,EAAKjB,IACTD,aAAcA,EACdG,IAAKA,GAMTqqB,UAAUtpB,GACR,IAAIC,EAAS,GAGb,OAFIC,IAAa,eAAcD,EAASD,EAAKf,KAAO,IAE5CgB,GAAQ7C,SAAS,6BAAwC,GAAT6C,GC1KrD,MAAM2yD,8BAA8Bn6C,YACzCxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClB5B,EAAS4B,EAAQ,GAEjBpM,EAAQhV,MAAMue,SAASjM,GAC3B,OAAQ/M,GACN,IAAK,OACHtF,KAAKw5D,aAAal0D,EAAW3B,EAAOoR,EAAOwK,GAC3C,MACF,IAAK,WACHvf,KAAKy5D,iBAAiBn0D,EAAW3B,EAAOoR,EAAOwK,GAC/C,MACF,IAAK,SACHvf,KAAK05D,eAAep0D,EAAW3B,EAAOoR,EAAOwK,GAC7C,MACF,IAAK,SACHvf,KAAKsyD,cAAchtD,EAAW3B,EAAOoR,EAAOwK,GAC5C,MACF,IAAK,OACHvf,KAAK25D,YAAYr0D,EAAW3B,EAAOoR,EAAOwK,GAC1C,MACF,IAAK,UACHvf,KAAK+9B,eAAez4B,EAAW3B,EAAOoR,EAAOwK,IAKnDi6C,aAAal0D,EAAW3B,EAAOoR,EAAOsM,GACpCtM,EAAMk9B,SAAS5wB,GAGjBo4C,iBAAiBn0D,EAAW3B,EAAOoR,EAAOsM,GACxCtM,EAAM6kD,aAAav4C,GAGrBq4C,eAAep0D,EAAW3B,EAAOoR,EAAOsM,GACtCtM,EAAM8kD,eAAex4C,GAGvBixC,cAAchtD,EAAW3B,EAAOoR,EAAOsM,GACrC,IAAI1a,EAAOoO,EAAMsJ,MAAMvf,IAAIuiB,GAC3BtM,EAAM+kD,aAAanzD,GAGrBgzD,YAAYr0D,EAAW3B,EAAOoR,EAAOsM,GACnC,IAAI1a,EAAOoO,EAAMsJ,MAAMvf,IAAIuiB,GAC3BtM,EAAM+kD,aAAanzD,GAGrBo3B,eAAez4B,EAAW3B,EAAOoR,EAAOsM,GACtC,IAAIyxC,EAAY/9C,EAAMsJ,MAAM5Z,QAAQkC,GAASA,EAAK1G,MAAMyF,MAAQ2b,IAChEtM,EAAM+mC,SAASgX,EAAU,KC5DtB,MAAMiH,4BAA4Bl3C,cACvCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAGhC,OAFA5I,QAAQC,IAAI,WACQ,IAAIke,oBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,eAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,sBAIb5B,mBAAmB3kB,EAASJ,KC3BvB,MAAMg7D,wBAAwBr9C,cACnC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EACnB,IAAIyL,EAAUE,EAAM9Q,GACpBmF,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAClB,IAAKA,EAAO,OAAOnO,EACnBA,EAAO4N,QAAUO,EAAMtT,GAEvB,IAAIi4B,EAAY3kB,EAAM9U,KAAKyB,KAC3B,GAAkB,UAAdg4B,EAAuB,CACzB,IAAIiO,EAAS3nC,KAAKi6D,iBAAiBllD,EAAO1C,GAE1CrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,yBACVmoC,QAEG,GAAkB,cAAdjO,EAA2B,CACpC,IAAIwgC,EAAWl6D,KAAKm6D,aAAaplD,EAAO1C,GACpC+nD,EAAUp6D,KAAKq6D,YAAYtlD,EAAO1C,GAClCioD,EAAat6D,KAAKu6D,eAAexlD,EAAO1C,GACxCilB,EAAUt3B,KAAKu3B,YAAYxiB,EAAO1C,GAClCgM,EAAQre,KAAKw6D,UAAUzlD,EAAO1C,GAElCrS,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,uCACV06D,GAEFl6D,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,sCACV46D,GAEFp6D,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,wCACV86D,GAEFt6D,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,0BACV83B,GAEFt3B,KAAKqZ,yBACHzS,EACA5G,KAAKR,KAAK,mCACV6e,GAIJ,OAAOzX,EAGTuzD,aAAaplD,EAAO1C,GAClB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,YAKtCqhD,EAHWpkD,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YAAYrgB,QACvD4G,QAAoBqS,IAAdrS,EAAE,IAAIgnB,UAAoC3U,IAAfrS,EAAE,IAAIqvD,OAEfn5D,KAAK8J,IACvB,CAAE5J,GAAI4J,EAAE,GAAIpG,KAAMoG,EAAE,GAAGpK,UAE5BqI,EAAUtJ,KAAK03B,YAAYrlB,EAASooD,EAAa,QACjDE,EAAmB36D,KAAKqX,6BAS5B,OARAsjD,EAAiBrxD,QAAUA,EAE3BtJ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,uCACVm7D,GAGK/zD,EAGTyzD,YAAYtlD,EAAO1C,GACjB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAKtCwhD,EAHUvkD,OAAO7R,QAAQuQ,EAAM9U,KAAKA,KAAK6kB,YAAYrgB,QACtD4G,QAAoBqS,IAAdrS,EAAE,IAAIgnB,UAAqC3U,IAAhBrS,EAAE,IAAIpK,QAEjBM,KAAK8J,IACrB,CAAE5J,GAAI4J,EAAE,GAAIpG,KAAMoG,EAAE,GAAGpK,UAE5BqI,EAAUtJ,KAAK03B,YAAYrlB,EAASuoD,EAAY,QAChDC,EAAkB76D,KAAKqX,6BAS3B,OARAwjD,EAAgBvxD,QAAUA,EAE1BtJ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,sCACVq7D,GAGKj0D,EAGT2zD,eAAexlD,EAAO1C,GACpB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,cAEtC0hD,EAAQ,CACV,CACEr5D,GAAI,YACJwD,KAAMjF,KAAKR,KAAK,wCAElB,CACEiC,GAAI,gBACJwD,KAAMjF,KAAKR,KAAK,4CAElB,CACEiC,GAAI,qBACJwD,KAAMjF,KAAKR,KAAK,kDAGhB8J,EAAUtJ,KAAK03B,YAAYrlB,EAASyoD,EAAO,QAC3CC,EAAe/6D,KAAKqX,6BASxB,OARA0jD,EAAazxD,QAAUA,EAEvBtJ,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wCACVu7D,GAGKn0D,EAGT2wB,YAAYxiB,EAAO1C,GACjB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UAEtC4hD,EAAQh7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,SACjD4Y,EAAOjrB,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,QAChDs1B,EAAS3nC,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,UAClD6oD,EAAUl7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,WACnD8oD,EAAMn7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,OAC/C+oD,EAAWp7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,YACpD4yB,EAAOjlC,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,QAsCpD,OApCArS,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,mCACVw7D,GAEFh7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,kCACVyrB,GAEFjrB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,oCACVmoC,GAEF3nC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,kCACVylC,GAEFjlC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,qCACV07D,GAEFl7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,iCACV27D,GAEFn7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,sCACV47D,GAGKx0D,EAGTqzD,iBAAiBllD,EAAO1C,GACtB,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UAEtC4hD,EAAQh7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,SACjD4Y,EAAOjrB,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,QAChDs1B,EAAS3nC,KAAKq7D,wBAAwBtmD,EAAO1C,EAAS,CACxD,SACA,QACA,WACA,SACA,YAEE6oD,EAAUl7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,WACnD8oD,EAAMn7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,OAC/C+oD,EAAWp7D,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,YACpD4yB,EAAOjlC,KAAKi7D,oBAAoBlmD,EAAO1C,EAAS,QAsCpD,OApCArS,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,mCACVw7D,GAEFh7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,kCACVyrB,GAEFjrB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,oCACVmoC,GAEF3nC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,kCACVylC,GAEFjlC,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,qCACV07D,GAEFl7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,iCACV27D,GAEFn7D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,sCACV47D,GAGKx0D,EAGTy0D,wBAAwBtmD,EAAO1C,EAASipD,GACtC,IAAIxjC,EAAS/iB,EAAMsJ,MAAM5Z,QAAQ4G,GAC/BiwD,EAAQv3D,SAASsH,EAAEpL,KAAKA,KAAKs7D,UAE3BC,EAAex7D,KAAK03B,YAAYrlB,EAASylB,EAAQ,QAEjD2jC,EAAiBz7D,KAAKqX,6BAG1B,OAFAokD,EAAenyD,QAAUkyD,EAElBC,EAGTR,oBAAoBlmD,EAAO1C,EAASkpD,GAClC,IAAIzjC,EAAS/iB,EAAMsJ,MAAM5Z,QAAQ4G,GAAMA,EAAEpL,KAAKA,KAAKs7D,SAAWA,IAC1DC,EAAex7D,KAAK03B,YAAYrlB,EAASylB,EAAQ,QAEjD2jC,EAAiBz7D,KAAKqX,6BAG1B,OAFAokD,EAAenyD,QAAUkyD,EAElBC,EAGTjB,UAAUzlD,EAAO1C,GACf,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,QAEtC+P,EAAYnpB,KAAK07D,eAAe3mD,EAAO1C,EAAS,aAChDspD,EAAa37D,KAAK07D,eAAe3mD,EAAO1C,EAAS,cACjD64B,EAAclrC,KAAK07D,eAAe3mD,EAAO1C,EAAS,eAkBtD,OAhBArS,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,4BACV2pB,GAEFnpB,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,wCACVm8D,GAEF37D,KAAKwX,gCACH5Q,EACA5G,KAAKR,KAAK,yCACV0rC,GAGKtkC,EAGT80D,eAAe3mD,EAAO1C,EAAS3Q,GAC7B,IAAIiF,EAAOoO,EAAMsJ,MAAM5Z,QACpB4G,GAAMA,EAAEpL,KAAKA,KAAK27D,QAAUl6D,GAAQ2J,EAAEpL,KAAKyB,MAAQA,IAElDyuC,EAAanwC,KAAK03B,YAAYrlB,EAAS1L,EAAM,QAE7Ck1D,EAAe77D,KAAKqX,6BAGxB,OAFAwkD,EAAavyD,QAAU6mC,EAEhB0rB,EAITnkC,YAAYrlB,EAAS0mB,EAASzzB,GAC5B,OAAOyzB,EACJt0B,QAAQkV,KAAQA,IAChBpY,KAAKoY,IACJ,IAAIlU,EAAe,CAACH,EAAW+M,EAASsH,EAAElY,IAAIkE,KAAK3F,KAAKoF,WACpDuB,EAAO,CAAE1B,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAElY,IAK7D,MAHiB,QAAb6D,QAAgDoY,IAAzB/D,EAAE1Z,KAAKA,KAAKynB,WACrC/gB,EAAK1B,KAAO0U,EAAE1U,KAAO,MAAQ0U,EAAE1Z,KAAKA,KAAKynB,UAEpC/gB,MC1TR,MAAMm1D,0BAA0B18C,YACrCxf,cACEG,QAGFkgB,oBAAoBtc,EAAO8B,GACzBjH,QAAQC,IAAIgH,GAEZ,IAAI0b,EAAU1b,EAAa2b,MAAM,KACX,GAAlBD,EAAQtf,QAAa9B,MAAM0f,uBAE/B,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GACvBurB,EAAW7oB,EAAM9U,KAAKyB,KAE1B,GAAiB,cAAbk8B,EACF,OAAQt4B,GACN,IAAK,OACHyP,EAAMgnD,UAAU16C,GAChB,MAEF,IAAK,OACc,cAAbA,EAA0BtM,EAAMinD,aACd,kBAAb36C,EAA8BtM,EAAMknD,iBACvB,uBAAb56C,GACPtM,EAAMmnD,sBACR,MAEF,IAAK,SACL,IAAK,OACHnnD,EAAMonD,qBAAqB96C,QAG1B,GAAiB,UAAbuc,EACT,OAAQt4B,GACN,IAAK,OACHyP,EAAMonD,qBAAqB96C,KCrC9B,MAAM+6C,gCAAgCv5C,cAC3CjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAEhC,OADoB,IAAIuV,gBAAc3V,EAAeI,GAKvDic,2BAGE,MAFc,CAAExK,KAAM,mBAMxBqK,iBAAiBE,GACf,OAAO,IAAIuC,kBAIb5B,mBAAmB3kB,EAASJ,KC3BvB,MAAMq9D,4BAA4B1/C,cACvC/c,YAAYoH,EAAeI,GACzBrH,MAAMiH,EAAeI,GAIvB6V,wBAAwB1K,EAAO4B,GAC7B,IAAIvN,EAAS5G,KAAKud,4BAElB,IAAKhL,EAAO,OAAO3L,EAEnB,IAAIyL,EAAUE,EAAMtS,KAAKyF,IAEzBkB,EAAOyL,QAAUA,EAEjB,IAAI0C,EAAQxC,EAAMwC,MAClB,IAAKA,EAAO,OAAOnO,EAEnB,GAAuB,cAAnBmO,EAAM9U,KAAKyB,KAAsB,OAAOkF,EAE5CA,EAAO4N,QAAUO,EAAMtT,GAEvB,IAAI66D,EAAkBt8D,KAAKu8D,sBAAsBxnD,EAAO1C,GACxDrS,KAAKqZ,yBAAyBzS,EAAQ,UAAW01D,GAEjD,IAAIE,EAAsBx8D,KAAKy8D,0BAA0B1nD,EAAO1C,GAChErS,KAAKqZ,yBAAyBzS,EAAQ,cAAe41D,GAErD,IAAIE,EAAiB18D,KAAK28D,qBAAqB5nD,EAAO1C,GAGtD,OAFArS,KAAKqZ,yBAAyBzS,EAAQ,SAAU81D,GAEzC91D,EAGT+1D,qBAAqB5nD,EAAO1C,GAC1B,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,UAC1CxS,EAAO3B,KAAO,SACd,IAiBI23D,EAAe58D,KAAK03B,YAAYrlB,EAfvB,CACX,CAAEpN,KAAM,YAAaxD,GAAI,OACzB,CAAEwD,KAAM,OAAQxD,GAAI,OACpB,CAAEwD,KAAM,UAAWxD,GAAI,OACvB,CAAEwD,KAAM,QAASxD,GAAI,OACrB,CAAEwD,KAAM,SAAUxD,GAAI,OACtB,CAAEwD,KAAM,YAAaxD,GAAI,OACzB,CAAEwD,KAAM,YAAaxD,GAAI,QATX,OAkBZo7D,EAAoB78D,KAAKqX,6BAC7BwlD,EAAkBvzD,QAAUszD,EAC5B58D,KAAKwX,gCACH5Q,EACA,YACAi2D,GAGF,IAAIC,EAAgB98D,KAAK03B,YAAYrlB,EAdlB,CACjB,CAAEpN,KAAM,YAAaxD,GAAI,UACzB,CAAEwD,KAAM,WAAYxD,GAAI,UAYkC,UACxDs7D,EAAoB/8D,KAAKqX,6BAQ7B,GAPA0lD,EAAkBzzD,QAAUwzD,EAC5B98D,KAAKwX,gCACH5Q,EACA,cACAm2D,GAGqB,OAAnBhoD,EAAM9U,KAAKyB,KAAe,CAC5B,IAAIs7D,EAAch9D,KAAK03B,YACrBrlB,EACA,CAAC,CAAEpN,KAAM,QAASxD,GAAI,UACtB,SAEEw7D,EAAmBj9D,KAAKqX,6BAC5B4lD,EAAiB3zD,QAAU0zD,EAC3Bh9D,KAAKwX,gCAAgC5Q,EAAQ,QAASq2D,GAGxD,OAAOr2D,EAGT61D,0BAA0B1nD,EAAO1C,GAC/B,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,eAE1CxS,EAAO3B,KAAO,cACd,IAIIi4D,EAFQnoD,EAAMsJ,MAEM5Z,QAAQkV,GAAsB,eAAhBA,EAAE1Z,KAAKyB,OAC7Cw7D,EAAY9xD,MAAK,SAAUC,EAAGC,GAC5B,OAAOD,EAAEpG,KAAKolB,cAAc/e,EAAErG,SAEhC,IAAIk4D,EAAan9D,KAAK03B,YAAYrlB,EAAS6qD,EAR3B,QASZE,EAAiBp9D,KAAKqX,6BAI1B,OAHA+lD,EAAe9zD,QAAU6zD,EACzBn9D,KAAKwX,gCAAgC5Q,EAAQ,cAAew2D,GAErDx2D,EAGT21D,sBAAsBxnD,EAAO1C,GAC3B,IAAIzL,EAAS5G,KAAKoZ,wBAAwB,WAE1CxS,EAAO3B,KAAO,UACd,IAAIK,EAAY,OAEZ+Y,EAAQtJ,EAAMsJ,MAEd+Y,EAAU/Y,EAAM5Z,QAAQkV,GAAsB,YAAhBA,EAAE1Z,KAAKyB,OACzC01B,EAAQhsB,MAAK,SAAUC,EAAGC,GACxB,OAAOD,EAAEpG,KAAKolB,cAAc/e,EAAErG,SAEhC,IAAIo4D,EAAiBr9D,KAAK03B,YAAYrlB,EAAS+kB,EAAS9xB,GACpD+yD,EAAqBr4D,KAAKqX,6BAC9BghD,EAAmB/uD,QAAU+zD,EAC7Br9D,KAAKwX,gCAAgC5Q,EAAQ,UAAWyxD,GAExD,IAAIiF,EAAWj/C,EAAM5Z,QAAQkV,GAAsB,oBAAhBA,EAAE1Z,KAAKyB,OAC1C47D,EAASlyD,MAAK,SAAUC,EAAGC,GACzB,OAAOD,EAAEpG,KAAKolB,cAAc/e,EAAErG,SAEhC,IAAIs4D,EAAkBv9D,KAAK03B,YAAYrlB,EAASirD,EAAUh4D,GACtDk4D,EAAsBx9D,KAAKqX,6BAQ/B,OAPAmmD,EAAoBl0D,QAAUi0D,EAC9Bv9D,KAAKwX,gCACH5Q,EACA,sBACA42D,GAGK52D,EAIT8wB,YAAYrlB,EAAS0mB,EAASzzB,GAC5B,OAAOyzB,EACJt0B,QAAQkV,KAAQA,IAChBpY,KAAKoY,IACJ,IAAIlU,EAAe,CAACH,EAAW+M,EAASsH,EAAElY,IAAIkE,KAAK3F,KAAKoF,WACxD,MAAO,CAAEH,KAAM0U,EAAE1U,KAAMQ,aAAcA,EAAchE,GAAIkY,EAAElY,QChJ1D,MAAMg8D,sBAAsBr+C,YACjCxf,cACEG,QAIFkgB,oBAAoBtc,EAAO8B,GACzB,IAAI0b,EAAU1b,EAAa2b,MAAM,KAEX,GAAlBD,EAAQtf,QACV9B,MAAM0f,uBAGR,IAAIna,EAAY6b,EAAQ,GACpB9O,EAAU8O,EAAQ,GAClBE,EAAWF,EAAQ,GAEnBpM,EAAQhV,MAAMue,SAASjM,GAE3B,OAAQ/M,GACN,IAAK,OACHtF,KAAKwlB,cAAc7hB,EAAOoR,EAAOsM,GACjC,MACF,IAAK,MACHrhB,KAAK09D,QAAQ/5D,EAAOoR,EAAOsM,GAC3B,MACF,IAAK,SACHrhB,KAAK29D,mBAAmBh6D,EAAOoR,EAAOsM,GACtC,MACF,IAAK,QACHrhB,KAAK49D,UAAUj6D,EAAOoR,EAAOsM,IAOnCu8C,UAAUj6D,EAAOoR,EAAOsM,GACtBtM,EAAM8oD,WAAW,CAAE54D,KAAM,UAG3B04D,mBAAmBh6D,EAAOoR,EAAO+oD,GAC/B,IAAIC,EACAC,GAAQ,EAMC,IAAIz+D,OAAO,CACtBe,MAAO,6BACPI,QAPkB,iPAQlBI,QAAS,CACPm9D,MAAO,CACLj9D,KAAM,kCACNC,MAAO,cACPC,SAAWE,IACT28D,EAAW38D,EAAKQ,KAAK,iBAAiBW,MAClCw7D,IACFA,EAAWv1D,SAASu1D,GACpBC,GAAQ,KAIdE,SAAU,CACRl9D,KAAM,+BACNC,MAAO,aAGXc,QAAS,WACTmC,MAAQ9C,IACF48D,GACFjpD,EAAM8oD,WAAW,CACf54D,KAAM,cACNxD,GAAIq8D,EACJC,SAAUA,OAIX/7D,QAAO,GAGhB07D,QAAQ/5D,EAAOoR,EAAOsM,GACpBtM,EAAM8oD,WAAW,CAAE54D,KAAM,WAAYxD,GAAI4f,IAG3CmE,cAAc7hB,EAAOoR,EAAOsM,GAC1BtM,EAAMsJ,MAAMzc,MAAM+X,GAAMA,EAAElY,KAAO4f,IAAU88C,kBCtFxC,MAAMC,4BAA4Bv7C,cACvCjjB,YAAYR,GACVW,MAAMX,GAIR0jB,mBAAmB9b,EAAeI,GAGhC,OAFoB,IAAIuV,oBAAc3V,EAAeI,GAMvDic,2BAKE,MAFc,CAAExK,KAFA,cAQlBqK,iBAAiBE,GACf,IAAIrW,EACJ,OAAQqW,GACN,IAAK,OACL,QACErW,EAAc,IAAI4Y,cAItB,OAAO5Y,EAITgX,mBAAmB3kB,EAASJ,KCjC9B,IAAI4N,EAEJ1K,MAAMqB,GAAG,QAAQ,MCNV,SAAS86D,sBACd19D,WAAW29D,eAAe,OAAO,SAAUC,GACzC,OAAKA,GAAUA,EAAO18D,OAAS,EAAU,GAClC08D,EAAO,GAAGn0C,cAAgBm0C,EAAO9wC,MAAM,MAGhD9sB,WAAW29D,eAAe,UAAU,SAAUE,EAAIC,EAAUC,EAAI5+D,GAC9D,OAAQ2+D,GACN,IAAK,KACH,OAAOD,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,IAAK,MACH,OAAOw+D,IAAOE,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACxD,IAAK,KACH,OAAOw+D,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,IAAK,MACH,OAAOw+D,IAAOE,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACxD,IAAK,IACH,OAAOw+D,EAAKE,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACtD,IAAK,KACH,OAAOw+D,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,IAAK,IACH,OAAOw+D,EAAKE,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACtD,IAAK,KACH,OAAOw+D,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,IAAK,KACH,OAAOw+D,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,IAAK,KACH,OAAOw+D,GAAME,EAAK5+D,EAAQ6+D,GAAG3+D,MAAQF,EAAQ8+D,QAAQ5+D,MACvD,QACE,OAAOF,EAAQ8+D,QAAQ5+D,UAI7BW,WAAW29D,eAAe,cAAc,SAAUO,GAChD,OAAIh4D,IAAa,mBACRg4D,EAAMF,GAAG3+D,MAGX6+D,EAAMD,QAAQ5+D,SAGvB8+D,cAAc,CACZ,kDACA,qDACA,mDACA,gDACA,qDDvCFT,GAEA,IAAInZ,EAAStmD,KAAKqB,KAAKilD,OAAOzjD,GAE9BmL,EEQK,MAAMmyD,qBACXjqB,cAAcoQ,EAAQ9lD,GACpB,OAAQ8lD,GACN,IAAK,qBACH,OAAO,IAAIx/B,kBAAkBtmB,GAC/B,IAAK,YACH,OAAO,IAAIm6B,uBAAuBn6B,GACpC,IAAK,QACH,OAAO,IAAIy3B,mBAAmBz3B,GAChC,IAAK,eACH,OAAO,IAAI2/B,0BAA0B3/B,GACvC,IAAK,MACH,OAAO,IAAIonC,iBAAiBpnC,GAC9B,IAAK,OACH,OAAO,IAAI+nC,kBAAkB/nC,GAC/B,IAAK,OACH,OAAO,IAAI45D,kBAAkB55D,GAC/B,IAAK,OACH,OAAO,IAAIu2C,kBAAkBv2C,GAC/B,IAAK,QACH,OAAO,IAAIu7C,mBAAmBv7C,GAChC,IAAK,OACH,OAAO,IAAI28C,kBAAkB38C,GAC/B,IAAK,SACH,OAAO,IAAImiD,oBAAoBniD,GACjC,IAAK,SACH,OAAO,IAAIwnD,oBAAoBxnD,GACjC,IAAK,QACH,OAAO,IAAIsuD,mBAAmBtuD,GAChC,IAAK,cACH,OAAO,IAAIwwD,yBAAyBxwD,GACtC,IAAK,aACH,OAAO,IAAIiyD,wBAAwBjyD,GACrC,IAAK,YACH,OAAO,IAAI2zD,uBAAuB3zD,GACpC,IAAK,WACH,OAAO,IAAIq4D,sBAAsBr4D,GACnC,IAAK,SACH,OAAO,IAAI26D,oBAAoB36D,GACjC,IAAK,aACH,OAAO,IAAIg9D,wBAAwBh9D,GACrC,IAAK,SAEL,IAAK,aACH,OAAO,IAAIg/D,oBAAoBh/D,MFpDA01C,OAAOoQ,EAT9B,oBAUdt4C,EAAc0W,sBAGhBphB,MAAMqB,GAAG,eAAepC,UACtB,IAAI0D,EAAOjG,KAAKiG,KAEhB,IAAKA,EAAM,MAAM,IAAI8a,MAAM,qCAEtB/gB,KAAKM,iBACRN,KAAKM,eAAiB,IAAIkN,eAAeQ,SACnChO,KAAKM,eAAe2N,KAAKhI,IAGjCjG,KAAKM,eAAemO,mBAAmBmF,OAAOjG,QAE9CrK,MAAMqB,GAAG,gBAAgB,CAACgP,EAAO2B,KAC/BtV,KAAKM,eAAekO,YAGtBlL,MAAMqB,GAAG,eAAe,CAACgQ,EAAOhB,EAAOysD,EAAMl/D,EAASm/D,KAEhDD,EAAKj8B,eAAe,MAAQi8B,EAAKj8B,eAAe,MAChDnkC,KAAKM,eAAeoV,iBAAiB/B,IACvC3T,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,eAAe,CAACgQ,EAAOhB,EAAOgoC,EAAQjiC,KACzC1Z,KAAKM,eAAeoV,iBAAiB/B,IACvC3T,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,cAAc,CAACgP,EAAOsC,KACzBjW,KAAKM,eAAe0V,gBAAgBrC,EAAOsC,IAC7CjW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,eAAgBwR,IACnBnW,KAAKM,eAAe4V,uBAAuBC,IAC7CnW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,eAAgBwR,IACnBnW,KAAKM,eAAe4V,uBAAuBC,IAC7CnW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,cAAeoD,IACtB,IAAIoO,EAAQpO,EAAKoO,MACbnW,KAAKM,eAAe4V,uBAAuBC,IAC7CnW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,cAAeoD,IACtB,IAAIoO,EAAQpO,EAAKoO,MACbnW,KAAKM,eAAe4V,uBAAuBC,IAC7CnW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,cAAeoD,IACtB,IAAIoO,EAAQpO,EAAKoO,MACbnW,KAAKM,eAAe4V,uBAAuBC,IAC7CnW,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,wBAAwB,KAC/B3E,KAAKM,eAAeiT,gBACpBvT,KAAKM,eAAekT,eAGtBlQ,MAAMqB,GAAG,oBAAoB,CAAC27D,EAAQ99D,KACpC,IAAIuD,EAAWu6D,GAAQv6D,SAErB/F,KAAKM,eAAe8V,mBAClB,GAAGrQ,GAAUK,WAAWL,GAAUM,SAGpCrG,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,oBAAoB,CAAC27D,EAAQ99D,KACpC,IAAIuD,EAAWu6D,GAAQv6D,SAErB/F,KAAKM,eAAe8V,mBAClB,GAAGrQ,GAAUK,WAAWL,GAAUM,SAGpCrG,KAAKM,eAAekO,YAGxBlL,MAAMqB,GAAG,gBAAiBgsB,IACxB3wB,KAAKM,eAAekO,YAGtBlL,MAAMqB,GAAG,gBAAiBgsB,IACxB3wB,KAAKM,eAAekO,YAGtBlL,MAAMqB,GAAG,gBAAiBgsB,IACxB3wB,KAAKM,eAAekO,YAGtBlL,MAAMqB,GAAG,mBAAmB,CAACgsB,EAAQC,KACnC5wB,KAAKM,eAAekO,YAGtBlL,MAAMqB,GAAG,6BAA6B,KACpC3E,KAAKM,eAAekO,YAGtBxO,KAAKM,eAAekO"
}
